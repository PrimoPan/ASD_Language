{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"BaseButton\", {\n  enumerable: true,\n  get: function get() {\n    return _GestureButtons.BaseButton;\n  }\n});\nObject.defineProperty(exports, \"BorderlessButton\", {\n  enumerable: true,\n  get: function get() {\n    return _GestureButtons.BorderlessButton;\n  }\n});\nObject.defineProperty(exports, \"Directions\", {\n  enumerable: true,\n  get: function get() {\n    return _Directions.Directions;\n  }\n});\nObject.defineProperty(exports, \"DrawerLayout\", {\n  enumerable: true,\n  get: function get() {\n    return _DrawerLayout.default;\n  }\n});\nObject.defineProperty(exports, \"DrawerLayoutAndroid\", {\n  enumerable: true,\n  get: function get() {\n    return _GestureComponents.DrawerLayoutAndroid;\n  }\n});\nObject.defineProperty(exports, \"FlatList\", {\n  enumerable: true,\n  get: function get() {\n    return _GestureComponents.FlatList;\n  }\n});\nObject.defineProperty(exports, \"FlingGestureHandler\", {\n  enumerable: true,\n  get: function get() {\n    return _FlingGestureHandler.FlingGestureHandler;\n  }\n});\nObject.defineProperty(exports, \"ForceTouchGestureHandler\", {\n  enumerable: true,\n  get: function get() {\n    return _ForceTouchGestureHandler.ForceTouchGestureHandler;\n  }\n});\nObject.defineProperty(exports, \"Gesture\", {\n  enumerable: true,\n  get: function get() {\n    return _gestureObjects.GestureObjects;\n  }\n});\nObject.defineProperty(exports, \"GestureDetector\", {\n  enumerable: true,\n  get: function get() {\n    return _GestureDetector.GestureDetector;\n  }\n});\nObject.defineProperty(exports, \"GestureHandlerRootView\", {\n  enumerable: true,\n  get: function get() {\n    return _GestureHandlerRootView.default;\n  }\n});\nObject.defineProperty(exports, \"HoverEffect\", {\n  enumerable: true,\n  get: function get() {\n    return _hoverGesture.HoverEffect;\n  }\n});\nObject.defineProperty(exports, \"LongPressGestureHandler\", {\n  enumerable: true,\n  get: function get() {\n    return _LongPressGestureHandler.LongPressGestureHandler;\n  }\n});\nObject.defineProperty(exports, \"MouseButton\", {\n  enumerable: true,\n  get: function get() {\n    return _gestureHandlerCommon.MouseButton;\n  }\n});\nObject.defineProperty(exports, \"NativeViewGestureHandler\", {\n  enumerable: true,\n  get: function get() {\n    return _NativeViewGestureHandler.NativeViewGestureHandler;\n  }\n});\nObject.defineProperty(exports, \"PanGestureHandler\", {\n  enumerable: true,\n  get: function get() {\n    return _PanGestureHandler.PanGestureHandler;\n  }\n});\nObject.defineProperty(exports, \"PinchGestureHandler\", {\n  enumerable: true,\n  get: function get() {\n    return _PinchGestureHandler.PinchGestureHandler;\n  }\n});\nObject.defineProperty(exports, \"PointerType\", {\n  enumerable: true,\n  get: function get() {\n    return _PointerType.PointerType;\n  }\n});\nObject.defineProperty(exports, \"Pressable\", {\n  enumerable: true,\n  get: function get() {\n    return _Pressable.default;\n  }\n});\nObject.defineProperty(exports, \"PureNativeButton\", {\n  enumerable: true,\n  get: function get() {\n    return _GestureButtons.PureNativeButton;\n  }\n});\nObject.defineProperty(exports, \"RawButton\", {\n  enumerable: true,\n  get: function get() {\n    return _GestureButtons.RawButton;\n  }\n});\nObject.defineProperty(exports, \"RectButton\", {\n  enumerable: true,\n  get: function get() {\n    return _GestureButtons.RectButton;\n  }\n});\nObject.defineProperty(exports, \"RefreshControl\", {\n  enumerable: true,\n  get: function get() {\n    return _GestureComponents.RefreshControl;\n  }\n});\nObject.defineProperty(exports, \"RotationGestureHandler\", {\n  enumerable: true,\n  get: function get() {\n    return _RotationGestureHandler.RotationGestureHandler;\n  }\n});\nObject.defineProperty(exports, \"ScrollView\", {\n  enumerable: true,\n  get: function get() {\n    return _GestureComponents.ScrollView;\n  }\n});\nObject.defineProperty(exports, \"State\", {\n  enumerable: true,\n  get: function get() {\n    return _State.State;\n  }\n});\nObject.defineProperty(exports, \"Swipeable\", {\n  enumerable: true,\n  get: function get() {\n    return _Swipeable.default;\n  }\n});\nObject.defineProperty(exports, \"Switch\", {\n  enumerable: true,\n  get: function get() {\n    return _GestureComponents.Switch;\n  }\n});\nObject.defineProperty(exports, \"TapGestureHandler\", {\n  enumerable: true,\n  get: function get() {\n    return _TapGestureHandler.TapGestureHandler;\n  }\n});\nObject.defineProperty(exports, \"TextInput\", {\n  enumerable: true,\n  get: function get() {\n    return _GestureComponents.TextInput;\n  }\n});\nObject.defineProperty(exports, \"TouchableHighlight\", {\n  enumerable: true,\n  get: function get() {\n    return _touchables.TouchableHighlight;\n  }\n});\nObject.defineProperty(exports, \"TouchableNativeFeedback\", {\n  enumerable: true,\n  get: function get() {\n    return _touchables.TouchableNativeFeedback;\n  }\n});\nObject.defineProperty(exports, \"TouchableOpacity\", {\n  enumerable: true,\n  get: function get() {\n    return _touchables.TouchableOpacity;\n  }\n});\nObject.defineProperty(exports, \"TouchableWithoutFeedback\", {\n  enumerable: true,\n  get: function get() {\n    return _touchables.TouchableWithoutFeedback;\n  }\n});\nObject.defineProperty(exports, \"createNativeWrapper\", {\n  enumerable: true,\n  get: function get() {\n    return _createNativeWrapper.default;\n  }\n});\nObject.defineProperty(exports, \"enableExperimentalWebImplementation\", {\n  enumerable: true,\n  get: function get() {\n    return _EnableNewWebImplementation.enableExperimentalWebImplementation;\n  }\n});\nObject.defineProperty(exports, \"enableLegacyWebImplementation\", {\n  enumerable: true,\n  get: function get() {\n    return _EnableNewWebImplementation.enableLegacyWebImplementation;\n  }\n});\nObject.defineProperty(exports, \"gestureHandlerRootHOC\", {\n  enumerable: true,\n  get: function get() {\n    return _gestureHandlerRootHOC.default;\n  }\n});\nvar _init = require(\"./init\");\nvar _Directions = require(\"./Directions\");\nvar _State = require(\"./State\");\nvar _PointerType = require(\"./PointerType\");\nvar _gestureHandlerRootHOC = _interopRequireDefault(require(\"./components/gestureHandlerRootHOC\"));\nvar _GestureHandlerRootView = _interopRequireDefault(require(\"./components/GestureHandlerRootView\"));\nvar _gestureHandlerCommon = require(\"./handlers/gestureHandlerCommon\");\nvar _TapGestureHandler = require(\"./handlers/TapGestureHandler\");\nvar _ForceTouchGestureHandler = require(\"./handlers/ForceTouchGestureHandler\");\nvar _LongPressGestureHandler = require(\"./handlers/LongPressGestureHandler\");\nvar _PanGestureHandler = require(\"./handlers/PanGestureHandler\");\nvar _PinchGestureHandler = require(\"./handlers/PinchGestureHandler\");\nvar _RotationGestureHandler = require(\"./handlers/RotationGestureHandler\");\nvar _FlingGestureHandler = require(\"./handlers/FlingGestureHandler\");\nvar _createNativeWrapper = _interopRequireDefault(require(\"./handlers/createNativeWrapper\"));\nvar _GestureDetector = require(\"./handlers/gestures/GestureDetector\");\nvar _gestureObjects = require(\"./handlers/gestures/gestureObjects\");\nvar _NativeViewGestureHandler = require(\"./handlers/NativeViewGestureHandler\");\nvar _GestureButtons = require(\"./components/GestureButtons\");\nvar _touchables = require(\"./components/touchables\");\nvar _GestureComponents = require(\"./components/GestureComponents\");\nvar _hoverGesture = require(\"./handlers/gestures/hoverGesture\");\nvar _Swipeable = _interopRequireDefault(require(\"./components/Swipeable\"));\nvar _Pressable = _interopRequireDefault(require(\"./components/Pressable\"));\nvar _DrawerLayout = _interopRequireDefault(require(\"./components/DrawerLayout\"));\nvar _EnableNewWebImplementation = require(\"./EnableNewWebImplementation\");\n(0, _init.initialize)();","map":{"version":3,"names":["_init","require","_Directions","_State","_PointerType","_gestureHandlerRootHOC","_interopRequireDefault","_GestureHandlerRootView","_gestureHandlerCommon","_TapGestureHandler","_ForceTouchGestureHandler","_LongPressGestureHandler","_PanGestureHandler","_PinchGestureHandler","_RotationGestureHandler","_FlingGestureHandler","_createNativeWrapper","_GestureDetector","_gestureObjects","_NativeViewGestureHandler","_GestureButtons","_touchables","_GestureComponents","_hoverGesture","_Swipeable","_Pressable","_DrawerLayout","_EnableNewWebImplementation","initialize"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/react-native-gesture-handler/lib/module/index.ts"],"sourcesContent":["import { initialize } from './init';\n\nexport { Directions } from './Directions';\nexport { State } from './State';\nexport { PointerType } from './PointerType';\nexport { default as gestureHandlerRootHOC } from './components/gestureHandlerRootHOC';\nexport { default as GestureHandlerRootView } from './components/GestureHandlerRootView';\nexport type {\n  // Event types\n  GestureEvent,\n  HandlerStateChangeEvent,\n  // Event payloads types\n  GestureEventPayload,\n  HandlerStateChangeEventPayload,\n  // Pointer events\n  GestureTouchEvent,\n  TouchData,\n  // New api event types\n  GestureUpdateEvent,\n  GestureStateChangeEvent,\n} from './handlers/gestureHandlerCommon';\nexport { MouseButton } from './handlers/gestureHandlerCommon';\nexport type { GestureType } from './handlers/gestures/gesture';\nexport type {\n  TapGestureHandlerEventPayload,\n  ForceTouchGestureHandlerEventPayload,\n  LongPressGestureHandlerEventPayload,\n  PanGestureHandlerEventPayload,\n  PinchGestureHandlerEventPayload,\n  RotationGestureHandlerEventPayload,\n  NativeViewGestureHandlerPayload,\n  FlingGestureHandlerEventPayload,\n} from './handlers/GestureHandlerEventPayload';\nexport type { TapGestureHandlerProps } from './handlers/TapGestureHandler';\nexport type { ForceTouchGestureHandlerProps } from './handlers/ForceTouchGestureHandler';\nexport type { ForceTouchGestureChangeEventPayload } from './handlers/gestures/forceTouchGesture';\nexport type { LongPressGestureHandlerProps } from './handlers/LongPressGestureHandler';\nexport type { PanGestureHandlerProps } from './handlers/PanGestureHandler';\nexport type { PanGestureChangeEventPayload } from './handlers/gestures/panGesture';\nexport type { PinchGestureHandlerProps } from './handlers/PinchGestureHandler';\nexport type { PinchGestureChangeEventPayload } from './handlers/gestures/pinchGesture';\nexport type { RotationGestureHandlerProps } from './handlers/RotationGestureHandler';\nexport type { FlingGestureHandlerProps } from './handlers/FlingGestureHandler';\nexport { TapGestureHandler } from './handlers/TapGestureHandler';\nexport { ForceTouchGestureHandler } from './handlers/ForceTouchGestureHandler';\nexport { LongPressGestureHandler } from './handlers/LongPressGestureHandler';\nexport { PanGestureHandler } from './handlers/PanGestureHandler';\nexport { PinchGestureHandler } from './handlers/PinchGestureHandler';\nexport { RotationGestureHandler } from './handlers/RotationGestureHandler';\nexport { FlingGestureHandler } from './handlers/FlingGestureHandler';\nexport { default as createNativeWrapper } from './handlers/createNativeWrapper';\nexport type { NativeViewGestureHandlerProps } from './handlers/NativeViewGestureHandler';\nexport { GestureDetector } from './handlers/gestures/GestureDetector';\nexport { GestureObjects as Gesture } from './handlers/gestures/gestureObjects';\nexport type { TapGestureType as TapGesture } from './handlers/gestures/tapGesture';\nexport type { PanGestureType as PanGesture } from './handlers/gestures/panGesture';\nexport type { FlingGestureType as FlingGesture } from './handlers/gestures/flingGesture';\nexport type { LongPressGestureType as LongPressGesture } from './handlers/gestures/longPressGesture';\nexport type { PinchGestureType as PinchGesture } from './handlers/gestures/pinchGesture';\nexport type { RotationGestureType as RotationGesture } from './handlers/gestures/rotationGesture';\nexport type { ForceTouchGestureType as ForceTouchGesture } from './handlers/gestures/forceTouchGesture';\nexport type { NativeGestureType as NativeGesture } from './handlers/gestures/nativeGesture';\nexport type { ManualGestureType as ManualGesture } from './handlers/gestures/manualGesture';\nexport type { HoverGestureType as HoverGesture } from './handlers/gestures/hoverGesture';\nexport type {\n  ComposedGestureType as ComposedGesture,\n  RaceGestureType as RaceGesture,\n  SimultaneousGestureType as SimultaneousGesture,\n  ExclusiveGestureType as ExclusiveGesture,\n} from './handlers/gestures/gestureComposition';\nexport type { GestureStateManagerType as GestureStateManager } from './handlers/gestures/gestureStateManager';\nexport { NativeViewGestureHandler } from './handlers/NativeViewGestureHandler';\nexport type {\n  RawButtonProps,\n  BaseButtonProps,\n  RectButtonProps,\n  BorderlessButtonProps,\n} from './components/GestureButtonsProps';\nexport {\n  RawButton,\n  BaseButton,\n  RectButton,\n  BorderlessButton,\n  PureNativeButton,\n} from './components/GestureButtons';\nexport type {\n  TouchableHighlightProps,\n  TouchableOpacityProps,\n  TouchableWithoutFeedbackProps,\n} from './components/touchables';\nexport {\n  TouchableHighlight,\n  TouchableNativeFeedback,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n} from './components/touchables';\nexport {\n  ScrollView,\n  Switch,\n  TextInput,\n  DrawerLayoutAndroid,\n  FlatList,\n  RefreshControl,\n} from './components/GestureComponents';\nexport { HoverEffect } from './handlers/gestures/hoverGesture';\nexport type {\n  // Events\n  GestureHandlerGestureEvent,\n  GestureHandlerStateChangeEvent,\n  // Event payloads\n  GestureHandlerGestureEventNativeEvent,\n  GestureHandlerStateChangeNativeEvent,\n  NativeViewGestureHandlerGestureEvent,\n  NativeViewGestureHandlerStateChangeEvent,\n  TapGestureHandlerGestureEvent,\n  TapGestureHandlerStateChangeEvent,\n  ForceTouchGestureHandlerGestureEvent,\n  ForceTouchGestureHandlerStateChangeEvent,\n  LongPressGestureHandlerGestureEvent,\n  LongPressGestureHandlerStateChangeEvent,\n  PanGestureHandlerGestureEvent,\n  PanGestureHandlerStateChangeEvent,\n  PinchGestureHandlerGestureEvent,\n  PinchGestureHandlerStateChangeEvent,\n  RotationGestureHandlerGestureEvent,\n  RotationGestureHandlerStateChangeEvent,\n  FlingGestureHandlerGestureEvent,\n  FlingGestureHandlerStateChangeEvent,\n  // Handlers props\n  NativeViewGestureHandlerProperties,\n  TapGestureHandlerProperties,\n  LongPressGestureHandlerProperties,\n  PanGestureHandlerProperties,\n  PinchGestureHandlerProperties,\n  RotationGestureHandlerProperties,\n  FlingGestureHandlerProperties,\n  ForceTouchGestureHandlerProperties,\n  // Buttons props\n  RawButtonProperties,\n  BaseButtonProperties,\n  RectButtonProperties,\n  BorderlessButtonProperties,\n} from './handlers/gestureHandlerTypesCompat';\n\nexport type { SwipeableProps } from './components/Swipeable';\nexport { default as Swipeable } from './components/Swipeable';\nexport type { PressableProps } from './components/Pressable';\nexport { default as Pressable } from './components/Pressable';\n\nexport type {\n  DrawerLayoutProps,\n  DrawerPosition,\n  DrawerState,\n  DrawerType,\n  DrawerLockMode,\n  DrawerKeyboardDismissMode,\n} from './components/DrawerLayout';\nexport { default as DrawerLayout } from './components/DrawerLayout';\n\nexport {\n  enableExperimentalWebImplementation,\n  enableLegacyWebImplementation,\n} from './EnableNewWebImplementation';\n\ninitialize();\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAAA,KAAA,GAAAC,OAAA;AAEA,IAAAC,WAAA,GAAAD,OAAA;AACA,IAAAE,MAAA,GAAAF,OAAA;AACA,IAAAG,YAAA,GAAAH,OAAA;AACA,IAAAI,sBAAA,GAAAC,sBAAA,CAAAL,OAAA;AACA,IAAAM,uBAAA,GAAAD,sBAAA,CAAAL,OAAA;AAeA,IAAAO,qBAAA,GAAAP,OAAA;AAsBA,IAAAQ,kBAAA,GAAAR,OAAA;AACA,IAAAS,yBAAA,GAAAT,OAAA;AACA,IAAAU,wBAAA,GAAAV,OAAA;AACA,IAAAW,kBAAA,GAAAX,OAAA;AACA,IAAAY,oBAAA,GAAAZ,OAAA;AACA,IAAAa,uBAAA,GAAAb,OAAA;AACA,IAAAc,oBAAA,GAAAd,OAAA;AACA,IAAAe,oBAAA,GAAAV,sBAAA,CAAAL,OAAA;AAEA,IAAAgB,gBAAA,GAAAhB,OAAA;AACA,IAAAiB,eAAA,GAAAjB,OAAA;AAkBA,IAAAkB,yBAAA,GAAAlB,OAAA;AAOA,IAAAmB,eAAA,GAAAnB,OAAA;AAYA,IAAAoB,WAAA,GAAApB,OAAA;AAMA,IAAAqB,kBAAA,GAAArB,OAAA;AAQA,IAAAsB,aAAA,GAAAtB,OAAA;AAyCA,IAAAuB,UAAA,GAAAlB,sBAAA,CAAAL,OAAA;AAEA,IAAAwB,UAAA,GAAAnB,sBAAA,CAAAL,OAAA;AAUA,IAAAyB,aAAA,GAAApB,sBAAA,CAAAL,OAAA;AAEA,IAAA0B,2BAAA,GAAA1B,OAAA;AAKA,IAAA2B,gBAAU","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}