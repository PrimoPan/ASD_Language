{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bisectRoot = bisectRoot;\nexports.calculateNewMassToMatchDuration = calculateNewMassToMatchDuration;\nexports.checkIfConfigIsValid = checkIfConfigIsValid;\nexports.criticallyDampedSpringCalculations = criticallyDampedSpringCalculations;\nexports.initialCalculations = initialCalculations;\nexports.isAnimationTerminatingCalculation = isAnimationTerminatingCalculation;\nexports.scaleZetaToMatchClamps = scaleZetaToMatchClamps;\nexports.underDampedSpringCalculations = underDampedSpringCalculations;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _index = require(\"../logger/index.js\");\nfunction checkIfConfigIsValid(config) {\n  'worklet';\n\n  var _config$clamp, _config$clamp2;\n  var errorMessage = '';\n  ['stiffness', 'damping', 'dampingRatio', 'restDisplacementThreshold', 'restSpeedThreshold', 'mass'].forEach(function (prop) {\n    var value = config[prop];\n    if (value <= 0) {\n      errorMessage += `, ${prop} must be grater than zero but got ${value}`;\n    }\n  });\n  if (config.duration < 0) {\n    errorMessage += `, duration can't be negative, got ${config.duration}`;\n  }\n  if ((_config$clamp = config.clamp) != null && _config$clamp.min && (_config$clamp2 = config.clamp) != null && _config$clamp2.max && config.clamp.min > config.clamp.max) {\n    errorMessage += `, clamp.min should be lower than clamp.max, got clamp: {min: ${config.clamp.min}, max: ${config.clamp.max}} `;\n  }\n  if (errorMessage !== '') {\n    _index.logger.warn('Invalid spring config' + errorMessage);\n  }\n  return errorMessage === '';\n}\nfunction bisectRoot(_ref) {\n  'worklet';\n\n  var min = _ref.min,\n    max = _ref.max,\n    func = _ref.func,\n    _ref$maxIterations = _ref.maxIterations,\n    maxIterations = _ref$maxIterations === void 0 ? 20 : _ref$maxIterations;\n  var ACCURACY = 0.00005;\n  var idx = maxIterations;\n  var current = (max + min) / 2;\n  while (Math.abs(func(current)) > ACCURACY && idx > 0) {\n    idx -= 1;\n    if (func(current) < 0) {\n      min = current;\n    } else {\n      max = current;\n    }\n    current = (min + max) / 2;\n  }\n  return current;\n}\nfunction initialCalculations() {\n  'worklet';\n\n  var mass = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var config = arguments.length > 1 ? arguments[1] : undefined;\n  if (config.skipAnimation) {\n    return {\n      zeta: 0,\n      omega0: 0,\n      omega1: 0\n    };\n  }\n  if (config.useDuration) {\n    var k = config.stiffness,\n      zeta = config.dampingRatio;\n    var omega0 = Math.sqrt(k / mass);\n    var omega1 = omega0 * Math.sqrt(1 - zeta ** 2);\n    return {\n      zeta: zeta,\n      omega0: omega0,\n      omega1: omega1\n    };\n  } else {\n    var c = config.damping,\n      m = config.mass,\n      _k = config.stiffness;\n    var _zeta = c / (2 * Math.sqrt(_k * m));\n    var _omega = Math.sqrt(_k / m);\n    var _omega2 = _omega * Math.sqrt(1 - _zeta ** 2);\n    return {\n      zeta: _zeta,\n      omega0: _omega,\n      omega1: _omega2\n    };\n  }\n}\nfunction scaleZetaToMatchClamps(animation, clamp) {\n  'worklet';\n\n  var zeta = animation.zeta,\n    toValue = animation.toValue,\n    startValue = animation.startValue;\n  var toValueNum = Number(toValue);\n  if (toValueNum === startValue) {\n    return zeta;\n  }\n  var _ref2 = toValueNum - startValue > 0 ? [clamp.min, clamp.max] : [clamp.max, clamp.min],\n    _ref3 = (0, _slicedToArray2.default)(_ref2, 2),\n    firstBound = _ref3[0],\n    secondBound = _ref3[1];\n  var relativeExtremum1 = secondBound !== undefined ? Math.abs((secondBound - toValueNum) / (toValueNum - startValue)) : undefined;\n  var relativeExtremum2 = firstBound !== undefined ? Math.abs((firstBound - toValueNum) / (toValueNum - startValue)) : undefined;\n  var newZeta1 = relativeExtremum1 !== undefined ? Math.abs(Math.log(relativeExtremum1) / Math.PI) : undefined;\n  var newZeta2 = relativeExtremum2 !== undefined ? Math.abs(Math.log(relativeExtremum2) / (2 * Math.PI)) : undefined;\n  var zetaSatisfyingClamp = [newZeta1, newZeta2].filter(function (x) {\n    return x !== undefined;\n  });\n  return Math.max.apply(Math, (0, _toConsumableArray2.default)(zetaSatisfyingClamp).concat([zeta]));\n}\nfunction calculateNewMassToMatchDuration(x0, config, v0) {\n  'worklet';\n\n  if (config.skipAnimation) {\n    return 0;\n  }\n  var k = config.stiffness,\n    zeta = config.dampingRatio,\n    threshold = config.restSpeedThreshold,\n    duration = config.duration;\n  var durationForMass = function durationForMass(mass) {\n    'worklet';\n\n    var amplitude = (mass * v0 * v0 + k * x0 * x0) / (Math.exp(1 - 0.5 * zeta) * k);\n    var c = zeta * 2 * Math.sqrt(k * mass);\n    return 1000 * (-2 * mass / c) * Math.log(threshold * 0.01 / amplitude) - duration;\n  };\n  return bisectRoot({\n    min: 0,\n    max: 100,\n    func: durationForMass\n  });\n}\nfunction criticallyDampedSpringCalculations(animation, precalculatedValues) {\n  'worklet';\n\n  var toValue = animation.toValue;\n  var v0 = precalculatedValues.v0,\n    x0 = precalculatedValues.x0,\n    omega0 = precalculatedValues.omega0,\n    t = precalculatedValues.t;\n  var criticallyDampedEnvelope = Math.exp(-omega0 * t);\n  var criticallyDampedPosition = toValue - criticallyDampedEnvelope * (x0 + (v0 + omega0 * x0) * t);\n  var criticallyDampedVelocity = criticallyDampedEnvelope * (v0 * (t * omega0 - 1) + t * x0 * omega0 * omega0);\n  return {\n    position: criticallyDampedPosition,\n    velocity: criticallyDampedVelocity\n  };\n}\nfunction underDampedSpringCalculations(animation, precalculatedValues) {\n  'worklet';\n\n  var toValue = animation.toValue,\n    current = animation.current,\n    velocity = animation.velocity;\n  var zeta = precalculatedValues.zeta,\n    t = precalculatedValues.t,\n    omega0 = precalculatedValues.omega0,\n    omega1 = precalculatedValues.omega1;\n  var v0 = -velocity;\n  var x0 = toValue - current;\n  var sin1 = Math.sin(omega1 * t);\n  var cos1 = Math.cos(omega1 * t);\n  var underDampedEnvelope = Math.exp(-zeta * omega0 * t);\n  var underDampedFrag1 = underDampedEnvelope * (sin1 * ((v0 + zeta * omega0 * x0) / omega1) + x0 * cos1);\n  var underDampedPosition = toValue - underDampedFrag1;\n  var underDampedVelocity = zeta * omega0 * underDampedFrag1 - underDampedEnvelope * (cos1 * (v0 + zeta * omega0 * x0) - omega1 * x0 * sin1);\n  return {\n    position: underDampedPosition,\n    velocity: underDampedVelocity\n  };\n}\nfunction isAnimationTerminatingCalculation(animation, config) {\n  'worklet';\n\n  var toValue = animation.toValue,\n    velocity = animation.velocity,\n    startValue = animation.startValue,\n    current = animation.current;\n  var isOvershooting = config.overshootClamping ? current > toValue && startValue < toValue || current < toValue && startValue > toValue : false;\n  var isVelocity = Math.abs(velocity) < config.restSpeedThreshold;\n  var isDisplacement = Math.abs(toValue - current) < config.restDisplacementThreshold;\n  return {\n    isOvershooting: isOvershooting,\n    isVelocity: isVelocity,\n    isDisplacement: isDisplacement\n  };\n}","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","bisectRoot","calculateNewMassToMatchDuration","checkIfConfigIsValid","criticallyDampedSpringCalculations","initialCalculations","isAnimationTerminatingCalculation","scaleZetaToMatchClamps","underDampedSpringCalculations","_toConsumableArray2","_slicedToArray2","_index","config","_config$clamp","_config$clamp2","errorMessage","forEach","prop","duration","clamp","min","max","logger","warn","_ref","func","_ref$maxIterations","maxIterations","ACCURACY","idx","current","Math","abs","mass","arguments","length","undefined","skipAnimation","zeta","omega0","omega1","useDuration","k","stiffness","dampingRatio","sqrt","c","damping","m","animation","toValue","startValue","toValueNum","Number","_ref2","_ref3","default","firstBound","secondBound","relativeExtremum1","relativeExtremum2","newZeta1","log","PI","newZeta2","zetaSatisfyingClamp","filter","x","apply","concat","x0","v0","threshold","restSpeedThreshold","durationForMass","amplitude","exp","precalculatedValues","t","criticallyDampedEnvelope","criticallyDampedPosition","criticallyDampedVelocity","position","velocity","sin1","sin","cos1","cos","underDampedEnvelope","underDampedFrag1","underDampedPosition","underDampedVelocity","isOvershooting","overshootClamping","isVelocity","isDisplacement","restDisplacementThreshold"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/react-native-reanimated/src/animation/springUtils.ts"],"sourcesContent":["'use strict';\nimport type {\n  Animation,\n  AnimatableValue,\n  Timestamp,\n  ReduceMotion,\n} from '../commonTypes';\nimport { logger } from '../logger';\n\n/**\n * Spring animation configuration.\n *\n * @param mass - The weight of the spring. Reducing this value makes the\n *   animation faster. Defaults to 1.\n * @param damping - How quickly a spring slows down. Higher damping means the\n *   spring will come to rest faster. Defaults to 10.\n * @param duration - Length of the animation (in milliseconds). Defaults to\n *   2000.\n * @param dampingRatio - How damped the spring is. Value 1 means the spring is\n *   critically damped, and value `>`1 means the spring is overdamped. Defaults\n *   to 0.5.\n * @param stiffness - How bouncy the spring is. Defaults to 100.\n * @param velocity - Initial velocity applied to the spring equation. Defaults\n *   to 0.\n * @param overshootClamping - Whether a spring can bounce over the `toValue`.\n *   Defaults to false.\n * @param restDisplacementThreshold - The displacement below which the spring\n *   will snap to toValue without further oscillations. Defaults to 0.01.\n * @param restSpeedThreshold - The speed in pixels per second from which the\n *   spring will snap to toValue without further oscillations. Defaults to 2.\n * @param reduceMotion - Determines how the animation responds to the device's\n *   reduced motion accessibility setting. Default to `ReduceMotion.System` -\n *   {@link ReduceMotion}.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/animations/withSpring/#config-\n */\nexport type SpringConfig = {\n  stiffness?: number;\n  overshootClamping?: boolean;\n  restDisplacementThreshold?: number;\n  restSpeedThreshold?: number;\n  velocity?: number;\n  reduceMotion?: ReduceMotion;\n} & (\n  | {\n      mass?: number;\n      damping?: number;\n      duration?: never;\n      dampingRatio?: never;\n      clamp?: never;\n    }\n  | {\n      mass?: never;\n      damping?: never;\n      duration?: number;\n      dampingRatio?: number;\n      clamp?: { min?: number; max?: number };\n    }\n);\n\n// This type contains all the properties from SpringConfig, which are changed to be required,\n// except for optional 'reduceMotion' and 'clamp'\nexport type DefaultSpringConfig = {\n  [K in keyof Required<SpringConfig>]: K extends 'reduceMotion' | 'clamp'\n    ? Required<SpringConfig>[K] | undefined\n    : Required<SpringConfig>[K];\n};\nexport type WithSpringConfig = SpringConfig;\n\nexport interface SpringConfigInner {\n  useDuration: boolean;\n  skipAnimation: boolean;\n}\n\nexport interface SpringAnimation extends Animation<SpringAnimation> {\n  current: AnimatableValue;\n  toValue: AnimatableValue;\n  velocity: number;\n  lastTimestamp: Timestamp;\n  startTimestamp: Timestamp;\n  startValue: number;\n  zeta: number;\n  omega0: number;\n  omega1: number;\n}\n\nexport interface InnerSpringAnimation\n  extends Omit<SpringAnimation, 'toValue' | 'current'> {\n  toValue: number;\n  current: number;\n}\nexport function checkIfConfigIsValid(config: DefaultSpringConfig): boolean {\n  'worklet';\n  let errorMessage = '';\n  (\n    [\n      'stiffness',\n      'damping',\n      'dampingRatio',\n      'restDisplacementThreshold',\n      'restSpeedThreshold',\n      'mass',\n    ] as const\n  ).forEach((prop) => {\n    const value = config[prop];\n    if (value <= 0) {\n      errorMessage += `, ${prop} must be grater than zero but got ${value}`;\n    }\n  });\n\n  if (config.duration < 0) {\n    errorMessage += `, duration can't be negative, got ${config.duration}`;\n  }\n\n  if (\n    config.clamp?.min &&\n    config.clamp?.max &&\n    config.clamp.min > config.clamp.max\n  ) {\n    errorMessage += `, clamp.min should be lower than clamp.max, got clamp: {min: ${config.clamp.min}, max: ${config.clamp.max}} `;\n  }\n\n  if (errorMessage !== '') {\n    logger.warn('Invalid spring config' + errorMessage);\n  }\n\n  return errorMessage === '';\n}\n\n// ts-prune-ignore-next This function is exported to be tested\nexport function bisectRoot({\n  min,\n  max,\n  func,\n  maxIterations = 20,\n}: {\n  min: number;\n  max: number;\n  func: (x: number) => number;\n  maxIterations?: number;\n}) {\n  'worklet';\n  const ACCURACY = 0.00005;\n  let idx = maxIterations;\n  let current = (max + min) / 2;\n  while (Math.abs(func(current)) > ACCURACY && idx > 0) {\n    idx -= 1;\n\n    if (func(current) < 0) {\n      min = current;\n    } else {\n      max = current;\n    }\n    current = (min + max) / 2;\n  }\n  return current;\n}\n\nexport function initialCalculations(\n  mass = 0,\n  config: DefaultSpringConfig & SpringConfigInner\n): {\n  zeta: number;\n  omega0: number;\n  omega1: number;\n} {\n  'worklet';\n\n  if (config.skipAnimation) {\n    return { zeta: 0, omega0: 0, omega1: 0 };\n  }\n\n  if (config.useDuration) {\n    const { stiffness: k, dampingRatio: zeta } = config;\n\n    /**\n     * Omega0 and omega1 denote angular frequency and natural angular frequency,\n     * see this link for formulas:\n     * https://courses.lumenlearning.com/suny-osuniversityphysics/chapter/15-5-damped-oscillations/\n     */\n    const omega0 = Math.sqrt(k / mass);\n    const omega1 = omega0 * Math.sqrt(1 - zeta ** 2);\n\n    return { zeta, omega0, omega1 };\n  } else {\n    const { damping: c, mass: m, stiffness: k } = config;\n\n    const zeta = c / (2 * Math.sqrt(k * m)); // damping ratio\n    const omega0 = Math.sqrt(k / m); // undamped angular frequency of the oscillator (rad/ms)\n    const omega1 = omega0 * Math.sqrt(1 - zeta ** 2); // exponential decay\n\n    return { zeta, omega0, omega1 };\n  }\n}\n\n/**\n * We make an assumption that we can manipulate zeta without changing duration\n * of movement. According to theory this change is small and tests shows that we\n * can indeed ignore it.\n */\nexport function scaleZetaToMatchClamps(\n  animation: SpringAnimation,\n  clamp: { min?: number; max?: number }\n): number {\n  'worklet';\n  const { zeta, toValue, startValue } = animation;\n  const toValueNum = Number(toValue);\n\n  if (toValueNum === startValue) {\n    return zeta;\n  }\n\n  const [firstBound, secondBound] =\n    toValueNum - startValue > 0\n      ? [clamp.min, clamp.max]\n      : [clamp.max, clamp.min];\n\n  /**\n   * The extrema we get from equation below are relative (we obtain a ratio), To\n   * get absolute extrema we convert it as follows:\n   *\n   * AbsoluteExtremum = startValue ± RelativeExtremum * (toValue - startValue)\n   * Where ± denotes:\n   *\n   * - If extremum is over the target\n   * - Otherwise\n   */\n\n  const relativeExtremum1 =\n    secondBound !== undefined\n      ? Math.abs((secondBound - toValueNum) / (toValueNum - startValue))\n      : undefined;\n\n  const relativeExtremum2 =\n    firstBound !== undefined\n      ? Math.abs((firstBound - toValueNum) / (toValueNum - startValue))\n      : undefined;\n\n  /**\n   * Use this formula http://hyperphysics.phy-astr.gsu.edu/hbase/oscda.html to\n   * calculate first two extrema. These extrema are located where cos = +- 1\n   *\n   * Therefore the first two extrema are:\n   *\n   *     Math.exp(-zeta * Math.PI);      (over the target)\n   *     Math.exp(-zeta * 2 * Math.PI);  (before the target)\n   */\n\n  const newZeta1 =\n    relativeExtremum1 !== undefined\n      ? Math.abs(Math.log(relativeExtremum1) / Math.PI)\n      : undefined;\n\n  const newZeta2 =\n    relativeExtremum2 !== undefined\n      ? Math.abs(Math.log(relativeExtremum2) / (2 * Math.PI))\n      : undefined;\n\n  const zetaSatisfyingClamp = [newZeta1, newZeta2].filter(\n    (x: number | undefined): x is number => x !== undefined\n  );\n  // The bigger is zeta the smaller are bounces, we return the biggest one\n  // because it should satisfy all conditions\n  return Math.max(...zetaSatisfyingClamp, zeta);\n}\n\n/** Runs before initial */\nexport function calculateNewMassToMatchDuration(\n  x0: number,\n  config: DefaultSpringConfig & SpringConfigInner,\n  v0: number\n) {\n  'worklet';\n  if (config.skipAnimation) {\n    return 0;\n  }\n\n  /**\n   * Use this formula:\n   * https://phys.libretexts.org/Bookshelves/University_Physics/Book%3A_University_Physics_(OpenStax)/Book%3A_University_Physics_I_-_Mechanics_Sound_Oscillations_and_Waves_(OpenStax)/15%3A_Oscillations/15.06%3A_Damped_Oscillations\n   * to find the asymptote and estimate the damping that gives us the expected\n   * duration\n   *\n   *             ⎛ ⎛ c⎞           ⎞\n   *             ⎜-⎜──⎟ ⋅ duration⎟\n   *             ⎝ ⎝2m⎠           ⎠\n   *        A ⋅ e                   = threshold\n   *\n   *\n   *       Amplitude calculated using \"Conservation of energy\"\n   *                        _________________\n   *                       ╱      2         2\n   *                      ╱ m ⋅ v0  + k ⋅ x0\n   *       amplitude =   ╱  ─────────────────\n   *                   ╲╱           k\n   *\n   *       And replace mass with damping ratio which is provided: m = (c^2)/(4 * k * zeta^2)\n   */\n  const {\n    stiffness: k,\n    dampingRatio: zeta,\n    restSpeedThreshold: threshold,\n    duration,\n  } = config;\n\n  const durationForMass = (mass: number) => {\n    'worklet';\n    const amplitude =\n      (mass * v0 * v0 + k * x0 * x0) / (Math.exp(1 - 0.5 * zeta) * k);\n    const c = zeta * 2 * Math.sqrt(k * mass);\n    return (\n      1000 * ((-2 * mass) / c) * Math.log((threshold * 0.01) / amplitude) -\n      duration\n    );\n  };\n\n  // Bisection turns out to be much faster than Newton's method in our case\n  return bisectRoot({ min: 0, max: 100, func: durationForMass });\n}\n\nexport function criticallyDampedSpringCalculations(\n  animation: InnerSpringAnimation,\n  precalculatedValues: {\n    v0: number;\n    x0: number;\n    omega0: number;\n    t: number;\n  }\n): { position: number; velocity: number } {\n  'worklet';\n  const { toValue } = animation;\n\n  const { v0, x0, omega0, t } = precalculatedValues;\n\n  const criticallyDampedEnvelope = Math.exp(-omega0 * t);\n  const criticallyDampedPosition =\n    toValue - criticallyDampedEnvelope * (x0 + (v0 + omega0 * x0) * t);\n\n  const criticallyDampedVelocity =\n    criticallyDampedEnvelope *\n    (v0 * (t * omega0 - 1) + t * x0 * omega0 * omega0);\n\n  return {\n    position: criticallyDampedPosition,\n    velocity: criticallyDampedVelocity,\n  };\n}\n\nexport function underDampedSpringCalculations(\n  animation: InnerSpringAnimation,\n  precalculatedValues: {\n    zeta: number;\n    v0: number;\n    x0: number;\n    omega0: number;\n    omega1: number;\n    t: number;\n  }\n): { position: number; velocity: number } {\n  'worklet';\n  const { toValue, current, velocity } = animation;\n\n  const { zeta, t, omega0, omega1 } = precalculatedValues;\n\n  const v0 = -velocity;\n  const x0 = toValue - current;\n\n  const sin1 = Math.sin(omega1 * t);\n  const cos1 = Math.cos(omega1 * t);\n\n  // under damped\n  const underDampedEnvelope = Math.exp(-zeta * omega0 * t);\n  const underDampedFrag1 =\n    underDampedEnvelope *\n    (sin1 * ((v0 + zeta * omega0 * x0) / omega1) + x0 * cos1);\n\n  const underDampedPosition = toValue - underDampedFrag1;\n  // This looks crazy -- it's actually just the derivative of the oscillation function\n  const underDampedVelocity =\n    zeta * omega0 * underDampedFrag1 -\n    underDampedEnvelope *\n      (cos1 * (v0 + zeta * omega0 * x0) - omega1 * x0 * sin1);\n\n  return { position: underDampedPosition, velocity: underDampedVelocity };\n}\n\nexport function isAnimationTerminatingCalculation(\n  animation: InnerSpringAnimation,\n  config: DefaultSpringConfig\n): {\n  isOvershooting: boolean;\n  isVelocity: boolean;\n  isDisplacement: boolean;\n} {\n  'worklet';\n  const { toValue, velocity, startValue, current } = animation;\n\n  const isOvershooting = config.overshootClamping\n    ? (current > toValue && startValue < toValue) ||\n      (current < toValue && startValue > toValue)\n    : false;\n\n  const isVelocity = Math.abs(velocity) < config.restSpeedThreshold;\n  const isDisplacement =\n    Math.abs(toValue - current) < config.restDisplacementThreshold;\n\n  return { isOvershooting, isVelocity, isDisplacement };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}