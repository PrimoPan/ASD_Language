{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InlinePropManager = void 0;\nexports.getInlineStyle = getInlineStyle;\nexports.hasInlineStyles = hasInlineStyles;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _utils = require(\"./utils.js\");\nvar _ViewDescriptorsSet = require(\"../ViewDescriptorsSet.js\");\nvar _ConfigHelper = require(\"../ConfigHelper.js\");\nvar _UpdateProps = _interopRequireDefault(require(\"../UpdateProps.js\"));\nvar _mappers = require(\"../mappers.js\");\nvar _isSharedValue = require(\"../isSharedValue.js\");\nfunction isInlineStyleTransform(transform) {\n  if (!Array.isArray(transform)) {\n    return false;\n  }\n  return transform.some(function (t) {\n    return hasInlineStyles(t);\n  });\n}\nfunction inlinePropsHasChanged(styles1, styles2) {\n  if (Object.keys(styles1).length !== Object.keys(styles2).length) {\n    return true;\n  }\n  for (var key of Object.keys(styles1)) {\n    if (styles1[key] !== styles2[key]) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction getInlinePropsUpdate(inlineProps) {\n  'worklet';\n\n  var update = {};\n  for (var _ref of Object.entries(inlineProps)) {\n    var _ref2 = (0, _slicedToArray2.default)(_ref, 2);\n    var key = _ref2[0];\n    var styleValue = _ref2[1];\n    if ((0, _isSharedValue.isSharedValue)(styleValue)) {\n      update[key] = styleValue.value;\n    } else if (Array.isArray(styleValue)) {\n      update[key] = styleValue.map(function (item) {\n        return getInlinePropsUpdate(item);\n      });\n    } else if (typeof styleValue === 'object') {\n      update[key] = getInlinePropsUpdate(styleValue);\n    } else {\n      update[key] = styleValue;\n    }\n  }\n  return update;\n}\nfunction extractSharedValuesMapFromProps(props) {\n  var inlineProps = {};\n  for (var key in props) {\n    var value = props[key];\n    if (key === 'style') {\n      var _props$style;\n      var styles = (0, _utils.flattenArray)((_props$style = props.style) != null ? _props$style : []);\n      styles.forEach(function (style) {\n        if (!style) {\n          return;\n        }\n        for (var _ref3 of Object.entries(style)) {\n          var _ref4 = (0, _slicedToArray2.default)(_ref3, 2);\n          var styleKey = _ref4[0];\n          var styleValue = _ref4[1];\n          if ((0, _isSharedValue.isSharedValue)(styleValue)) {\n            inlineProps[styleKey] = styleValue;\n          } else if (styleKey === 'transform' && isInlineStyleTransform(styleValue)) {\n            inlineProps[styleKey] = styleValue;\n          }\n        }\n      });\n    } else if ((0, _isSharedValue.isSharedValue)(value)) {\n      inlineProps[key] = value;\n    }\n  }\n  return inlineProps;\n}\nfunction hasInlineStyles(style) {\n  if (!style) {\n    return false;\n  }\n  return Object.keys(style).some(function (key) {\n    var styleValue = style[key];\n    return (0, _isSharedValue.isSharedValue)(styleValue) || key === 'transform' && isInlineStyleTransform(styleValue);\n  });\n}\nfunction getInlineStyle(style, isFirstRender) {\n  if (isFirstRender) {\n    return getInlinePropsUpdate(style);\n  }\n  var newStyle = {};\n  for (var _ref5 of Object.entries(style)) {\n    var _ref6 = (0, _slicedToArray2.default)(_ref5, 2);\n    var key = _ref6[0];\n    var styleValue = _ref6[1];\n    if (!(0, _isSharedValue.isSharedValue)(styleValue) && !(key === 'transform' && isInlineStyleTransform(styleValue))) {\n      newStyle[key] = styleValue;\n    }\n  }\n  return newStyle;\n}\nvar InlinePropManager = exports.InlinePropManager = function () {\n  function InlinePropManager() {\n    (0, _classCallCheck2.default)(this, InlinePropManager);\n    this._inlinePropsViewDescriptors = null;\n    this._inlinePropsMapperId = null;\n    this._inlineProps = {};\n  }\n  return (0, _createClass2.default)(InlinePropManager, [{\n    key: \"attachInlineProps\",\n    value: function attachInlineProps(animatedComponent, viewInfo) {\n      var newInlineProps = extractSharedValuesMapFromProps(animatedComponent.props);\n      var hasChanged = inlinePropsHasChanged(newInlineProps, this._inlineProps);\n      if (hasChanged) {\n        if (!this._inlinePropsViewDescriptors) {\n          this._inlinePropsViewDescriptors = (0, _ViewDescriptorsSet.makeViewDescriptorsSet)();\n          var viewTag = viewInfo.viewTag,\n            viewName = viewInfo.viewName,\n            shadowNodeWrapper = viewInfo.shadowNodeWrapper,\n            viewConfig = viewInfo.viewConfig;\n          if (Object.keys(newInlineProps).length && viewConfig) {\n            (0, _ConfigHelper.adaptViewConfig)(viewConfig);\n          }\n          this._inlinePropsViewDescriptors.add({\n            tag: viewTag,\n            name: viewName,\n            shadowNodeWrapper: shadowNodeWrapper\n          });\n        }\n        var shareableViewDescriptors = this._inlinePropsViewDescriptors.shareableViewDescriptors;\n        var updaterFunction = function updaterFunction() {\n          'worklet';\n\n          var update = getInlinePropsUpdate(newInlineProps);\n          (0, _UpdateProps.default)(shareableViewDescriptors, update);\n        };\n        this._inlineProps = newInlineProps;\n        if (this._inlinePropsMapperId) {\n          (0, _mappers.stopMapper)(this._inlinePropsMapperId);\n        }\n        this._inlinePropsMapperId = null;\n        if (Object.keys(newInlineProps).length) {\n          this._inlinePropsMapperId = (0, _mappers.startMapper)(updaterFunction, Object.values(newInlineProps));\n        }\n      }\n    }\n  }, {\n    key: \"detachInlineProps\",\n    value: function detachInlineProps() {\n      if (this._inlinePropsMapperId) {\n        (0, _mappers.stopMapper)(this._inlinePropsMapperId);\n      }\n    }\n  }]);\n}();","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","InlinePropManager","getInlineStyle","hasInlineStyles","_classCallCheck2","_createClass2","_slicedToArray2","_utils","_ViewDescriptorsSet","_ConfigHelper","_UpdateProps","_mappers","_isSharedValue","isInlineStyleTransform","transform","Array","isArray","some","t","inlinePropsHasChanged","styles1","styles2","keys","length","key","getInlinePropsUpdate","inlineProps","update","_ref","entries","_ref2","default","styleValue","isSharedValue","map","item","extractSharedValuesMapFromProps","props","_props$style","styles","flattenArray","style","forEach","_ref3","_ref4","styleKey","isFirstRender","newStyle","_ref5","_ref6","_inlinePropsViewDescriptors","_inlinePropsMapperId","_inlineProps","attachInlineProps","animatedComponent","viewInfo","newInlineProps","hasChanged","makeViewDescriptorsSet","viewTag","viewName","shadowNodeWrapper","viewConfig","adaptViewConfig","add","tag","name","shareableViewDescriptors","updaterFunction","updateProps","stopMapper","startMapper","values","detachInlineProps"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/react-native-reanimated/src/createAnimatedComponent/InlinePropManager.ts"],"sourcesContent":["'use strict';\nimport type { StyleProps } from '../commonTypes';\nimport type {\n  IAnimatedComponentInternal,\n  AnimatedComponentProps,\n  IInlinePropManager,\n  ViewInfo,\n} from './commonTypes';\nimport { flattenArray } from './utils';\nimport { makeViewDescriptorsSet } from '../ViewDescriptorsSet';\nimport type { ViewDescriptorsSet } from '../ViewDescriptorsSet';\nimport { adaptViewConfig } from '../ConfigHelper';\nimport updateProps from '../UpdateProps';\nimport { stopMapper, startMapper } from '../mappers';\nimport { isSharedValue } from '../isSharedValue';\n\nfunction isInlineStyleTransform(transform: unknown): boolean {\n  if (!Array.isArray(transform)) {\n    return false;\n  }\n\n  return transform.some((t: Record<string, unknown>) => hasInlineStyles(t));\n}\n\nfunction inlinePropsHasChanged(\n  styles1: StyleProps,\n  styles2: StyleProps\n): boolean {\n  if (Object.keys(styles1).length !== Object.keys(styles2).length) {\n    return true;\n  }\n\n  for (const key of Object.keys(styles1)) {\n    if (styles1[key] !== styles2[key]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getInlinePropsUpdate(inlineProps: Record<string, unknown>) {\n  'worklet';\n  const update: Record<string, unknown> = {};\n  for (const [key, styleValue] of Object.entries(inlineProps)) {\n    if (isSharedValue(styleValue)) {\n      update[key] = styleValue.value;\n    } else if (Array.isArray(styleValue)) {\n      update[key] = styleValue.map((item) => {\n        return getInlinePropsUpdate(item);\n      });\n    } else if (typeof styleValue === 'object') {\n      update[key] = getInlinePropsUpdate(styleValue as Record<string, unknown>);\n    } else {\n      update[key] = styleValue;\n    }\n  }\n  return update;\n}\n\nfunction extractSharedValuesMapFromProps(\n  props: AnimatedComponentProps<\n    Record<string, unknown> /* Initial component props */\n  >\n): Record<string, unknown> {\n  const inlineProps: Record<string, unknown> = {};\n\n  for (const key in props) {\n    const value = props[key];\n    if (key === 'style') {\n      const styles = flattenArray<StyleProps>(props.style ?? []);\n      styles.forEach((style) => {\n        if (!style) {\n          return;\n        }\n        for (const [styleKey, styleValue] of Object.entries(style)) {\n          if (isSharedValue(styleValue)) {\n            inlineProps[styleKey] = styleValue;\n          } else if (\n            styleKey === 'transform' &&\n            isInlineStyleTransform(styleValue)\n          ) {\n            inlineProps[styleKey] = styleValue;\n          }\n        }\n      });\n    } else if (isSharedValue(value)) {\n      inlineProps[key] = value;\n    }\n  }\n\n  return inlineProps;\n}\n\nexport function hasInlineStyles(style: StyleProps): boolean {\n  if (!style) {\n    return false;\n  }\n  return Object.keys(style).some((key) => {\n    const styleValue = style[key];\n    return (\n      isSharedValue(styleValue) ||\n      (key === 'transform' && isInlineStyleTransform(styleValue))\n    );\n  });\n}\n\nexport function getInlineStyle(\n  style: Record<string, unknown>,\n  isFirstRender: boolean\n) {\n  if (isFirstRender) {\n    return getInlinePropsUpdate(style);\n  }\n  const newStyle: StyleProps = {};\n  for (const [key, styleValue] of Object.entries(style)) {\n    if (\n      !isSharedValue(styleValue) &&\n      !(key === 'transform' && isInlineStyleTransform(styleValue))\n    ) {\n      newStyle[key] = styleValue;\n    }\n  }\n  return newStyle;\n}\n\nexport class InlinePropManager implements IInlinePropManager {\n  _inlinePropsViewDescriptors: ViewDescriptorsSet | null = null;\n  _inlinePropsMapperId: number | null = null;\n  _inlineProps: StyleProps = {};\n\n  public attachInlineProps(\n    animatedComponent: React.Component<unknown, unknown> &\n      IAnimatedComponentInternal,\n    viewInfo: ViewInfo\n  ) {\n    const newInlineProps: Record<string, unknown> =\n      extractSharedValuesMapFromProps(animatedComponent.props);\n    const hasChanged = inlinePropsHasChanged(newInlineProps, this._inlineProps);\n\n    if (hasChanged) {\n      if (!this._inlinePropsViewDescriptors) {\n        this._inlinePropsViewDescriptors = makeViewDescriptorsSet();\n\n        const { viewTag, viewName, shadowNodeWrapper, viewConfig } = viewInfo;\n\n        if (Object.keys(newInlineProps).length && viewConfig) {\n          adaptViewConfig(viewConfig);\n        }\n\n        this._inlinePropsViewDescriptors.add({\n          tag: viewTag as number,\n          name: viewName!,\n          shadowNodeWrapper: shadowNodeWrapper!,\n        });\n      }\n      const shareableViewDescriptors =\n        this._inlinePropsViewDescriptors.shareableViewDescriptors;\n\n      const updaterFunction = () => {\n        'worklet';\n        const update = getInlinePropsUpdate(newInlineProps);\n        updateProps(shareableViewDescriptors, update);\n      };\n      this._inlineProps = newInlineProps;\n      if (this._inlinePropsMapperId) {\n        stopMapper(this._inlinePropsMapperId);\n      }\n      this._inlinePropsMapperId = null;\n      if (Object.keys(newInlineProps).length) {\n        this._inlinePropsMapperId = startMapper(\n          updaterFunction,\n          Object.values(newInlineProps)\n        );\n      }\n    }\n  }\n\n  public detachInlineProps() {\n    if (this._inlinePropsMapperId) {\n      stopMapper(this._inlinePropsMapperId);\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}