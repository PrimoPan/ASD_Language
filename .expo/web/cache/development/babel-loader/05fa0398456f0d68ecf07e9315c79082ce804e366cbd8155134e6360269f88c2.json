{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Wrap = exports.AnimatedWrap = void 0;\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _utils = require(\"../../../utils\");\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nvar Wrap = exports.Wrap = (0, _react.forwardRef)(function (_ref, ref) {\n  var children = _ref.children;\n  try {\n    var _Object$getPrototypeO;\n    var child = _react.default.Children.only(children);\n    var isRNSVGNode = ((_Object$getPrototypeO = Object.getPrototypeOf(child === null || child === void 0 ? void 0 : child.type)) === null || _Object$getPrototypeO === void 0 ? void 0 : _Object$getPrototypeO.name) === 'WebShape';\n    if (isRNSVGNode) {\n      var clone = _react.default.cloneElement(child, {\n        ref: ref\n      }, child.props.children);\n      return clone;\n    }\n    return _react.default.createElement(\"div\", {\n      ref: ref,\n      style: {\n        display: 'contents'\n      }\n    }, child);\n  } catch (e) {\n    throw new Error((0, _utils.tagMessage)(`GestureDetector got more than one view as a child. If you want the gesture to work on multiple views, wrap them with a common parent and attach the gesture to that view.`));\n  }\n});\nvar AnimatedWrap = exports.AnimatedWrap = Wrap;","map":{"version":3,"names":["_react","_interopRequireWildcard","require","_utils","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","Wrap","exports","forwardRef","_ref","ref","children","_Object$getPrototypeO","child","React","Children","only","isRNSVGNode","getPrototypeOf","type","name","clone","cloneElement","props","createElement","style","display","Error","tagMessage","AnimatedWrap"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/GestureDetector/Wrap.web.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport type { LegacyRef, PropsWithChildren } from 'react';\nimport { tagMessage } from '../../../utils';\n\nexport const Wrap = forwardRef<HTMLDivElement, PropsWithChildren<{}>>(\n  ({ children }, ref) => {\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const child: any = React.Children.only(children);\n\n      const isRNSVGNode =\n        Object.getPrototypeOf(child?.type)?.name === 'WebShape';\n\n      if (isRNSVGNode) {\n        const clone = React.cloneElement(\n          child,\n          { ref },\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n          child.props.children\n        );\n\n        return clone;\n      }\n\n      return (\n        <div\n          ref={ref as LegacyRef<HTMLDivElement>}\n          style={{ display: 'contents' }}>\n          {child}\n        </div>\n      );\n    } catch (e) {\n      throw new Error(\n        tagMessage(\n          `GestureDetector got more than one view as a child. If you want the gesture to work on multiple views, wrap them with a common parent and attach the gesture to that view.`\n        )\n      );\n    }\n  }\n);\n\n// On web we never take a path with Reanimated,\n// therefore we can simply export Wrap\nexport const AnimatedWrap = Wrap;\n"],"mappings":";;;;AAAA,IAAAA,MAAA,GAAAC,uBAAA,CAAAC,OAAA;AAEA,IAAAC,MAAA,GAAAD,OAAA;AAAA,SAAAE,yBAAAC,CAAA,6BAAAC,OAAA,mBAAAC,CAAA,OAAAD,OAAA,IAAAE,CAAA,OAAAF,OAAA,YAAAF,wBAAA,YAAAA,yBAAAC,CAAA,WAAAA,CAAA,GAAAG,CAAA,GAAAD,CAAA,KAAAF,CAAA;AAAA,SAAAJ,wBAAAI,CAAA,EAAAE,CAAA,SAAAA,CAAA,IAAAF,CAAA,IAAAA,CAAA,CAAAI,UAAA,SAAAJ,CAAA,eAAAA,CAAA,uBAAAA,CAAA,yBAAAA,CAAA,WAAAK,OAAA,EAAAL,CAAA,QAAAG,CAAA,GAAAJ,wBAAA,CAAAG,CAAA,OAAAC,CAAA,IAAAA,CAAA,CAAAG,GAAA,CAAAN,CAAA,UAAAG,CAAA,CAAAI,GAAA,CAAAP,CAAA,OAAAQ,CAAA,KAAAC,SAAA,UAAAC,CAAA,GAAAC,MAAA,CAAAC,cAAA,IAAAD,MAAA,CAAAE,wBAAA,WAAAC,CAAA,IAAAd,CAAA,oBAAAc,CAAA,OAAAC,cAAA,CAAAC,IAAA,CAAAhB,CAAA,EAAAc,CAAA,SAAAG,CAAA,GAAAP,CAAA,GAAAC,MAAA,CAAAE,wBAAA,CAAAb,CAAA,EAAAc,CAAA,UAAAG,CAAA,KAAAA,CAAA,CAAAV,GAAA,IAAAU,CAAA,CAAAC,GAAA,IAAAP,MAAA,CAAAC,cAAA,CAAAJ,CAAA,EAAAM,CAAA,EAAAG,CAAA,IAAAT,CAAA,CAAAM,CAAA,IAAAd,CAAA,CAAAc,CAAA,YAAAN,CAAA,CAAAH,OAAA,GAAAL,CAAA,EAAAG,CAAA,IAAAA,CAAA,CAAAe,GAAA,CAAAlB,CAAA,EAAAQ,CAAA,GAAAA,CAAA;AAEO,IAAMW,IAAI,GAAAC,OAAA,CAAAD,IAAA,GAAG,IAAAE,iBAAU,EAC5B,UAAAC,IAAA,EAAeC,GAAf,EAAuB;EAAA,IAApBC,QAAA,GAAAF,IAAA,CAAAE,QAAA;EACD,IAAI;IAAA,IAAAC,qBAAA;IAEF,IAAMC,KAAU,GAAGC,cAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBL,QAApB,CAAnB;IAEA,IAAMM,WAAW,GACf,EAAAL,qBAAA,GAAAd,MAAM,CAACoB,cAAP,CAAsBL,KAAtB,aAAsBA,KAAtB,uBAAsBA,KAAK,CAAEM,IAA7B,eAAAP,qBAAA,uBAAAA,qBAAA,CAAoCQ,IAApC,MAA6C,UAD/C;IAGA,IAAIH,WAAJ,EAAiB;MACf,IAAMI,KAAK,GAAGP,cAAK,CAACQ,YAAN,CACZT,KADY,EAEZ;QAAEH,GAAA,EAAAA;MAAF,CAFY,EAIZG,KAAK,CAACU,KAAN,CAAYZ,QAJA,CAAd;MAOA,OAAOU,KAAP;IACD;IAED,OACEP,cAAA,CAAAU,aAAA;MACEd,GAAG,EAAEA,GADP;MAEEe,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAX;IAFT,GAGGb,KAHH,CADF;EAOD,CAzBD,CAyBE,OAAO1B,CAAP,EAAU;IACV,MAAM,IAAIwC,KAAJ,CACJ,IAAAC,iBAAU,EACP,2KADO,CADN,CAAN;EAKD;AACF,CAlC2B,CAAvB;AAuCA,IAAMC,YAAY,GAAAtB,OAAA,CAAAsB,YAAA,GAAGvB,IAArB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}