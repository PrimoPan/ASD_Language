{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAnimatedComponent = createAnimatedComponent;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _findNodeHandle = require(\"../platformFunctions/findNodeHandle\");\nrequire(\"../layoutReanimation/animationsManager.js\");\nvar _invariant = _interopRequireDefault(require(\"invariant\"));\nvar _ConfigHelper = require(\"../ConfigHelper.js\");\nvar _RNRenderer = require(\"../platform-specific/RNRenderer\");\nvar _core = require(\"../core.js\");\nvar _index = require(\"../layoutReanimation/index.js\");\nvar _fabricUtils = require(\"../fabricUtils\");\nvar _PropsRegistry = require(\"../PropsRegistry.js\");\nvar _util = require(\"../animation/util.js\");\nvar _animationBuilder = require(\"../animationBuilder.js\");\nvar _LayoutAnimationConfig = require(\"../component/LayoutAnimationConfig.js\");\nvar _JSPropsUpdater = _interopRequireDefault(require(\"./JSPropsUpdater\"));\nvar _utils = require(\"./utils.js\");\nvar _setAndForwardRef = _interopRequireDefault(require(\"./setAndForwardRef.js\"));\nvar _PlatformChecker = require(\"../PlatformChecker.js\");\nvar _InlinePropManager = require(\"./InlinePropManager.js\");\nvar _PropsFilter = require(\"./PropsFilter.js\");\nvar _index2 = require(\"../layoutReanimation/web/index.js\");\nvar _UpdateLayoutAnimations = require(\"../UpdateLayoutAnimations.js\");\nvar _domUtils = require(\"../layoutReanimation/web/domUtils.js\");\nvar _getViewInfo2 = require(\"./getViewInfo.js\");\nvar _NativeEventsManager = require(\"./NativeEventsManager.js\");\nvar _errors = require(\"../errors.js\");\nfunction _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nvar IS_WEB = (0, _PlatformChecker.isWeb)();\nvar IS_JEST = (0, _PlatformChecker.isJest)();\nvar SHOULD_BE_USE_WEB = (0, _PlatformChecker.shouldBeUseWeb)();\nif (IS_WEB) {\n  (0, _index2.configureWebLayoutAnimations)();\n}\nfunction onlyAnimatedStyles(styles) {\n  return styles.filter(function (style) {\n    return style == null ? void 0 : style.viewDescriptors;\n  });\n}\nvar id = 0;\nfunction createAnimatedComponent(Component, options) {\n  (0, _invariant.default)(typeof Component !== 'function' || Component.prototype && Component.prototype.isReactComponent, `Looks like you're passing a function component \\`${Component.name}\\` to \\`createAnimatedComponent\\` function which supports only class components. Please wrap your function component with \\`React.forwardRef()\\` or use a class component instead.`);\n  var AnimatedComponent = function (_React$Component) {\n    function AnimatedComponent(props) {\n      var _this;\n      (0, _classCallCheck2.default)(this, AnimatedComponent);\n      _this = _callSuper(this, AnimatedComponent, [props]);\n      _this._styles = null;\n      _this._componentViewTag = -1;\n      _this._isFirstRender = true;\n      _this.jestAnimatedStyle = {\n        value: {}\n      };\n      _this._component = null;\n      _this._sharedElementTransition = null;\n      _this._jsPropsUpdater = new _JSPropsUpdater.default();\n      _this._InlinePropManager = new _InlinePropManager.InlinePropManager();\n      _this._PropsFilter = new _PropsFilter.PropsFilter();\n      _this.reanimatedID = id++;\n      _this._setComponentRef = (0, _setAndForwardRef.default)({\n        getForwardedRef: function getForwardedRef() {\n          return _this.props.forwardedRef;\n        },\n        setLocalRef: function setLocalRef(ref) {\n          var tag = (0, _findNodeHandle.findNodeHandle)(ref);\n          if (tag !== null) {\n            _this._componentViewTag = tag;\n          }\n          var _this$props = _this.props,\n            layout = _this$props.layout,\n            entering = _this$props.entering,\n            exiting = _this$props.exiting,\n            sharedTransitionTag = _this$props.sharedTransitionTag;\n          if ((layout || entering || exiting || sharedTransitionTag) && tag != null) {\n            var _this$context;\n            if (!SHOULD_BE_USE_WEB) {\n              (0, _core.enableLayoutAnimations)(true, false);\n            }\n            if (sharedTransitionTag) {\n              _this._configureSharedTransition();\n            }\n            if (exiting && (0, _PlatformChecker.isFabric)()) {\n              var reduceMotionInExiting = 'getReduceMotion' in exiting && typeof exiting.getReduceMotion === 'function' ? (0, _util.getReduceMotionFromConfig)(exiting.getReduceMotion()) : (0, _util.getReduceMotionFromConfig)();\n              if (!reduceMotionInExiting) {\n                var _this$props2;\n                (0, _UpdateLayoutAnimations.updateLayoutAnimations)(tag, _index.LayoutAnimationType.EXITING, (0, _animationBuilder.maybeBuild)(exiting, (_this$props2 = _this.props) == null ? void 0 : _this$props2.style, AnimatedComponent.displayName));\n              }\n            }\n            var skipEntering = (_this$context = _this.context) == null ? void 0 : _this$context.current;\n            if (entering && !skipEntering && !IS_WEB) {\n              var _this$props3;\n              (0, _UpdateLayoutAnimations.updateLayoutAnimations)(tag, _index.LayoutAnimationType.ENTERING, (0, _animationBuilder.maybeBuild)(entering, (_this$props3 = _this.props) == null ? void 0 : _this$props3.style, AnimatedComponent.displayName));\n            }\n          }\n          if (ref !== _this._component) {\n            _this._component = ref;\n          }\n        }\n      });\n      if (IS_JEST) {\n        _this.jestAnimatedStyle = {\n          value: {}\n        };\n      }\n      var _entering = _this.props.entering;\n      if (_entering && (0, _PlatformChecker.isFabric)()) {\n        var _this$props4;\n        (0, _UpdateLayoutAnimations.updateLayoutAnimations)(_this.reanimatedID, _index.LayoutAnimationType.ENTERING, (0, _animationBuilder.maybeBuild)(_entering, (_this$props4 = _this.props) == null ? void 0 : _this$props4.style, AnimatedComponent.displayName));\n      }\n      return _this;\n    }\n    (0, _inherits2.default)(AnimatedComponent, _React$Component);\n    return (0, _createClass2.default)(AnimatedComponent, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var _this$_NativeEventsMa;\n        this._componentViewTag = this._getComponentViewTag();\n        if (!IS_WEB) {\n          this._NativeEventsManager = new _NativeEventsManager.NativeEventsManager(this, options);\n        }\n        (_this$_NativeEventsMa = this._NativeEventsManager) == null || _this$_NativeEventsMa.attachEvents();\n        this._jsPropsUpdater.addOnJSPropsChangeListener(this);\n        this._attachAnimatedStyles();\n        this._InlinePropManager.attachInlineProps(this, this._getViewInfo());\n        var layout = this.props.layout;\n        if (layout) {\n          this._configureLayoutTransition();\n        }\n        if (IS_WEB) {\n          var _this$context2;\n          if (this.props.exiting) {\n            (0, _index2.saveSnapshot)(this._component);\n          }\n          if (!this.props.entering || (0, _index2.getReducedMotionFromConfig)(this.props.entering)) {\n            this._isFirstRender = false;\n            return;\n          }\n          var skipEntering = (_this$context2 = this.context) == null ? void 0 : _this$context2.current;\n          if (!skipEntering) {\n            (0, _index2.startWebLayoutAnimation)(this.props, this._component, _index.LayoutAnimationType.ENTERING);\n          } else {\n            this._component.style.visibility = 'initial';\n          }\n        }\n        this._isFirstRender = false;\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        var _this$_NativeEventsMa2, _this$_sharedElementT;\n        (_this$_NativeEventsMa2 = this._NativeEventsManager) == null || _this$_NativeEventsMa2.detachEvents();\n        this._jsPropsUpdater.removeOnJSPropsChangeListener(this);\n        this._detachStyles();\n        this._InlinePropManager.detachInlineProps();\n        if (this.props.sharedTransitionTag) {\n          this._configureSharedTransition(true);\n        }\n        (_this$_sharedElementT = this._sharedElementTransition) == null || _this$_sharedElementT.unregisterTransition(this._componentViewTag, true);\n        var exiting = this.props.exiting;\n        if (IS_WEB && this._component && exiting && !(0, _index2.getReducedMotionFromConfig)(exiting)) {\n          (0, _domUtils.addHTMLMutationObserver)();\n          (0, _index2.startWebLayoutAnimation)(this.props, this._component, _index.LayoutAnimationType.EXITING);\n        } else if (exiting && !IS_WEB && !(0, _PlatformChecker.isFabric)()) {\n          var reduceMotionInExiting = 'getReduceMotion' in exiting && typeof exiting.getReduceMotion === 'function' ? (0, _util.getReduceMotionFromConfig)(exiting.getReduceMotion()) : (0, _util.getReduceMotionFromConfig)();\n          if (!reduceMotionInExiting) {\n            var _this$props5;\n            (0, _UpdateLayoutAnimations.updateLayoutAnimations)(this._componentViewTag, _index.LayoutAnimationType.EXITING, (0, _animationBuilder.maybeBuild)(exiting, (_this$props5 = this.props) == null ? void 0 : _this$props5.style, AnimatedComponent.displayName));\n          }\n        }\n      }\n    }, {\n      key: \"_getComponentViewTag\",\n      value: function _getComponentViewTag() {\n        return this._getViewInfo().viewTag;\n      }\n    }, {\n      key: \"_detachStyles\",\n      value: function _detachStyles() {\n        if (this._componentViewTag !== -1 && this._styles !== null) {\n          var _this$props$animatedP;\n          for (var style of this._styles) {\n            style.viewDescriptors.remove(this._componentViewTag);\n          }\n          if ((_this$props$animatedP = this.props.animatedProps) != null && _this$props$animatedP.viewDescriptors) {\n            this.props.animatedProps.viewDescriptors.remove(this._componentViewTag);\n          }\n          if ((0, _PlatformChecker.isFabric)()) {\n            (0, _PropsRegistry.removeFromPropsRegistry)(this._componentViewTag);\n          }\n        }\n      }\n    }, {\n      key: \"_updateFromNative\",\n      value: function _updateFromNative(props) {\n        if (options != null && options.setNativeProps) {\n          options.setNativeProps(this._component, props);\n        } else {\n          var _this$_component;\n          (_this$_component = this._component) == null || _this$_component.setNativeProps == null || _this$_component.setNativeProps(props);\n        }\n      }\n    }, {\n      key: \"_getViewInfo\",\n      value: function _getViewInfo() {\n        var _this$_component2, _this$_component$getA, _this$_component3;\n        if (this._viewInfo !== undefined) {\n          return this._viewInfo;\n        }\n        var viewTag;\n        var viewName;\n        var shadowNodeWrapper = null;\n        var viewConfig;\n        var component = (_this$_component2 = this._component) != null && _this$_component2.getAnimatableRef ? (_this$_component$getA = (_this$_component3 = this._component).getAnimatableRef) == null ? void 0 : _this$_component$getA.call(_this$_component3) : this;\n        if (SHOULD_BE_USE_WEB) {\n          viewTag = this._component;\n          viewName = null;\n          shadowNodeWrapper = null;\n          viewConfig = null;\n        } else {\n          var hostInstance = _RNRenderer.RNRenderer.findHostInstance_DEPRECATED(component);\n          if (!hostInstance) {\n            throw new _errors.ReanimatedError('Cannot find host instance for this component. Maybe it renders nothing?');\n          }\n          var viewInfo = (0, _getViewInfo2.getViewInfo)(hostInstance);\n          viewTag = viewInfo.viewTag;\n          viewName = viewInfo.viewName;\n          viewConfig = viewInfo.viewConfig;\n          shadowNodeWrapper = (0, _PlatformChecker.isFabric)() ? (0, _fabricUtils.getShadowNodeWrapperFromRef)(this) : null;\n        }\n        this._viewInfo = {\n          viewTag: viewTag,\n          viewName: viewName,\n          shadowNodeWrapper: shadowNodeWrapper,\n          viewConfig: viewConfig\n        };\n        return this._viewInfo;\n      }\n    }, {\n      key: \"_attachAnimatedStyles\",\n      value: function _attachAnimatedStyles() {\n        var _this$props$animatedP2,\n          _this2 = this,\n          _this$props$animatedP3;\n        var styles = this.props.style ? onlyAnimatedStyles((0, _utils.flattenArray)(this.props.style)) : [];\n        var prevStyles = this._styles;\n        this._styles = styles;\n        var prevAnimatedProps = this._animatedProps;\n        this._animatedProps = this.props.animatedProps;\n        var _this$_getViewInfo = this._getViewInfo(),\n          viewTag = _this$_getViewInfo.viewTag,\n          viewName = _this$_getViewInfo.viewName,\n          shadowNodeWrapper = _this$_getViewInfo.shadowNodeWrapper,\n          viewConfig = _this$_getViewInfo.viewConfig;\n        var hasReanimated2Props = ((_this$props$animatedP2 = this.props.animatedProps) == null ? void 0 : _this$props$animatedP2.viewDescriptors) || styles.length;\n        if (hasReanimated2Props && viewConfig) {\n          (0, _ConfigHelper.adaptViewConfig)(viewConfig);\n        }\n        this._componentViewTag = viewTag;\n        if (prevStyles) {\n          var hasOneSameStyle = styles.length === 1 && prevStyles.length === 1 && styles[0] === prevStyles[0];\n          if (!hasOneSameStyle) {\n            var _loop = function _loop(prevStyle) {\n              var isPresent = styles.some(function (style) {\n                return style === prevStyle;\n              });\n              if (!isPresent) {\n                prevStyle.viewDescriptors.remove(viewTag);\n              }\n            };\n            for (var prevStyle of prevStyles) {\n              _loop(prevStyle);\n            }\n          }\n        }\n        styles.forEach(function (style) {\n          style.viewDescriptors.add({\n            tag: viewTag,\n            name: viewName,\n            shadowNodeWrapper: shadowNodeWrapper\n          });\n          if (IS_JEST) {\n            _this2.jestAnimatedStyle.value = Object.assign({}, _this2.jestAnimatedStyle.value, style.initial.value);\n            style.jestAnimatedStyle.current = _this2.jestAnimatedStyle;\n          }\n        });\n        if (prevAnimatedProps && prevAnimatedProps !== this.props.animatedProps) {\n          prevAnimatedProps.viewDescriptors.remove(viewTag);\n        }\n        if ((_this$props$animatedP3 = this.props.animatedProps) != null && _this$props$animatedP3.viewDescriptors) {\n          this.props.animatedProps.viewDescriptors.add({\n            tag: viewTag,\n            name: viewName,\n            shadowNodeWrapper: shadowNodeWrapper\n          });\n        }\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps, _prevState, snapshot) {\n        var _this$_NativeEventsMa3;\n        var layout = this.props.layout;\n        var oldLayout = prevProps.layout;\n        if (layout !== oldLayout) {\n          this._configureLayoutTransition();\n        }\n        if (this.props.sharedTransitionTag !== undefined || prevProps.sharedTransitionTag !== undefined) {\n          this._configureSharedTransition();\n        }\n        (_this$_NativeEventsMa3 = this._NativeEventsManager) == null || _this$_NativeEventsMa3.updateEvents(prevProps);\n        this._attachAnimatedStyles();\n        this._InlinePropManager.attachInlineProps(this, this._getViewInfo());\n        if (IS_WEB && this.props.exiting) {\n          (0, _index2.saveSnapshot)(this._component);\n        }\n        if (IS_WEB && snapshot !== null && this.props.layout && !(0, _index2.getReducedMotionFromConfig)(this.props.layout)) {\n          (0, _index2.tryActivateLayoutTransition)(this.props, this._component, snapshot);\n        }\n      }\n    }, {\n      key: \"_configureLayoutTransition\",\n      value: function _configureLayoutTransition() {\n        if (IS_WEB) {\n          return;\n        }\n        var layout = this.props.layout ? (0, _animationBuilder.maybeBuild)(this.props.layout, undefined, AnimatedComponent.displayName) : undefined;\n        (0, _UpdateLayoutAnimations.updateLayoutAnimations)(this._componentViewTag, _index.LayoutAnimationType.LAYOUT, layout);\n      }\n    }, {\n      key: \"_configureSharedTransition\",\n      value: function _configureSharedTransition() {\n        var _ref, _this$props$sharedTra;\n        var isUnmounting = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n        if (IS_WEB) {\n          return;\n        }\n        var sharedTransitionTag = this.props.sharedTransitionTag;\n        if (!sharedTransitionTag) {\n          var _this$_sharedElementT2;\n          (_this$_sharedElementT2 = this._sharedElementTransition) == null || _this$_sharedElementT2.unregisterTransition(this._componentViewTag, isUnmounting);\n          this._sharedElementTransition = null;\n          return;\n        }\n        var sharedElementTransition = (_ref = (_this$props$sharedTra = this.props.sharedTransitionStyle) != null ? _this$props$sharedTra : this._sharedElementTransition) != null ? _ref : new _index.SharedTransition();\n        sharedElementTransition.registerTransition(this._componentViewTag, sharedTransitionTag, isUnmounting);\n        this._sharedElementTransition = sharedElementTransition;\n      }\n    }, {\n      key: \"getSnapshotBeforeUpdate\",\n      value: function getSnapshotBeforeUpdate() {\n        var _this$_component4;\n        if (IS_WEB && ((_this$_component4 = this._component) == null ? void 0 : _this$_component4.getBoundingClientRect) !== undefined) {\n          return this._component.getBoundingClientRect();\n        }\n        return null;\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$context3;\n        var filteredProps = this._PropsFilter.filterNonAnimatedProps(this);\n        if (IS_JEST) {\n          filteredProps.jestAnimatedStyle = this.jestAnimatedStyle;\n        }\n        if (this._isFirstRender && IS_WEB && filteredProps.entering && !(0, _index2.getReducedMotionFromConfig)(filteredProps.entering)) {\n          var _filteredProps$style;\n          filteredProps.style = Object.assign({}, (_filteredProps$style = filteredProps.style) != null ? _filteredProps$style : {}, {\n            visibility: 'hidden'\n          });\n        }\n        var platformProps = _reactNative.Platform.select({\n          web: {},\n          default: {\n            collapsable: false\n          }\n        });\n        var skipEntering = (_this$context3 = this.context) == null ? void 0 : _this$context3.current;\n        var nativeID = skipEntering || !(0, _PlatformChecker.isFabric)() ? undefined : `${this.reanimatedID}`;\n        var jestProps = IS_JEST ? {\n          jestInlineStyle: this.props.style,\n          jestAnimatedStyle: this.jestAnimatedStyle\n        } : {};\n        return _react.default.createElement(Component, _extends({\n          nativeID: nativeID\n        }, filteredProps, jestProps, {\n          ref: this._setComponentRef\n        }, platformProps));\n      }\n    }]);\n  }(_react.default.Component);\n  AnimatedComponent.contextType = _LayoutAnimationConfig.SkipEnteringContext;\n  AnimatedComponent.displayName = `AnimatedComponent(${Component.displayName || Component.name || 'Component'})`;\n  return _react.default.forwardRef(function (props, ref) {\n    return _react.default.createElement(AnimatedComponent, _extends({}, props, ref === null ? null : {\n      forwardedRef: ref\n    }));\n  });\n}","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","createAnimatedComponent","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf2","_inherits2","_react","_reactNative","_findNodeHandle","_invariant","_ConfigHelper","_RNRenderer","_core","_index","_fabricUtils","_PropsRegistry","_util","_animationBuilder","_LayoutAnimationConfig","_JSPropsUpdater","_utils","_setAndForwardRef","_PlatformChecker","_InlinePropManager","_PropsFilter","_index2","_UpdateLayoutAnimations","_domUtils","_getViewInfo2","_NativeEventsManager","_errors","_callSuper","t","o","e","default","_isNativeReflectConstruct","Reflect","construct","constructor","apply","Boolean","prototype","valueOf","call","_extends","assign","bind","n","arguments","length","r","hasOwnProperty","IS_WEB","isWeb","IS_JEST","isJest","SHOULD_BE_USE_WEB","shouldBeUseWeb","configureWebLayoutAnimations","onlyAnimatedStyles","styles","filter","style","viewDescriptors","id","Component","options","invariant","isReactComponent","name","AnimatedComponent","_React$Component","props","_this","_styles","_componentViewTag","_isFirstRender","jestAnimatedStyle","_component","_sharedElementTransition","_jsPropsUpdater","JSPropsUpdater","InlinePropManager","PropsFilter","reanimatedID","_setComponentRef","setAndForwardRef","getForwardedRef","forwardedRef","setLocalRef","ref","tag","findNodeHandle","_this$props","layout","entering","exiting","sharedTransitionTag","_this$context","enableLayoutAnimations","_configureSharedTransition","isFabric","reduceMotionInExiting","getReduceMotion","getReduceMotionFromConfig","_this$props2","updateLayoutAnimations","LayoutAnimationType","EXITING","maybeBuild","displayName","skipEntering","context","current","_this$props3","ENTERING","_this$props4","key","componentDidMount","_this$_NativeEventsMa","_getComponentViewTag","NativeEventsManager","attachEvents","addOnJSPropsChangeListener","_attachAnimatedStyles","attachInlineProps","_getViewInfo","_configureLayoutTransition","_this$context2","saveSnapshot","getReducedMotionFromConfig","startWebLayoutAnimation","visibility","componentWillUnmount","_this$_NativeEventsMa2","_this$_sharedElementT","detachEvents","removeOnJSPropsChangeListener","_detachStyles","detachInlineProps","unregisterTransition","addHTMLMutationObserver","_this$props5","viewTag","_this$props$animatedP","remove","animatedProps","removeFromPropsRegistry","_updateFromNative","setNativeProps","_this$_component","_this$_component2","_this$_component$getA","_this$_component3","_viewInfo","undefined","viewName","shadowNodeWrapper","viewConfig","component","getAnimatableRef","hostInstance","RNRenderer","findHostInstance_DEPRECATED","ReanimatedError","viewInfo","getViewInfo","getShadowNodeWrapperFromRef","_this$props$animatedP2","_this2","_this$props$animatedP3","flattenArray","prevStyles","prevAnimatedProps","_animatedProps","_this$_getViewInfo","hasReanimated2Props","adaptViewConfig","hasOneSameStyle","_loop","prevStyle","isPresent","some","forEach","add","initial","componentDidUpdate","prevProps","_prevState","snapshot","_this$_NativeEventsMa3","oldLayout","updateEvents","tryActivateLayoutTransition","LAYOUT","_ref","_this$props$sharedTra","isUnmounting","_this$_sharedElementT2","sharedElementTransition","sharedTransitionStyle","SharedTransition","registerTransition","getSnapshotBeforeUpdate","_this$_component4","getBoundingClientRect","render","_this$context3","filteredProps","filterNonAnimatedProps","_filteredProps$style","platformProps","Platform","select","web","collapsable","nativeID","jestProps","jestInlineStyle","React","createElement","contextType","SkipEnteringContext","forwardRef"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/react-native-reanimated/src/createAnimatedComponent/createAnimatedComponent.tsx"],"sourcesContent":["'use strict';\nimport type {\n  Component,\n  ComponentClass,\n  ComponentType,\n  FunctionComponent,\n  MutableRefObject,\n} from 'react';\nimport React from 'react';\nimport { Platform } from 'react-native';\nimport { findNodeHandle } from '../platformFunctions/findNodeHandle';\nimport '../layoutReanimation/animationsManager';\nimport invariant from 'invariant';\nimport { adaptViewConfig } from '../ConfigHelper';\nimport { RNRenderer } from '../platform-specific/RNRenderer';\nimport { enableLayoutAnimations } from '../core';\nimport { SharedTransition, LayoutAnimationType } from '../layoutReanimation';\nimport type { StyleProps, ShadowNodeWrapper } from '../commonTypes';\nimport { getShadowNodeWrapperFromRef } from '../fabricUtils';\nimport { removeFromPropsRegistry } from '../PropsRegistry';\nimport { getReduceMotionFromConfig } from '../animation/util';\nimport { maybeBuild } from '../animationBuilder';\nimport { SkipEnteringContext } from '../component/LayoutAnimationConfig';\nimport type { AnimateProps } from '../helperTypes';\nimport JSPropsUpdater from './JSPropsUpdater';\nimport type {\n  AnimatedComponentProps,\n  AnimatedProps,\n  InitialComponentProps,\n  AnimatedComponentRef,\n  IAnimatedComponentInternal,\n  ViewInfo,\n  INativeEventsManager,\n  NestedArray,\n} from './commonTypes';\nimport { flattenArray } from './utils';\nimport setAndForwardRef from './setAndForwardRef';\nimport { isFabric, isJest, isWeb, shouldBeUseWeb } from '../PlatformChecker';\nimport { InlinePropManager } from './InlinePropManager';\nimport { PropsFilter } from './PropsFilter';\nimport {\n  startWebLayoutAnimation,\n  tryActivateLayoutTransition,\n  configureWebLayoutAnimations,\n  getReducedMotionFromConfig,\n  saveSnapshot,\n} from '../layoutReanimation/web';\nimport { updateLayoutAnimations } from '../UpdateLayoutAnimations';\nimport type { CustomConfig } from '../layoutReanimation/web/config';\nimport type { FlatList, FlatListProps } from 'react-native';\nimport { addHTMLMutationObserver } from '../layoutReanimation/web/domUtils';\nimport { getViewInfo } from './getViewInfo';\nimport { NativeEventsManager } from './NativeEventsManager';\nimport type { ReanimatedHTMLElement } from '../js-reanimated';\nimport { ReanimatedError } from '../errors';\n\nconst IS_WEB = isWeb();\nconst IS_JEST = isJest();\nconst SHOULD_BE_USE_WEB = shouldBeUseWeb();\n\nif (IS_WEB) {\n  configureWebLayoutAnimations();\n}\n\nfunction onlyAnimatedStyles(styles: StyleProps[]): StyleProps[] {\n  return styles.filter((style) => style?.viewDescriptors);\n}\n\ntype Options<P> = {\n  setNativeProps: (ref: AnimatedComponentRef, props: P) => void;\n};\n\n/**\n * Lets you create an Animated version of any React Native component.\n *\n * @param component - The component you want to make animatable.\n * @returns A component that Reanimated is capable of animating.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/core/createAnimatedComponent\n */\n\n// Don't change the order of overloads, since such a change breaks current behavior\nexport function createAnimatedComponent<P extends object>(\n  component: FunctionComponent<P>,\n  options?: Options<P>\n): FunctionComponent<AnimateProps<P>>;\n\nexport function createAnimatedComponent<P extends object>(\n  component: ComponentClass<P>,\n  options?: Options<P>\n): ComponentClass<AnimateProps<P>>;\n\nexport function createAnimatedComponent<P extends object>(\n  // Actually ComponentType<P = {}> = ComponentClass<P> | FunctionComponent<P> but we need this overload too\n  // since some external components (like FastImage) are typed just as ComponentType\n  component: ComponentType<P>,\n  options?: Options<P>\n): FunctionComponent<AnimateProps<P>> | ComponentClass<AnimateProps<P>>;\n\n/**\n * @deprecated Please use `Animated.FlatList` component instead of calling\n *   `Animated.createAnimatedComponent(FlatList)` manually.\n */\n// @ts-ignore This is required to create this overload, since type of createAnimatedComponent is incorrect and doesn't include typeof FlatList\nexport function createAnimatedComponent(\n  component: typeof FlatList<unknown>,\n  options?: Options<any>\n): ComponentClass<AnimateProps<FlatListProps<unknown>>>;\n\nlet id = 0;\n\nexport function createAnimatedComponent(\n  Component: ComponentType<InitialComponentProps>,\n  options?: Options<InitialComponentProps>\n): any {\n  invariant(\n    typeof Component !== 'function' ||\n      (Component.prototype && Component.prototype.isReactComponent),\n    `Looks like you're passing a function component \\`${Component.name}\\` to \\`createAnimatedComponent\\` function which supports only class components. Please wrap your function component with \\`React.forwardRef()\\` or use a class component instead.`\n  );\n\n  class AnimatedComponent\n    extends React.Component<AnimatedComponentProps<InitialComponentProps>>\n    implements IAnimatedComponentInternal\n  {\n    _styles: StyleProps[] | null = null;\n    _animatedProps?: Partial<AnimatedComponentProps<AnimatedProps>>;\n    _componentViewTag = -1;\n    _isFirstRender = true;\n    jestInlineStyle: NestedArray<StyleProps> | undefined;\n    jestAnimatedStyle: { value: StyleProps } = { value: {} };\n    _component: AnimatedComponentRef | HTMLElement | null = null;\n    _sharedElementTransition: SharedTransition | null = null;\n    _jsPropsUpdater = new JSPropsUpdater();\n    _InlinePropManager = new InlinePropManager();\n    _PropsFilter = new PropsFilter();\n    _NativeEventsManager?: INativeEventsManager;\n    _viewInfo?: ViewInfo;\n    static displayName: string;\n    static contextType = SkipEnteringContext;\n    context!: React.ContextType<typeof SkipEnteringContext>;\n    reanimatedID = id++;\n\n    constructor(props: AnimatedComponentProps<InitialComponentProps>) {\n      super(props);\n      if (IS_JEST) {\n        this.jestAnimatedStyle = { value: {} };\n      }\n      const entering = this.props.entering;\n      if (entering && isFabric()) {\n        updateLayoutAnimations(\n          this.reanimatedID,\n          LayoutAnimationType.ENTERING,\n          maybeBuild(entering, this.props?.style, AnimatedComponent.displayName)\n        );\n      }\n    }\n\n    componentDidMount() {\n      this._componentViewTag = this._getComponentViewTag();\n      if (!IS_WEB) {\n        // It exists only on native platforms. We initialize it here because the ref to the animated component is available only post-mount\n        this._NativeEventsManager = new NativeEventsManager(this, options);\n      }\n      this._NativeEventsManager?.attachEvents();\n      this._jsPropsUpdater.addOnJSPropsChangeListener(this);\n      this._attachAnimatedStyles();\n      this._InlinePropManager.attachInlineProps(this, this._getViewInfo());\n\n      const layout = this.props.layout;\n      if (layout) {\n        this._configureLayoutTransition();\n      }\n\n      if (IS_WEB) {\n        if (this.props.exiting) {\n          saveSnapshot(this._component as HTMLElement);\n        }\n\n        if (\n          !this.props.entering ||\n          getReducedMotionFromConfig(this.props.entering as CustomConfig)\n        ) {\n          this._isFirstRender = false;\n          return;\n        }\n\n        const skipEntering = this.context?.current;\n\n        if (!skipEntering) {\n          startWebLayoutAnimation(\n            this.props,\n            this._component as ReanimatedHTMLElement,\n            LayoutAnimationType.ENTERING\n          );\n        } else {\n          (this._component as HTMLElement).style.visibility = 'initial';\n        }\n      }\n\n      this._isFirstRender = false;\n    }\n\n    componentWillUnmount() {\n      this._NativeEventsManager?.detachEvents();\n      this._jsPropsUpdater.removeOnJSPropsChangeListener(this);\n      this._detachStyles();\n      this._InlinePropManager.detachInlineProps();\n      if (this.props.sharedTransitionTag) {\n        this._configureSharedTransition(true);\n      }\n      this._sharedElementTransition?.unregisterTransition(\n        this._componentViewTag,\n        true\n      );\n\n      const exiting = this.props.exiting;\n\n      if (\n        IS_WEB &&\n        this._component &&\n        exiting &&\n        !getReducedMotionFromConfig(exiting as CustomConfig)\n      ) {\n        addHTMLMutationObserver();\n\n        startWebLayoutAnimation(\n          this.props,\n          this._component as ReanimatedHTMLElement,\n          LayoutAnimationType.EXITING\n        );\n      } else if (exiting && !IS_WEB && !isFabric()) {\n        const reduceMotionInExiting =\n          'getReduceMotion' in exiting &&\n          typeof exiting.getReduceMotion === 'function'\n            ? getReduceMotionFromConfig(exiting.getReduceMotion())\n            : getReduceMotionFromConfig();\n        if (!reduceMotionInExiting) {\n          updateLayoutAnimations(\n            this._componentViewTag,\n            LayoutAnimationType.EXITING,\n            maybeBuild(\n              exiting,\n              this.props?.style,\n              AnimatedComponent.displayName\n            )\n          );\n        }\n      }\n    }\n\n    _getComponentViewTag() {\n      return this._getViewInfo().viewTag as number;\n    }\n\n    _detachStyles() {\n      if (this._componentViewTag !== -1 && this._styles !== null) {\n        for (const style of this._styles) {\n          style.viewDescriptors.remove(this._componentViewTag);\n        }\n        if (this.props.animatedProps?.viewDescriptors) {\n          this.props.animatedProps.viewDescriptors.remove(\n            this._componentViewTag\n          );\n        }\n        if (isFabric()) {\n          removeFromPropsRegistry(this._componentViewTag);\n        }\n      }\n    }\n\n    _updateFromNative(props: StyleProps) {\n      if (options?.setNativeProps) {\n        options.setNativeProps(this._component as AnimatedComponentRef, props);\n      } else {\n        (this._component as AnimatedComponentRef)?.setNativeProps?.(props);\n      }\n    }\n\n    _getViewInfo(): ViewInfo {\n      if (this._viewInfo !== undefined) {\n        return this._viewInfo;\n      }\n\n      let viewTag: number | HTMLElement | null;\n      let viewName: string | null;\n      let shadowNodeWrapper: ShadowNodeWrapper | null = null;\n      let viewConfig;\n      // Component can specify ref which should be animated when animated version of the component is created.\n      // Otherwise, we animate the component itself.\n      const component = (this._component as AnimatedComponentRef)\n        ?.getAnimatableRef\n        ? (this._component as AnimatedComponentRef).getAnimatableRef?.()\n        : this;\n\n      if (SHOULD_BE_USE_WEB) {\n        // At this point I assume that `_setComponentRef` was already called and `_component` is set.\n        // `this._component` on web represents HTMLElement of our component, that's why we use casting\n        viewTag = this._component as HTMLElement;\n        viewName = null;\n        shadowNodeWrapper = null;\n        viewConfig = null;\n      } else {\n        // hostInstance can be null for a component that doesn't render anything (render function returns null). Example: svg Stop: https://github.com/react-native-svg/react-native-svg/blob/develop/src/elements/Stop.tsx\n        const hostInstance = RNRenderer.findHostInstance_DEPRECATED(component);\n        if (!hostInstance) {\n          throw new ReanimatedError(\n            'Cannot find host instance for this component. Maybe it renders nothing?'\n          );\n        }\n\n        const viewInfo = getViewInfo(hostInstance);\n        viewTag = viewInfo.viewTag;\n        viewName = viewInfo.viewName;\n        viewConfig = viewInfo.viewConfig;\n        shadowNodeWrapper = isFabric()\n          ? getShadowNodeWrapperFromRef(this)\n          : null;\n      }\n      this._viewInfo = { viewTag, viewName, shadowNodeWrapper, viewConfig };\n      return this._viewInfo;\n    }\n\n    _attachAnimatedStyles() {\n      const styles = this.props.style\n        ? onlyAnimatedStyles(flattenArray<StyleProps>(this.props.style))\n        : [];\n      const prevStyles = this._styles;\n      this._styles = styles;\n\n      const prevAnimatedProps = this._animatedProps;\n      this._animatedProps = this.props.animatedProps;\n\n      const { viewTag, viewName, shadowNodeWrapper, viewConfig } =\n        this._getViewInfo();\n\n      // update UI props whitelist for this view\n      const hasReanimated2Props =\n        this.props.animatedProps?.viewDescriptors || styles.length;\n      if (hasReanimated2Props && viewConfig) {\n        adaptViewConfig(viewConfig);\n      }\n\n      this._componentViewTag = viewTag as number;\n\n      // remove old styles\n      if (prevStyles) {\n        // in most of the cases, views have only a single animated style and it remains unchanged\n        const hasOneSameStyle =\n          styles.length === 1 &&\n          prevStyles.length === 1 &&\n          styles[0] === prevStyles[0];\n\n        if (!hasOneSameStyle) {\n          // otherwise, remove each style that is not present in new styles\n          for (const prevStyle of prevStyles) {\n            const isPresent = styles.some((style) => style === prevStyle);\n            if (!isPresent) {\n              prevStyle.viewDescriptors.remove(viewTag);\n            }\n          }\n        }\n      }\n\n      styles.forEach((style) => {\n        style.viewDescriptors.add({\n          tag: viewTag,\n          name: viewName,\n          shadowNodeWrapper,\n        });\n        if (IS_JEST) {\n          /**\n           * We need to connect Jest's TestObject instance whose contains just\n           * props object with the updateProps() function where we update the\n           * properties of the component. We can't update props object directly\n           * because TestObject contains a copy of props - look at render\n           * function: const props = this._filterNonAnimatedProps(this.props);\n           */\n          this.jestAnimatedStyle.value = {\n            ...this.jestAnimatedStyle.value,\n            ...style.initial.value,\n          };\n          style.jestAnimatedStyle.current = this.jestAnimatedStyle;\n        }\n      });\n\n      // detach old animatedProps\n      if (prevAnimatedProps && prevAnimatedProps !== this.props.animatedProps) {\n        prevAnimatedProps.viewDescriptors!.remove(viewTag as number);\n      }\n\n      // attach animatedProps property\n      if (this.props.animatedProps?.viewDescriptors) {\n        this.props.animatedProps.viewDescriptors.add({\n          tag: viewTag as number,\n          name: viewName!,\n          shadowNodeWrapper: shadowNodeWrapper!,\n        });\n      }\n    }\n\n    componentDidUpdate(\n      prevProps: AnimatedComponentProps<InitialComponentProps>,\n      _prevState: Readonly<unknown>,\n      // This type comes straight from React\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      snapshot: DOMRect | null\n    ) {\n      const layout = this.props.layout;\n      const oldLayout = prevProps.layout;\n      if (layout !== oldLayout) {\n        this._configureLayoutTransition();\n      }\n      if (\n        this.props.sharedTransitionTag !== undefined ||\n        prevProps.sharedTransitionTag !== undefined\n      ) {\n        this._configureSharedTransition();\n      }\n      this._NativeEventsManager?.updateEvents(prevProps);\n      this._attachAnimatedStyles();\n      this._InlinePropManager.attachInlineProps(this, this._getViewInfo());\n\n      if (IS_WEB && this.props.exiting) {\n        saveSnapshot(this._component as HTMLElement);\n      }\n\n      // Snapshot won't be undefined because it comes from getSnapshotBeforeUpdate method\n      if (\n        IS_WEB &&\n        snapshot !== null &&\n        this.props.layout &&\n        !getReducedMotionFromConfig(this.props.layout as CustomConfig)\n      ) {\n        tryActivateLayoutTransition(\n          this.props,\n          this._component as ReanimatedHTMLElement,\n          snapshot\n        );\n      }\n    }\n\n    _configureLayoutTransition() {\n      if (IS_WEB) {\n        return;\n      }\n\n      const layout = this.props.layout\n        ? maybeBuild(\n            this.props.layout,\n            undefined /* We don't have to warn user if style has common properties with animation for LAYOUT */,\n            AnimatedComponent.displayName\n          )\n        : undefined;\n      updateLayoutAnimations(\n        this._componentViewTag,\n        LayoutAnimationType.LAYOUT,\n        layout\n      );\n    }\n\n    _configureSharedTransition(isUnmounting = false) {\n      if (IS_WEB) {\n        return;\n      }\n\n      const { sharedTransitionTag } = this.props;\n      if (!sharedTransitionTag) {\n        this._sharedElementTransition?.unregisterTransition(\n          this._componentViewTag,\n          isUnmounting\n        );\n        this._sharedElementTransition = null;\n        return;\n      }\n      const sharedElementTransition =\n        this.props.sharedTransitionStyle ??\n        this._sharedElementTransition ??\n        new SharedTransition();\n      sharedElementTransition.registerTransition(\n        this._componentViewTag,\n        sharedTransitionTag,\n        isUnmounting\n      );\n      this._sharedElementTransition = sharedElementTransition;\n    }\n\n    _setComponentRef = setAndForwardRef<Component | HTMLElement>({\n      getForwardedRef: () =>\n        this.props.forwardedRef as MutableRefObject<\n          Component<Record<string, unknown>, Record<string, unknown>, unknown>\n        >,\n      setLocalRef: (ref) => {\n        // TODO update config\n\n        const tag = findNodeHandle(ref as Component);\n\n        // callback refs are executed twice - when the component mounts with ref,\n        // and with null when it unmounts\n        if (tag !== null) {\n          this._componentViewTag = tag;\n        }\n\n        const { layout, entering, exiting, sharedTransitionTag } = this.props;\n        if (\n          (layout || entering || exiting || sharedTransitionTag) &&\n          tag != null\n        ) {\n          if (!SHOULD_BE_USE_WEB) {\n            enableLayoutAnimations(true, false);\n          }\n\n          if (sharedTransitionTag) {\n            this._configureSharedTransition();\n          }\n          if (exiting && isFabric()) {\n            const reduceMotionInExiting =\n              'getReduceMotion' in exiting &&\n              typeof exiting.getReduceMotion === 'function'\n                ? getReduceMotionFromConfig(exiting.getReduceMotion())\n                : getReduceMotionFromConfig();\n            if (!reduceMotionInExiting) {\n              updateLayoutAnimations(\n                tag,\n                LayoutAnimationType.EXITING,\n                maybeBuild(\n                  exiting,\n                  this.props?.style,\n                  AnimatedComponent.displayName\n                )\n              );\n            }\n          }\n\n          const skipEntering = this.context?.current;\n          if (entering && !skipEntering && !IS_WEB) {\n            updateLayoutAnimations(\n              tag,\n              LayoutAnimationType.ENTERING,\n              maybeBuild(\n                entering,\n                this.props?.style,\n                AnimatedComponent.displayName\n              )\n            );\n          }\n        }\n\n        if (ref !== this._component) {\n          this._component = ref;\n        }\n      },\n    });\n\n    // This is a component lifecycle method from React, therefore we are not calling it directly.\n    // It is called before the component gets rerendered. This way we can access components' position before it changed\n    // and later on, in componentDidUpdate, calculate translation for layout transition.\n    getSnapshotBeforeUpdate() {\n      if (\n        IS_WEB &&\n        (this._component as HTMLElement)?.getBoundingClientRect !== undefined\n      ) {\n        return (this._component as HTMLElement).getBoundingClientRect();\n      }\n\n      return null;\n    }\n\n    render() {\n      const filteredProps = this._PropsFilter.filterNonAnimatedProps(this);\n\n      if (IS_JEST) {\n        filteredProps.jestAnimatedStyle = this.jestAnimatedStyle;\n      }\n\n      // Layout animations on web are set inside `componentDidMount` method, which is called after first render.\n      // Because of that we can encounter a situation in which component is visible for a short amount of time, and later on animation triggers.\n      // I've tested that on various browsers and devices and it did not happen to me. To be sure that it won't happen to someone else,\n      // I've decided to hide component at first render. Its visibility is reset in `componentDidMount`.\n      if (\n        this._isFirstRender &&\n        IS_WEB &&\n        filteredProps.entering &&\n        !getReducedMotionFromConfig(filteredProps.entering as CustomConfig)\n      ) {\n        filteredProps.style = {\n          ...(filteredProps.style ?? {}),\n          visibility: 'hidden', // Hide component until `componentDidMount` triggers\n        };\n      }\n\n      const platformProps = Platform.select({\n        web: {},\n        default: { collapsable: false },\n      });\n\n      const skipEntering = this.context?.current;\n      const nativeID =\n        skipEntering || !isFabric() ? undefined : `${this.reanimatedID}`;\n\n      const jestProps = IS_JEST\n        ? {\n            jestInlineStyle: this.props.style,\n            jestAnimatedStyle: this.jestAnimatedStyle,\n          }\n        : {};\n\n      return (\n        <Component\n          nativeID={nativeID}\n          {...filteredProps}\n          {...jestProps}\n          // Casting is used here, because ref can be null - in that case it cannot be assigned to HTMLElement.\n          // After spending some time trying to figure out what to do with this problem, we decided to leave it this way\n          ref={this._setComponentRef as (ref: Component) => void}\n          {...platformProps}\n        />\n      );\n    }\n  }\n\n  AnimatedComponent.displayName = `AnimatedComponent(${\n    Component.displayName || Component.name || 'Component'\n  })`;\n\n  return React.forwardRef<Component>((props, ref) => {\n    return (\n      <AnimatedComponent\n        {...props}\n        {...(ref === null ? null : { forwardedRef: ref })}\n      />\n    );\n  });\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}