{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GestureObjects = void 0;\nvar _construct2 = _interopRequireDefault(require(\"@babel/runtime/helpers/construct\"));\nvar _flingGesture = require(\"./flingGesture\");\nvar _forceTouchGesture = require(\"./forceTouchGesture\");\nvar _gestureComposition = require(\"./gestureComposition\");\nvar _longPressGesture = require(\"./longPressGesture\");\nvar _panGesture = require(\"./panGesture\");\nvar _pinchGesture = require(\"./pinchGesture\");\nvar _rotationGesture = require(\"./rotationGesture\");\nvar _tapGesture = require(\"./tapGesture\");\nvar _nativeGesture = require(\"./nativeGesture\");\nvar _manualGesture = require(\"./manualGesture\");\nvar _hoverGesture = require(\"./hoverGesture\");\nvar GestureObjects = exports.GestureObjects = {\n  Tap: function Tap() {\n    return new _tapGesture.TapGesture();\n  },\n  Pan: function Pan() {\n    return new _panGesture.PanGesture();\n  },\n  Pinch: function Pinch() {\n    return new _pinchGesture.PinchGesture();\n  },\n  Rotation: function Rotation() {\n    return new _rotationGesture.RotationGesture();\n  },\n  Fling: function Fling() {\n    return new _flingGesture.FlingGesture();\n  },\n  LongPress: function LongPress() {\n    return new _longPressGesture.LongPressGesture();\n  },\n  ForceTouch: function ForceTouch() {\n    return new _forceTouchGesture.ForceTouchGesture();\n  },\n  Native: function Native() {\n    return new _nativeGesture.NativeGesture();\n  },\n  Manual: function Manual() {\n    return new _manualGesture.ManualGesture();\n  },\n  Hover: function Hover() {\n    return new _hoverGesture.HoverGesture();\n  },\n  Race: function Race() {\n    for (var _len = arguments.length, gestures = new Array(_len), _key = 0; _key < _len; _key++) {\n      gestures[_key] = arguments[_key];\n    }\n    return (0, _construct2.default)(_gestureComposition.ComposedGesture, gestures);\n  },\n  Simultaneous: function Simultaneous() {\n    for (var _len2 = arguments.length, gestures = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      gestures[_key2] = arguments[_key2];\n    }\n    return (0, _construct2.default)(_gestureComposition.SimultaneousGesture, gestures);\n  },\n  Exclusive: function Exclusive() {\n    for (var _len3 = arguments.length, gestures = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      gestures[_key3] = arguments[_key3];\n    }\n    return (0, _construct2.default)(_gestureComposition.ExclusiveGesture, gestures);\n  }\n};","map":{"version":3,"names":["_flingGesture","require","_forceTouchGesture","_gestureComposition","_longPressGesture","_panGesture","_pinchGesture","_rotationGesture","_tapGesture","_nativeGesture","_manualGesture","_hoverGesture","GestureObjects","exports","Tap","TapGesture","Pan","PanGesture","Pinch","PinchGesture","Rotation","RotationGesture","Fling","FlingGesture","LongPress","LongPressGesture","ForceTouch","ForceTouchGesture","Native","NativeGesture","Manual","ManualGesture","Hover","HoverGesture","Race","_len","arguments","length","gestures","Array","_key","_construct2","default","ComposedGesture","Simultaneous","_len2","_key2","SimultaneousGesture","Exclusive","_len3","_key3","ExclusiveGesture"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/gestureObjects.ts"],"sourcesContent":["import { FlingGesture } from './flingGesture';\nimport { ForceTouchGesture } from './forceTouchGesture';\nimport { Gesture } from './gesture';\nimport {\n  ComposedGesture,\n  ExclusiveGesture,\n  SimultaneousGesture,\n} from './gestureComposition';\nimport { LongPressGesture } from './longPressGesture';\nimport { PanGesture } from './panGesture';\nimport { PinchGesture } from './pinchGesture';\nimport { RotationGesture } from './rotationGesture';\nimport { TapGesture } from './tapGesture';\nimport { NativeGesture } from './nativeGesture';\nimport { ManualGesture } from './manualGesture';\nimport { HoverGesture } from './hoverGesture';\n\n/**\n * `Gesture` is the object that allows you to create and compose gestures.\n *\n * ### Remarks\n * - Consider wrapping your gesture configurations with `useMemo`, as it will reduce the amount of work Gesture Handler has to do under the hood when updating gestures.\n *\n * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/gesture\n */\nexport const GestureObjects = {\n  /**\n   * A discrete gesture that recognizes one or many taps.\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/tap-gesture\n   */\n  Tap: () => {\n    return new TapGesture();\n  },\n\n  /**\n   * A continuous gesture that can recognize a panning (dragging) gesture and track its movement.\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture\n   */\n  Pan: () => {\n    return new PanGesture();\n  },\n\n  /**\n   * A continuous gesture that recognizes pinch gesture. It allows for tracking the distance between two fingers and use that information to scale or zoom your content.\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pinch-gesture\n   */\n  Pinch: () => {\n    return new PinchGesture();\n  },\n\n  /**\n   * A continuous gesture that can recognize rotation and track its movement.\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/rotation-gesture\n   */\n  Rotation: () => {\n    return new RotationGesture();\n  },\n\n  /**\n   * A discrete gesture that activates when the movement is sufficiently fast.\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/fling-gesture\n   */\n  Fling: () => {\n    return new FlingGesture();\n  },\n\n  /**\n   * A discrete gesture that activates when the corresponding view is pressed for a sufficiently long time.\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/long-press-gesture\n   */\n  LongPress: () => {\n    return new LongPressGesture();\n  },\n\n  /**\n   * #### iOS only\n   * A continuous gesture that recognizes force of a touch. It allows for tracking pressure of touch on some iOS devices.\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/force-touch-gesture\n   */\n  ForceTouch: () => {\n    return new ForceTouchGesture();\n  },\n\n  /**\n   * A gesture that allows other touch handling components to participate in RNGH's gesture system.\n   * When used, the other component should be the direct child of a `GestureDetector`.\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/native-gesture\n   */\n  Native: () => {\n    return new NativeGesture();\n  },\n\n  /**\n   * A plain gesture that has no specific activation criteria nor event data set.\n   * Its state has to be controlled manually using a state manager.\n   * It will not fail when all the pointers are lifted from the screen.\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/manual-gesture\n   */\n  Manual: () => {\n    return new ManualGesture();\n  },\n\n  /**\n   * A continuous gesture that can recognize hovering above the view it's attached to.\n   * The hover effect may be activated by moving a mouse or a stylus over the view.\n   *\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/hover-gesture\n   */\n  Hover: () => {\n    return new HoverGesture();\n  },\n\n  /**\n   * Builds a composed gesture consisting of gestures provided as parameters.\n   * The first one that becomes active cancels the rest of gestures.\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/gesture-composition/#race\n   */\n  Race: (...gestures: Gesture[]) => {\n    return new ComposedGesture(...gestures);\n  },\n\n  /**\n   * Builds a composed gesture that allows all base gestures to run simultaneously.\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/gesture-composition/#simultaneous\n   */\n  Simultaneous(...gestures: Gesture[]) {\n    return new SimultaneousGesture(...gestures);\n  },\n\n  /**\n   * Builds a composed gesture where only one of the provided gestures can become active.\n   * Priority is decided through the order of gestures: the first one has higher priority\n   * than the second one, second one has higher priority than the third one, and so on.\n   * For example, to make a gesture that recognizes both single and double tap you need\n   * to call Exclusive(doubleTap, singleTap).\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/gesture-composition/#exclusive\n   */\n  Exclusive(...gestures: Gesture[]) {\n    return new ExclusiveGesture(...gestures);\n  },\n};\n"],"mappings":";;;;;;AAAA,IAAAA,aAAA,GAAAC,OAAA;AACA,IAAAC,kBAAA,GAAAD,OAAA;AAEA,IAAAE,mBAAA,GAAAF,OAAA;AAKA,IAAAG,iBAAA,GAAAH,OAAA;AACA,IAAAI,WAAA,GAAAJ,OAAA;AACA,IAAAK,aAAA,GAAAL,OAAA;AACA,IAAAM,gBAAA,GAAAN,OAAA;AACA,IAAAO,WAAA,GAAAP,OAAA;AACA,IAAAQ,cAAA,GAAAR,OAAA;AACA,IAAAS,cAAA,GAAAT,OAAA;AACA,IAAAU,aAAA,GAAAV,OAAA;AAUO,IAAMW,cAAc,GAAAC,OAAA,CAAAD,cAAA,GAAG;EAK5BE,GAAG,EAAE,SAALA,GAAGA,CAAA,EAAQ;IACT,OAAO,IAAIC,sBAAJ,EAAP;EACD,CAP2B;EAa5BC,GAAG,EAAE,SAALA,GAAGA,CAAA,EAAQ;IACT,OAAO,IAAIC,sBAAJ,EAAP;EACD,CAf2B;EAqB5BC,KAAK,EAAE,SAAPA,KAAKA,CAAA,EAAQ;IACX,OAAO,IAAIC,0BAAJ,EAAP;EACD,CAvB2B;EA6B5BC,QAAQ,EAAE,SAAVA,QAAQA,CAAA,EAAQ;IACd,OAAO,IAAIC,gCAAJ,EAAP;EACD,CA/B2B;EAqC5BC,KAAK,EAAE,SAAPA,KAAKA,CAAA,EAAQ;IACX,OAAO,IAAIC,0BAAJ,EAAP;EACD,CAvC2B;EA6C5BC,SAAS,EAAE,SAAXA,SAASA,CAAA,EAAQ;IACf,OAAO,IAAIC,kCAAJ,EAAP;EACD,CA/C2B;EAsD5BC,UAAU,EAAE,SAAZA,UAAUA,CAAA,EAAQ;IAChB,OAAO,IAAIC,oCAAJ,EAAP;EACD,CAxD2B;EA+D5BC,MAAM,EAAE,SAARA,MAAMA,CAAA,EAAQ;IACZ,OAAO,IAAIC,4BAAJ,EAAP;EACD,CAjE2B;EAyE5BC,MAAM,EAAE,SAARA,MAAMA,CAAA,EAAQ;IACZ,OAAO,IAAIC,4BAAJ,EAAP;EACD,CA3E2B;EAmF5BC,KAAK,EAAE,SAAPA,KAAKA,CAAA,EAAQ;IACX,OAAO,IAAIC,0BAAJ,EAAP;EACD,CArF2B;EA4F5BC,IAAI,EAAE,SAANA,IAAIA,CAAA,EAA8B;IAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAxBC,QAAJ,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAIF,QAAJ,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;IAAA;IACJ,WAAAC,WAAA,CAAAC,OAAA,EAAWC,mCAAJ,EAAuBL,QAAvB;EACR,CA9F2B;EAoG5BM,YAAY,WAAZA,YAAYA,CAAA,EAAyB;IAAA,SAAAC,KAAA,GAAAT,SAAA,CAAAC,MAAA,EAArBC,QAAJ,OAAAC,KAAA,CAAAM,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;MAAIR,QAAJ,CAAAQ,KAAA,IAAAV,SAAA,CAAAU,KAAA;IAAA;IACV,WAAAL,WAAA,CAAAC,OAAA,EAAWK,uCAAJ,EAA2BT,QAA3B;EACR,CAtG2B;EAgH5BU,SAAS,WAATA,SAASA,CAAA,EAAyB;IAAA,SAAAC,KAAA,GAAAb,SAAA,CAAAC,MAAA,EAArBC,QAAJ,OAAAC,KAAA,CAAAU,KAAA,GAAAC,KAAA,MAAAA,KAAA,GAAAD,KAAA,EAAAC,KAAA;MAAIZ,QAAJ,CAAAY,KAAA,IAAAd,SAAA,CAAAc,KAAA;IAAA;IACP,WAAAT,WAAA,CAAAC,OAAA,EAAWS,oCAAJ,EAAwBb,QAAxB;EACR;AAlH2B,CAAvB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}