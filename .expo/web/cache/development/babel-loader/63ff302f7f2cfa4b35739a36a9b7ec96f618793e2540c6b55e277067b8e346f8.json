{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.makeMutable = void 0;\nexports.makeMutableUI = makeMutableUI;\nvar _PlatformChecker = require(\"./PlatformChecker.js\");\nvar _errors = require(\"./errors.js\");\nvar _index = require(\"./logger/index.js\");\nvar _reactUtils = require(\"./reactUtils.js\");\nvar _shareableMappingCache = require(\"./shareableMappingCache.js\");\nvar _shareables = require(\"./shareables.js\");\nvar _threads = require(\"./threads.js\");\nvar _valueSetter = require(\"./valueSetter.js\");\nvar SHOULD_BE_USE_WEB = (0, _PlatformChecker.shouldBeUseWeb)();\nfunction shouldWarnAboutAccessDuringRender() {\n  return __DEV__ && (0, _reactUtils.isReactRendering)() && !(0, _reactUtils.isFirstReactRender)();\n}\nfunction checkInvalidReadDuringRender() {\n  if (shouldWarnAboutAccessDuringRender()) {\n    _index.logger.warn('Reading from `value` during component render. Please ensure that you do not access the `value` property or use `get` method of a shared value while React is rendering a component.', {\n      strict: true\n    });\n  }\n}\nfunction checkInvalidWriteDuringRender() {\n  if (shouldWarnAboutAccessDuringRender()) {\n    _index.logger.warn('Writing to `value` during component render. Please ensure that you do not access the `value` property or use `set` method of a shared value while React is rendering a component.', {\n      strict: true\n    });\n  }\n}\nfunction addCompilerSafeGetAndSet(mutable) {\n  'worklet';\n\n  Object.defineProperties(mutable, {\n    get: {\n      value: function value() {\n        return mutable.value;\n      },\n      configurable: false,\n      enumerable: false\n    },\n    set: {\n      value: function value(newValue) {\n        if (typeof newValue === 'function' && !newValue.__isAnimationDefinition) {\n          mutable.value = newValue(mutable.value);\n        } else {\n          mutable.value = newValue;\n        }\n      },\n      configurable: false,\n      enumerable: false\n    }\n  });\n}\nfunction hideInternalValueProp(mutable) {\n  'worklet';\n\n  Object.defineProperty(mutable, '_value', {\n    configurable: false,\n    enumerable: false\n  });\n}\nfunction makeMutableUI(initial) {\n  'worklet';\n\n  var listeners = new Map();\n  var value = initial;\n  var mutable = {\n    get value() {\n      return value;\n    },\n    set value(newValue) {\n      (0, _valueSetter.valueSetter)(mutable, newValue);\n    },\n    get _value() {\n      return value;\n    },\n    set _value(newValue) {\n      value = newValue;\n      listeners.forEach(function (listener) {\n        listener(newValue);\n      });\n    },\n    modify: function modify(modifier) {\n      var forceUpdate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      (0, _valueSetter.valueSetter)(mutable, modifier !== undefined ? modifier(value) : value, forceUpdate);\n    },\n    addListener: function addListener(id, listener) {\n      listeners.set(id, listener);\n    },\n    removeListener: function removeListener(id) {\n      listeners.delete(id);\n    },\n    _animation: null,\n    _isReanimatedSharedValue: true\n  };\n  hideInternalValueProp(mutable);\n  addCompilerSafeGetAndSet(mutable);\n  return mutable;\n}\nfunction makeMutableNative(initial) {\n  var handle = (0, _shareables.makeShareableCloneRecursive)({\n    __init: function __init() {\n      'worklet';\n\n      return makeMutableUI(initial);\n    }\n  });\n  var mutable = {\n    get value() {\n      checkInvalidReadDuringRender();\n      var uiValueGetter = (0, _threads.executeOnUIRuntimeSync)(function (sv) {\n        return sv.value;\n      });\n      return uiValueGetter(mutable);\n    },\n    set value(newValue) {\n      checkInvalidWriteDuringRender();\n      (0, _threads.runOnUI)(function () {\n        mutable.value = newValue;\n      })();\n    },\n    get _value() {\n      throw new _errors.ReanimatedError('Reading from `_value` directly is only possible on the UI runtime. Perhaps you passed an Animated Style to a non-animated component?');\n    },\n    set _value(_newValue) {\n      throw new _errors.ReanimatedError('Setting `_value` directly is only possible on the UI runtime. Perhaps you want to assign to `value` instead?');\n    },\n    modify: function modify(modifier) {\n      var forceUpdate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      (0, _threads.runOnUI)(function () {\n        mutable.modify(modifier, forceUpdate);\n      })();\n    },\n    addListener: function addListener() {\n      throw new _errors.ReanimatedError('Adding listeners is only possible on the UI runtime.');\n    },\n    removeListener: function removeListener() {\n      throw new _errors.ReanimatedError('Removing listeners is only possible on the UI runtime.');\n    },\n    _isReanimatedSharedValue: true\n  };\n  hideInternalValueProp(mutable);\n  addCompilerSafeGetAndSet(mutable);\n  _shareableMappingCache.shareableMappingCache.set(mutable, handle);\n  return mutable;\n}\nfunction makeMutableWeb(initial) {\n  var value = initial;\n  var listeners = new Map();\n  var mutable = {\n    get value() {\n      checkInvalidReadDuringRender();\n      return value;\n    },\n    set value(newValue) {\n      checkInvalidWriteDuringRender();\n      (0, _valueSetter.valueSetter)(mutable, newValue);\n    },\n    get _value() {\n      return value;\n    },\n    set _value(newValue) {\n      value = newValue;\n      listeners.forEach(function (listener) {\n        listener(newValue);\n      });\n    },\n    modify: function modify(modifier) {\n      var forceUpdate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      (0, _valueSetter.valueSetter)(mutable, modifier !== undefined ? modifier(mutable.value) : mutable.value, forceUpdate);\n    },\n    addListener: function addListener(id, listener) {\n      listeners.set(id, listener);\n    },\n    removeListener: function removeListener(id) {\n      listeners.delete(id);\n    },\n    _isReanimatedSharedValue: true\n  };\n  hideInternalValueProp(mutable);\n  addCompilerSafeGetAndSet(mutable);\n  return mutable;\n}\nvar makeMutable = exports.makeMutable = SHOULD_BE_USE_WEB ? makeMutableWeb : makeMutableNative;","map":{"version":3,"names":["Object","defineProperty","exports","value","makeMutable","makeMutableUI","_PlatformChecker","require","_errors","_index","_reactUtils","_shareableMappingCache","_shareables","_threads","_valueSetter","SHOULD_BE_USE_WEB","shouldBeUseWeb","shouldWarnAboutAccessDuringRender","__DEV__","isReactRendering","isFirstReactRender","checkInvalidReadDuringRender","logger","warn","strict","checkInvalidWriteDuringRender","addCompilerSafeGetAndSet","mutable","defineProperties","get","configurable","enumerable","set","newValue","__isAnimationDefinition","hideInternalValueProp","initial","listeners","Map","valueSetter","_value","forEach","listener","modify","modifier","forceUpdate","arguments","length","undefined","addListener","id","removeListener","delete","_animation","_isReanimatedSharedValue","makeMutableNative","handle","makeShareableCloneRecursive","__init","uiValueGetter","executeOnUIRuntimeSync","sv","runOnUI","ReanimatedError","_newValue","shareableMappingCache","makeMutableWeb"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/react-native-reanimated/src/mutables.ts"],"sourcesContent":["'use strict';\nimport { shouldBeUseWeb } from './PlatformChecker';\nimport type { Mutable } from './commonTypes';\nimport { ReanimatedError } from './errors';\nimport { logger } from './logger';\nimport { isFirstReactRender, isReactRendering } from './reactUtils';\nimport { shareableMappingCache } from './shareableMappingCache';\nimport { makeShareableCloneRecursive } from './shareables';\nimport { executeOnUIRuntimeSync, runOnUI } from './threads';\nimport { valueSetter } from './valueSetter';\n\nconst SHOULD_BE_USE_WEB = shouldBeUseWeb();\n\nfunction shouldWarnAboutAccessDuringRender() {\n  return __DEV__ && isReactRendering() && !isFirstReactRender();\n}\n\nfunction checkInvalidReadDuringRender() {\n  if (shouldWarnAboutAccessDuringRender()) {\n    logger.warn(\n      'Reading from `value` during component render. Please ensure that you do not access the `value` property or use `get` method of a shared value while React is rendering a component.',\n      { strict: true }\n    );\n  }\n}\n\nfunction checkInvalidWriteDuringRender() {\n  if (shouldWarnAboutAccessDuringRender()) {\n    logger.warn(\n      'Writing to `value` during component render. Please ensure that you do not access the `value` property or use `set` method of a shared value while React is rendering a component.',\n      { strict: true }\n    );\n  }\n}\n\ntype Listener<Value> = (newValue: Value) => void;\n\ntype PartialMutable<Value> = Omit<Mutable<Value>, 'get' | 'set'>;\n\n/**\n * Adds `get` and `set` methods to the mutable object to handle access to\n * `value` property.\n *\n * React Compiler disallows modifying return values of hooks. Even though\n * assignment to `value` is a setter invocation, Compiler's static analysis\n * doesn't detect it. That's why we provide a second API for users using the\n * Compiler.\n */\nfunction addCompilerSafeGetAndSet<Value>(mutable: PartialMutable<Value>): void {\n  'worklet';\n  Object.defineProperties(mutable, {\n    get: {\n      value() {\n        return mutable.value;\n      },\n      configurable: false,\n      enumerable: false,\n    },\n    set: {\n      value(newValue: Value | ((value: Value) => Value)) {\n        if (\n          typeof newValue === 'function' &&\n          // If we have an animation definition, we don't want to call it here.\n          !(newValue as Record<string, unknown>).__isAnimationDefinition\n        ) {\n          mutable.value = (newValue as (value: Value) => Value)(mutable.value);\n        } else {\n          mutable.value = newValue as Value;\n        }\n      },\n      configurable: false,\n      enumerable: false,\n    },\n  });\n}\n/**\n * Hides the internal `_value` property of a mutable. It won't be visible to:\n *\n * - `Object.keys`,\n * - `const prop in obj`,\n * - Etc.\n *\n * This way when the user accidentally sends the SharedValue to React, he won't\n * get an obscure error message.\n *\n * We hide for both _React runtime_ and _Worklet runtime_ mutables for\n * uniformity of behavior.\n */\nfunction hideInternalValueProp<Value>(mutable: PartialMutable<Value>) {\n  'worklet';\n  Object.defineProperty(mutable, '_value', {\n    configurable: false,\n    enumerable: false,\n  });\n}\n\nexport function makeMutableUI<Value>(initial: Value): Mutable<Value> {\n  'worklet';\n  const listeners = new Map<number, Listener<Value>>();\n  let value = initial;\n\n  const mutable: PartialMutable<Value> = {\n    get value() {\n      return value;\n    },\n    set value(newValue) {\n      valueSetter(mutable as Mutable<Value>, newValue);\n    },\n    get _value(): Value {\n      return value;\n    },\n    set _value(newValue: Value) {\n      value = newValue;\n      listeners.forEach((listener) => {\n        listener(newValue);\n      });\n    },\n    modify: (modifier, forceUpdate = true) => {\n      valueSetter(\n        mutable as Mutable<Value>,\n        modifier !== undefined ? modifier(value) : value,\n        forceUpdate\n      );\n    },\n    addListener: (id: number, listener: Listener<Value>) => {\n      listeners.set(id, listener);\n    },\n    removeListener: (id: number) => {\n      listeners.delete(id);\n    },\n\n    _animation: null,\n    _isReanimatedSharedValue: true,\n  };\n\n  hideInternalValueProp(mutable);\n  addCompilerSafeGetAndSet(mutable);\n\n  return mutable as Mutable<Value>;\n}\n\nfunction makeMutableNative<Value>(initial: Value): Mutable<Value> {\n  const handle = makeShareableCloneRecursive({\n    __init: () => {\n      'worklet';\n      return makeMutableUI(initial);\n    },\n  });\n\n  const mutable: PartialMutable<Value> = {\n    get value(): Value {\n      checkInvalidReadDuringRender();\n      const uiValueGetter = executeOnUIRuntimeSync((sv: Mutable<Value>) => {\n        return sv.value;\n      });\n      return uiValueGetter(mutable as Mutable<Value>);\n    },\n    set value(newValue) {\n      checkInvalidWriteDuringRender();\n      runOnUI(() => {\n        mutable.value = newValue;\n      })();\n    },\n\n    get _value(): Value {\n      throw new ReanimatedError(\n        'Reading from `_value` directly is only possible on the UI runtime. Perhaps you passed an Animated Style to a non-animated component?'\n      );\n    },\n    set _value(_newValue: Value) {\n      throw new ReanimatedError(\n        'Setting `_value` directly is only possible on the UI runtime. Perhaps you want to assign to `value` instead?'\n      );\n    },\n\n    modify: (modifier, forceUpdate = true) => {\n      runOnUI(() => {\n        mutable.modify(modifier, forceUpdate);\n      })();\n    },\n    addListener: () => {\n      throw new ReanimatedError(\n        'Adding listeners is only possible on the UI runtime.'\n      );\n    },\n    removeListener: () => {\n      throw new ReanimatedError(\n        'Removing listeners is only possible on the UI runtime.'\n      );\n    },\n\n    _isReanimatedSharedValue: true,\n  };\n\n  hideInternalValueProp(mutable);\n  addCompilerSafeGetAndSet(mutable);\n\n  shareableMappingCache.set(mutable, handle);\n  return mutable as Mutable<Value>;\n}\n\nfunction makeMutableWeb<Value>(initial: Value): Mutable<Value> {\n  let value: Value = initial;\n  const listeners = new Map<number, Listener<Value>>();\n\n  const mutable: PartialMutable<Value> = {\n    get value(): Value {\n      checkInvalidReadDuringRender();\n      return value;\n    },\n    set value(newValue) {\n      checkInvalidWriteDuringRender();\n      valueSetter(mutable as Mutable<Value>, newValue);\n    },\n\n    get _value(): Value {\n      return value;\n    },\n    set _value(newValue: Value) {\n      value = newValue;\n      listeners.forEach((listener) => {\n        listener(newValue);\n      });\n    },\n\n    modify: (modifier, forceUpdate = true) => {\n      valueSetter(\n        mutable as Mutable<Value>,\n        modifier !== undefined ? modifier(mutable.value) : mutable.value,\n        forceUpdate\n      );\n    },\n    addListener: (id: number, listener: Listener<Value>) => {\n      listeners.set(id, listener);\n    },\n    removeListener: (id: number) => {\n      listeners.delete(id);\n    },\n\n    _isReanimatedSharedValue: true,\n  };\n\n  hideInternalValueProp(mutable);\n  addCompilerSafeGetAndSet(mutable);\n\n  return mutable as Mutable<Value>;\n}\n\nexport const makeMutable = SHOULD_BE_USE_WEB\n  ? makeMutableWeb\n  : makeMutableNative;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}