{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _State = require(\"../../State\");\nvar _Directions = require(\"../../Directions\");\nvar _GestureHandler2 = _interopRequireDefault(require(\"./GestureHandler\"));\nvar _Vector = _interopRequireDefault(require(\"../tools/Vector\"));\nvar _utils = require(\"../utils\");\nvar _excluded = [\"enabled\"];\nfunction _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _superPropGet(t, o, e, r) { var p = (0, _get2.default)((0, _getPrototypeOf2.default)(1 & r ? t.prototype : t), o, e); return 2 & r && \"function\" == typeof p ? function (t) { return p.apply(e, t); } : p; }\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nvar DEFAULT_MAX_DURATION_MS = 800;\nvar DEFAULT_MIN_VELOCITY = 700;\nvar DEFAULT_ALIGNMENT_CONE = 30;\nvar DEFAULT_DIRECTION = _Directions.Directions.RIGHT;\nvar DEFAULT_NUMBER_OF_TOUCHES_REQUIRED = 1;\nvar AXIAL_DEVIATION_COSINE = (0, _utils.coneToDeviation)(DEFAULT_ALIGNMENT_CONE);\nvar DIAGONAL_DEVIATION_COSINE = (0, _utils.coneToDeviation)(90 - DEFAULT_ALIGNMENT_CONE);\nvar FlingGestureHandler = exports.default = function (_GestureHandler) {\n  function FlingGestureHandler() {\n    var _this;\n    (0, _classCallCheck2.default)(this, FlingGestureHandler);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _callSuper(this, FlingGestureHandler, [].concat(args));\n    _defineProperty(_this, \"numberOfPointersRequired\", DEFAULT_NUMBER_OF_TOUCHES_REQUIRED);\n    _defineProperty(_this, \"direction\", DEFAULT_DIRECTION);\n    _defineProperty(_this, \"maxDurationMs\", DEFAULT_MAX_DURATION_MS);\n    _defineProperty(_this, \"minVelocity\", DEFAULT_MIN_VELOCITY);\n    _defineProperty(_this, \"delayTimeout\", void 0);\n    _defineProperty(_this, \"maxNumberOfPointersSimultaneously\", 0);\n    _defineProperty(_this, \"keyPointer\", NaN);\n    return _this;\n  }\n  (0, _inherits2.default)(FlingGestureHandler, _GestureHandler);\n  return (0, _createClass2.default)(FlingGestureHandler, [{\n    key: \"init\",\n    value: function init(ref, propsRef) {\n      _superPropGet(FlingGestureHandler, \"init\", this, 3)([ref, propsRef]);\n    }\n  }, {\n    key: \"updateGestureConfig\",\n    value: function updateGestureConfig(_ref) {\n      var _ref$enabled = _ref.enabled,\n        enabled = _ref$enabled === void 0 ? true : _ref$enabled,\n        props = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n      _superPropGet(FlingGestureHandler, \"updateGestureConfig\", this, 3)([Object.assign({\n        enabled: enabled\n      }, props)]);\n      if (this.config.direction) {\n        this.direction = this.config.direction;\n      }\n      if (this.config.numberOfPointers) {\n        this.numberOfPointersRequired = this.config.numberOfPointers;\n      }\n    }\n  }, {\n    key: \"startFling\",\n    value: function startFling() {\n      var _this2 = this;\n      this.begin();\n      this.maxNumberOfPointersSimultaneously = 1;\n      this.delayTimeout = setTimeout(function () {\n        return _this2.fail();\n      }, this.maxDurationMs);\n    }\n  }, {\n    key: \"tryEndFling\",\n    value: function tryEndFling() {\n      var _this3 = this;\n      var velocityVector = _Vector.default.fromVelocity(this.tracker, this.keyPointer);\n      var getAlignment = function getAlignment(direction, minimalAlignmentCosine) {\n        return (direction & _this3.direction) === direction && velocityVector.isSimilar(_Vector.default.fromDirection(direction), minimalAlignmentCosine);\n      };\n      var axialDirectionsList = Object.values(_Directions.Directions);\n      var diagonalDirectionsList = Object.values(_Directions.DiagonalDirections);\n      var axialAlignmentList = axialDirectionsList.map(function (direction) {\n        return getAlignment(direction, AXIAL_DEVIATION_COSINE);\n      });\n      var diagonalAlignmentList = diagonalDirectionsList.map(function (direction) {\n        return getAlignment(direction, DIAGONAL_DEVIATION_COSINE);\n      });\n      var isAligned = axialAlignmentList.some(Boolean) || diagonalAlignmentList.some(Boolean);\n      var isFast = velocityVector.magnitude > this.minVelocity;\n      if (this.maxNumberOfPointersSimultaneously === this.numberOfPointersRequired && isAligned && isFast) {\n        clearTimeout(this.delayTimeout);\n        this.activate();\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"endFling\",\n    value: function endFling() {\n      if (!this.tryEndFling()) {\n        this.fail();\n      }\n    }\n  }, {\n    key: \"onPointerDown\",\n    value: function onPointerDown(event) {\n      if (!this.isButtonInConfig(event.button)) {\n        return;\n      }\n      this.tracker.addToTracker(event);\n      this.keyPointer = event.pointerId;\n      _superPropGet(FlingGestureHandler, \"onPointerDown\", this, 3)([event]);\n      this.newPointerAction();\n      this.tryToSendTouchEvent(event);\n    }\n  }, {\n    key: \"onPointerAdd\",\n    value: function onPointerAdd(event) {\n      this.tracker.addToTracker(event);\n      _superPropGet(FlingGestureHandler, \"onPointerAdd\", this, 3)([event]);\n      this.newPointerAction();\n    }\n  }, {\n    key: \"newPointerAction\",\n    value: function newPointerAction() {\n      if (this.currentState === _State.State.UNDETERMINED) {\n        this.startFling();\n      }\n      if (this.currentState !== _State.State.BEGAN) {\n        return;\n      }\n      this.tryEndFling();\n      if (this.tracker.getTrackedPointersCount() > this.maxNumberOfPointersSimultaneously) {\n        this.maxNumberOfPointersSimultaneously = this.tracker.getTrackedPointersCount();\n      }\n    }\n  }, {\n    key: \"pointerMoveAction\",\n    value: function pointerMoveAction(event) {\n      this.tracker.track(event);\n      if (this.currentState !== _State.State.BEGAN) {\n        return;\n      }\n      this.tryEndFling();\n    }\n  }, {\n    key: \"onPointerMove\",\n    value: function onPointerMove(event) {\n      this.pointerMoveAction(event);\n      _superPropGet(FlingGestureHandler, \"onPointerMove\", this, 3)([event]);\n    }\n  }, {\n    key: \"onPointerOutOfBounds\",\n    value: function onPointerOutOfBounds(event) {\n      this.pointerMoveAction(event);\n      _superPropGet(FlingGestureHandler, \"onPointerOutOfBounds\", this, 3)([event]);\n    }\n  }, {\n    key: \"onPointerUp\",\n    value: function onPointerUp(event) {\n      _superPropGet(FlingGestureHandler, \"onPointerUp\", this, 3)([event]);\n      this.onUp(event);\n      this.keyPointer = NaN;\n    }\n  }, {\n    key: \"onPointerRemove\",\n    value: function onPointerRemove(event) {\n      _superPropGet(FlingGestureHandler, \"onPointerRemove\", this, 3)([event]);\n      this.onUp(event);\n    }\n  }, {\n    key: \"onUp\",\n    value: function onUp(event) {\n      if (this.currentState === _State.State.BEGAN) {\n        this.endFling();\n      }\n      this.tracker.removeFromTracker(event.pointerId);\n    }\n  }, {\n    key: \"activate\",\n    value: function activate(force) {\n      _superPropGet(FlingGestureHandler, \"activate\", this, 3)([force]);\n      this.end();\n    }\n  }, {\n    key: \"resetConfig\",\n    value: function resetConfig() {\n      _superPropGet(FlingGestureHandler, \"resetConfig\", this, 3)([]);\n      this.numberOfPointersRequired = DEFAULT_NUMBER_OF_TOUCHES_REQUIRED;\n      this.direction = DEFAULT_DIRECTION;\n    }\n  }]);\n}(_GestureHandler2.default);","map":{"version":3,"names":["_State","require","_Directions","_GestureHandler2","_interopRequireDefault","_Vector","_utils","_excluded","_callSuper","t","o","e","_getPrototypeOf2","default","_possibleConstructorReturn2","_isNativeReflectConstruct","Reflect","construct","constructor","apply","Boolean","prototype","valueOf","call","_superPropGet","r","p","_get2","DEFAULT_MAX_DURATION_MS","DEFAULT_MIN_VELOCITY","DEFAULT_ALIGNMENT_CONE","DEFAULT_DIRECTION","Directions","RIGHT","DEFAULT_NUMBER_OF_TOUCHES_REQUIRED","AXIAL_DEVIATION_COSINE","coneToDeviation","DIAGONAL_DEVIATION_COSINE","FlingGestureHandler","exports","_GestureHandler","_this","_classCallCheck2","_len","arguments","length","args","Array","_key","concat","_defineProperty","NaN","_inherits2","_createClass2","key","value","init","ref","propsRef","updateGestureConfig","_ref","_ref$enabled","enabled","props","_objectWithoutProperties2","Object","assign","config","direction","numberOfPointers","numberOfPointersRequired","startFling","_this2","begin","maxNumberOfPointersSimultaneously","delayTimeout","setTimeout","fail","maxDurationMs","tryEndFling","_this3","velocityVector","Vector","fromVelocity","tracker","keyPointer","getAlignment","minimalAlignmentCosine","isSimilar","fromDirection","axialDirectionsList","values","diagonalDirectionsList","DiagonalDirections","axialAlignmentList","map","diagonalAlignmentList","isAligned","some","isFast","magnitude","minVelocity","clearTimeout","activate","endFling","onPointerDown","event","isButtonInConfig","button","addToTracker","pointerId","newPointerAction","tryToSendTouchEvent","onPointerAdd","currentState","State","UNDETERMINED","BEGAN","getTrackedPointersCount","pointerMoveAction","track","onPointerMove","onPointerOutOfBounds","onPointerUp","onUp","onPointerRemove","removeFromTracker","force","end","resetConfig","GestureHandler"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/react-native-gesture-handler/lib/module/web/handlers/FlingGestureHandler.ts"],"sourcesContent":["import { State } from '../../State';\nimport { DiagonalDirections, Directions } from '../../Directions';\nimport { AdaptedEvent, Config } from '../interfaces';\n\nimport GestureHandler from './GestureHandler';\nimport Vector from '../tools/Vector';\nimport { coneToDeviation } from '../utils';\n\nconst DEFAULT_MAX_DURATION_MS = 800;\nconst DEFAULT_MIN_VELOCITY = 700;\nconst DEFAULT_ALIGNMENT_CONE = 30;\nconst DEFAULT_DIRECTION = Directions.RIGHT;\nconst DEFAULT_NUMBER_OF_TOUCHES_REQUIRED = 1;\n\nconst AXIAL_DEVIATION_COSINE = coneToDeviation(DEFAULT_ALIGNMENT_CONE);\nconst DIAGONAL_DEVIATION_COSINE = coneToDeviation(90 - DEFAULT_ALIGNMENT_CONE);\n\nexport default class FlingGestureHandler extends GestureHandler {\n  private numberOfPointersRequired = DEFAULT_NUMBER_OF_TOUCHES_REQUIRED;\n  private direction: Directions = DEFAULT_DIRECTION;\n\n  private maxDurationMs = DEFAULT_MAX_DURATION_MS;\n  private minVelocity = DEFAULT_MIN_VELOCITY;\n  private delayTimeout!: number;\n\n  private maxNumberOfPointersSimultaneously = 0;\n  private keyPointer = NaN;\n\n  public init(ref: number, propsRef: React.RefObject<unknown>): void {\n    super.init(ref, propsRef);\n  }\n\n  public updateGestureConfig({ enabled = true, ...props }: Config): void {\n    super.updateGestureConfig({ enabled: enabled, ...props });\n\n    if (this.config.direction) {\n      this.direction = this.config.direction;\n    }\n\n    if (this.config.numberOfPointers) {\n      this.numberOfPointersRequired = this.config.numberOfPointers;\n    }\n  }\n\n  private startFling(): void {\n    this.begin();\n\n    this.maxNumberOfPointersSimultaneously = 1;\n\n    this.delayTimeout = setTimeout(() => this.fail(), this.maxDurationMs);\n  }\n\n  private tryEndFling(): boolean {\n    const velocityVector = Vector.fromVelocity(this.tracker, this.keyPointer);\n\n    const getAlignment = (\n      direction: Directions | DiagonalDirections,\n      minimalAlignmentCosine: number\n    ) => {\n      return (\n        (direction & this.direction) === direction &&\n        velocityVector.isSimilar(\n          Vector.fromDirection(direction),\n          minimalAlignmentCosine\n        )\n      );\n    };\n\n    const axialDirectionsList = Object.values(Directions);\n    const diagonalDirectionsList = Object.values(DiagonalDirections);\n\n    // List of alignments to all activated directions\n    const axialAlignmentList = axialDirectionsList.map((direction) =>\n      getAlignment(direction, AXIAL_DEVIATION_COSINE)\n    );\n\n    const diagonalAlignmentList = diagonalDirectionsList.map((direction) =>\n      getAlignment(direction, DIAGONAL_DEVIATION_COSINE)\n    );\n\n    const isAligned =\n      axialAlignmentList.some(Boolean) || diagonalAlignmentList.some(Boolean);\n\n    const isFast = velocityVector.magnitude > this.minVelocity;\n\n    if (\n      this.maxNumberOfPointersSimultaneously ===\n        this.numberOfPointersRequired &&\n      isAligned &&\n      isFast\n    ) {\n      clearTimeout(this.delayTimeout);\n      this.activate();\n\n      return true;\n    }\n\n    return false;\n  }\n\n  private endFling() {\n    if (!this.tryEndFling()) {\n      this.fail();\n    }\n  }\n\n  protected onPointerDown(event: AdaptedEvent): void {\n    if (!this.isButtonInConfig(event.button)) {\n      return;\n    }\n\n    this.tracker.addToTracker(event);\n    this.keyPointer = event.pointerId;\n\n    super.onPointerDown(event);\n    this.newPointerAction();\n\n    this.tryToSendTouchEvent(event);\n  }\n\n  protected onPointerAdd(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerAdd(event);\n    this.newPointerAction();\n  }\n\n  private newPointerAction(): void {\n    if (this.currentState === State.UNDETERMINED) {\n      this.startFling();\n    }\n\n    if (this.currentState !== State.BEGAN) {\n      return;\n    }\n\n    this.tryEndFling();\n\n    if (\n      this.tracker.getTrackedPointersCount() >\n      this.maxNumberOfPointersSimultaneously\n    ) {\n      this.maxNumberOfPointersSimultaneously =\n        this.tracker.getTrackedPointersCount();\n    }\n  }\n\n  private pointerMoveAction(event: AdaptedEvent): void {\n    this.tracker.track(event);\n\n    if (this.currentState !== State.BEGAN) {\n      return;\n    }\n\n    this.tryEndFling();\n  }\n\n  protected onPointerMove(event: AdaptedEvent): void {\n    this.pointerMoveAction(event);\n    super.onPointerMove(event);\n  }\n\n  protected onPointerOutOfBounds(event: AdaptedEvent): void {\n    this.pointerMoveAction(event);\n    super.onPointerOutOfBounds(event);\n  }\n\n  protected onPointerUp(event: AdaptedEvent): void {\n    super.onPointerUp(event);\n    this.onUp(event);\n\n    this.keyPointer = NaN;\n  }\n\n  protected onPointerRemove(event: AdaptedEvent): void {\n    super.onPointerRemove(event);\n    this.onUp(event);\n  }\n\n  private onUp(event: AdaptedEvent): void {\n    if (this.currentState === State.BEGAN) {\n      this.endFling();\n    }\n\n    this.tracker.removeFromTracker(event.pointerId);\n  }\n\n  public activate(force?: boolean): void {\n    super.activate(force);\n    this.end();\n  }\n\n  protected resetConfig(): void {\n    super.resetConfig();\n    this.numberOfPointersRequired = DEFAULT_NUMBER_OF_TOUCHES_REQUIRED;\n    this.direction = DEFAULT_DIRECTION;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}