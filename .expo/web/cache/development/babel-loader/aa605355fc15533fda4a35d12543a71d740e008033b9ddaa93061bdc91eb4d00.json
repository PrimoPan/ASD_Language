{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GestureDetector = void 0;\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _findNodeHandle = _interopRequireDefault(require(\"../../../findNodeHandle\"));\nvar _utils = require(\"../../../utils\");\nvar _GestureHandlerRootViewContext = _interopRequireDefault(require(\"../../../GestureHandlerRootViewContext\"));\nvar _useAnimatedGesture = require(\"./useAnimatedGesture\");\nvar _attachHandlers = require(\"./attachHandlers\");\nvar _needsToReattach = require(\"./needsToReattach\");\nvar _dropHandlers = require(\"./dropHandlers\");\nvar _utils2 = require(\"./utils\");\nvar _Wrap = require(\"./Wrap\");\nvar _useDetectorUpdater = require(\"./useDetectorUpdater\");\nvar _useViewRefHandler = require(\"./useViewRefHandler\");\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nfunction propagateDetectorConfig(props, gesture) {\n  var keysToPropagate = ['userSelect', 'enableContextMenu', 'touchAction'];\n  for (var key of keysToPropagate) {\n    var value = props[key];\n    if (value === undefined) {\n      continue;\n    }\n    for (var g of gesture.toGestureArray()) {\n      var config = g.config;\n      config[key] = value;\n    }\n  }\n}\nvar GestureDetector = exports.GestureDetector = function GestureDetector(props) {\n  var rootViewContext = (0, _react.useContext)(_GestureHandlerRootViewContext.default);\n  if (__DEV__ && !rootViewContext && !(0, _utils.isJestEnv)() && _reactNative.Platform.OS !== 'web') {\n    throw new Error('GestureDetector must be used as a descendant of GestureHandlerRootView. Otherwise the gestures will not be recognized. See https://docs.swmansion.com/react-native-gesture-handler/docs/installation for more details.');\n  }\n  var gestureConfig = props.gesture;\n  propagateDetectorConfig(props, gestureConfig);\n  var gesturesToAttach = (0, _react.useMemo)(function () {\n    return gestureConfig.toGestureArray();\n  }, [gestureConfig]);\n  var shouldUseReanimated = gesturesToAttach.some(function (g) {\n    return g.shouldUseReanimated;\n  });\n  var webEventHandlersRef = (0, _utils2.useWebEventHandlers)();\n  var state = (0, _react.useRef)({\n    firstRender: true,\n    viewRef: null,\n    previousViewTag: -1,\n    forceRebuildReanimatedEvent: false\n  }).current;\n  var preparedGesture = _react.default.useRef({\n    attachedGestures: [],\n    animatedEventHandler: null,\n    animatedHandlers: null,\n    shouldUseReanimated: shouldUseReanimated,\n    isMounted: false\n  }).current;\n  var updateAttachedGestures = (0, _useDetectorUpdater.useDetectorUpdater)(state, preparedGesture, gesturesToAttach, gestureConfig, webEventHandlersRef);\n  var refHandler = (0, _useViewRefHandler.useViewRefHandler)(state, updateAttachedGestures);\n  var needsToRebuildReanimatedEvent = state.firstRender || state.forceRebuildReanimatedEvent || (0, _needsToReattach.needsToReattach)(preparedGesture, gesturesToAttach);\n  state.forceRebuildReanimatedEvent = false;\n  (0, _useAnimatedGesture.useAnimatedGesture)(preparedGesture, needsToRebuildReanimatedEvent);\n  (0, _react.useLayoutEffect)(function () {\n    var viewTag = (0, _findNodeHandle.default)(state.viewRef);\n    preparedGesture.isMounted = true;\n    (0, _attachHandlers.attachHandlers)({\n      preparedGesture: preparedGesture,\n      gestureConfig: gestureConfig,\n      gesturesToAttach: gesturesToAttach,\n      webEventHandlersRef: webEventHandlersRef,\n      viewTag: viewTag\n    });\n    return function () {\n      preparedGesture.isMounted = false;\n      (0, _dropHandlers.dropHandlers)(preparedGesture);\n    };\n  }, []);\n  (0, _react.useEffect)(function () {\n    if (state.firstRender) {\n      state.firstRender = false;\n    } else {\n      updateAttachedGestures();\n    }\n  }, [props]);\n  if (shouldUseReanimated) {\n    return _react.default.createElement(_Wrap.AnimatedWrap, {\n      ref: refHandler,\n      onGestureHandlerEvent: preparedGesture.animatedEventHandler\n    }, props.children);\n  } else {\n    return _react.default.createElement(_Wrap.Wrap, {\n      ref: refHandler\n    }, props.children);\n  }\n};","map":{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_findNodeHandle","_interopRequireDefault","_utils","_GestureHandlerRootViewContext","_useAnimatedGesture","_attachHandlers","_needsToReattach","_dropHandlers","_utils2","_Wrap","_useDetectorUpdater","_useViewRefHandler","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","propagateDetectorConfig","props","gesture","keysToPropagate","key","value","undefined","g","toGestureArray","config","GestureDetector","exports","rootViewContext","useContext","GestureHandlerRootViewContext","__DEV__","isJestEnv","Platform","OS","Error","gestureConfig","gesturesToAttach","useMemo","shouldUseReanimated","some","webEventHandlersRef","useWebEventHandlers","state","useRef","firstRender","viewRef","previousViewTag","forceRebuildReanimatedEvent","current","preparedGesture","React","attachedGestures","animatedEventHandler","animatedHandlers","isMounted","updateAttachedGestures","useDetectorUpdater","refHandler","useViewRefHandler","needsToRebuildReanimatedEvent","needsToReattach","useAnimatedGesture","useLayoutEffect","viewTag","findNodeHandle","attachHandlers","dropHandlers","useEffect","createElement","AnimatedWrap","ref","onGestureHandlerEvent","children","Wrap"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/GestureDetector/index.tsx"],"sourcesContent":["/* eslint-disable react/no-unused-prop-types */\nimport React, {\n  useContext,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n} from 'react';\nimport { Platform } from 'react-native';\nimport findNodeHandle from '../../../findNodeHandle';\nimport { GestureType } from '../gesture';\nimport { UserSelect, TouchAction } from '../../gestureHandlerCommon';\nimport { ComposedGesture } from '../gestureComposition';\nimport { isJestEnv } from '../../../utils';\n\nimport GestureHandlerRootViewContext from '../../../GestureHandlerRootViewContext';\nimport { AttachedGestureState, GestureDetectorState } from './types';\nimport { useAnimatedGesture } from './useAnimatedGesture';\nimport { attachHandlers } from './attachHandlers';\nimport { needsToReattach } from './needsToReattach';\nimport { dropHandlers } from './dropHandlers';\nimport { useWebEventHandlers } from './utils';\nimport { Wrap, AnimatedWrap } from './Wrap';\nimport { useDetectorUpdater } from './useDetectorUpdater';\nimport { useViewRefHandler } from './useViewRefHandler';\n\nfunction propagateDetectorConfig(\n  props: GestureDetectorProps,\n  gesture: ComposedGesture | GestureType\n) {\n  const keysToPropagate: (keyof GestureDetectorProps)[] = [\n    'userSelect',\n    'enableContextMenu',\n    'touchAction',\n  ];\n\n  for (const key of keysToPropagate) {\n    const value = props[key];\n    if (value === undefined) {\n      continue;\n    }\n\n    for (const g of gesture.toGestureArray()) {\n      const config = g.config as { [key: string]: unknown };\n      config[key] = value;\n    }\n  }\n}\n\ninterface GestureDetectorProps {\n  children?: React.ReactNode;\n  /**\n   * A gesture object containing the configuration and callbacks.\n   * Can be any of:\n   * - base gestures (`Tap`, `Pan`, ...)\n   * - `ComposedGesture` (`Race`, `Simultaneous`, `Exclusive`)\n   */\n  gesture: ComposedGesture | GestureType;\n  /**\n   * #### Web only\n   * This parameter allows to specify which `userSelect` property should be applied to underlying view.\n   * Possible values are `\"none\" | \"auto\" | \"text\"`. Default value is set to `\"none\"`.\n   */\n  userSelect?: UserSelect;\n  /**\n   * #### Web only\n   * Specifies whether context menu should be enabled after clicking on underlying view with right mouse button.\n   * Default value is set to `false`.\n   */\n  enableContextMenu?: boolean;\n  /**\n   * #### Web only\n   * This parameter allows to specify which `touchAction` property should be applied to underlying view.\n   * Supports all CSS touch-action values (e.g. `\"none\"`, `\"pan-y\"`). Default value is set to `\"none\"`.\n   */\n  touchAction?: TouchAction;\n}\n\n/**\n * `GestureDetector` is responsible for creating and updating native gesture handlers based on the config of provided gesture.\n *\n * ### Props\n * - `gesture`\n * - `userSelect` (**Web only**)\n * - `enableContextMenu` (**Web only**)\n * - `touchAction` (**Web only**)\n *\n * ### Remarks\n * - Gesture Detector will use first native view in its subtree to recognize gestures, however if this view is used only to group its children it may get automatically collapsed.\n * - Using the same instance of a gesture across multiple Gesture Detectors is not possible.\n *\n * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/gesture-detector\n */\nexport const GestureDetector = (props: GestureDetectorProps) => {\n  const rootViewContext = useContext(GestureHandlerRootViewContext);\n  if (__DEV__ && !rootViewContext && !isJestEnv() && Platform.OS !== 'web') {\n    throw new Error(\n      'GestureDetector must be used as a descendant of GestureHandlerRootView. Otherwise the gestures will not be recognized. See https://docs.swmansion.com/react-native-gesture-handler/docs/installation for more details.'\n    );\n  }\n\n  // Gesture config should be wrapped with useMemo to prevent unnecessary re-renders\n  const gestureConfig = props.gesture;\n  propagateDetectorConfig(props, gestureConfig);\n\n  const gesturesToAttach = useMemo(\n    () => gestureConfig.toGestureArray(),\n    [gestureConfig]\n  );\n  const shouldUseReanimated = gesturesToAttach.some(\n    (g) => g.shouldUseReanimated\n  );\n\n  const webEventHandlersRef = useWebEventHandlers();\n  // Store state in ref to prevent unnecessary renders\n  const state = useRef<GestureDetectorState>({\n    firstRender: true,\n    viewRef: null,\n    previousViewTag: -1,\n    forceRebuildReanimatedEvent: false,\n  }).current;\n\n  const preparedGesture = React.useRef<AttachedGestureState>({\n    attachedGestures: [],\n    animatedEventHandler: null,\n    animatedHandlers: null,\n    shouldUseReanimated: shouldUseReanimated,\n    isMounted: false,\n  }).current;\n\n  const updateAttachedGestures = useDetectorUpdater(\n    state,\n    preparedGesture,\n    gesturesToAttach,\n    gestureConfig,\n    webEventHandlersRef\n  );\n\n  const refHandler = useViewRefHandler(state, updateAttachedGestures);\n\n  // Reanimated event should be rebuilt only when gestures are reattached, otherwise\n  // config update will be enough as all necessary items are stored in shared values anyway\n  const needsToRebuildReanimatedEvent =\n    state.firstRender ||\n    state.forceRebuildReanimatedEvent ||\n    needsToReattach(preparedGesture, gesturesToAttach);\n  state.forceRebuildReanimatedEvent = false;\n\n  useAnimatedGesture(preparedGesture, needsToRebuildReanimatedEvent);\n\n  useLayoutEffect(() => {\n    const viewTag = findNodeHandle(state.viewRef) as number;\n    preparedGesture.isMounted = true;\n\n    attachHandlers({\n      preparedGesture,\n      gestureConfig,\n      gesturesToAttach,\n      webEventHandlersRef,\n      viewTag,\n    });\n\n    return () => {\n      preparedGesture.isMounted = false;\n      dropHandlers(preparedGesture);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (state.firstRender) {\n      state.firstRender = false;\n    } else {\n      updateAttachedGestures();\n    }\n  }, [props]);\n\n  if (shouldUseReanimated) {\n    return (\n      <AnimatedWrap\n        ref={refHandler}\n        onGestureHandlerEvent={preparedGesture.animatedEventHandler}>\n        {props.children}\n      </AnimatedWrap>\n    );\n  } else {\n    return <Wrap ref={refHandler}>{props.children}</Wrap>;\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}