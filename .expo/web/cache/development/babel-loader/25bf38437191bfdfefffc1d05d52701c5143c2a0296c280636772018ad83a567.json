{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.longPressHandlerName = exports.longPressGestureHandlerProps = exports.LongPressGestureHandler = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _createHandler = _interopRequireDefault(require(\"./createHandler\"));\nvar _gestureHandlerCommon = require(\"./gestureHandlerCommon\");\nvar longPressGestureHandlerProps = exports.longPressGestureHandlerProps = ['minDurationMs', 'maxDist', 'numberOfPointers'];\nvar longPressHandlerName = exports.longPressHandlerName = 'LongPressGestureHandler';\nvar LongPressGestureHandler = exports.LongPressGestureHandler = (0, _createHandler.default)({\n  name: longPressHandlerName,\n  allowedProps: [].concat((0, _toConsumableArray2.default)(_gestureHandlerCommon.baseGestureHandlerProps), longPressGestureHandlerProps),\n  config: {\n    shouldCancelWhenOutside: true\n  }\n});","map":{"version":3,"names":["_createHandler","_interopRequireDefault","require","_gestureHandlerCommon","longPressGestureHandlerProps","exports","longPressHandlerName","LongPressGestureHandler","createHandler","name","allowedProps","concat","_toConsumableArray2","default","baseGestureHandlerProps","config","shouldCancelWhenOutside"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/react-native-gesture-handler/lib/module/handlers/LongPressGestureHandler.ts"],"sourcesContent":["import { LongPressGestureHandlerEventPayload } from './GestureHandlerEventPayload';\nimport createHandler from './createHandler';\nimport {\n  BaseGestureHandlerProps,\n  baseGestureHandlerProps,\n} from './gestureHandlerCommon';\n\nexport const longPressGestureHandlerProps = [\n  'minDurationMs',\n  'maxDist',\n  'numberOfPointers',\n] as const;\n\nexport interface LongPressGestureConfig {\n  /**\n   * Minimum time, expressed in milliseconds, that a finger must remain pressed on\n   * the corresponding view. The default value is 500.\n   */\n  minDurationMs?: number;\n\n  /**\n   * Maximum distance, expressed in points, that defines how far the finger is\n   * allowed to travel during a long press gesture. If the finger travels\n   * further than the defined distance and the handler hasn't yet activated, it\n   * will fail to recognize the gesture. The default value is 10.\n   */\n  maxDist?: number;\n\n  /**\n   * Determine exact number of points required to handle the long press gesture.\n   */\n  numberOfPointers?: number;\n}\n\nexport interface LongPressGestureHandlerProps\n  extends BaseGestureHandlerProps<LongPressGestureHandlerEventPayload>,\n    LongPressGestureConfig {}\n\nexport const longPressHandlerName = 'LongPressGestureHandler';\n\nexport type LongPressGestureHandler = typeof LongPressGestureHandler;\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of gestureHandlerCommon.ts file\nexport const LongPressGestureHandler = createHandler<\n  LongPressGestureHandlerProps,\n  LongPressGestureHandlerEventPayload\n>({\n  name: longPressHandlerName,\n  allowedProps: [\n    ...baseGestureHandlerProps,\n    ...longPressGestureHandlerProps,\n  ] as const,\n  config: {\n    shouldCancelWhenOutside: true,\n  },\n});\n"],"mappings":";;;;;;AACA,IAAAA,cAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,qBAAA,GAAAD,OAAA;AAKO,IAAME,4BAA4B,GAAAC,OAAA,CAAAD,4BAAA,GAAG,CAC1C,eAD0C,EAE1C,SAF0C,EAG1C,kBAH0C,CAArC;AA+BA,IAAME,oBAAoB,GAAAD,OAAA,CAAAC,oBAAA,GAAG,yBAA7B;AAIA,IAAMC,uBAAuB,GAAAF,OAAA,CAAAE,uBAAA,GAAG,IAAAC,sBAAa,EAGlD;EACAC,IAAI,EAAEH,oBADN;EAEAI,YAAY,KAAAC,MAAA,KAAAC,mBAAA,CAAAC,OAAA,EACPC,6CADS,GAETV,4BAFS,CAFd;EAMAW,MAAM,EAAE;IACNC,uBAAuB,EAAE;EADnB;AANR,CAHkD,CAA7C","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}