{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Pressable;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _gestureObjects = require(\"../../handlers/gestures/gestureObjects\");\nvar _GestureDetector = require(\"../../handlers/gestures/GestureDetector\");\nvar _reactNative = require(\"react-native\");\nvar _GestureHandlerButton = _interopRequireDefault(require(\"../GestureHandlerButton\"));\nvar _utils = require(\"./utils\");\nvar _PressabilityDebugView = require(\"../../handlers/PressabilityDebugView\");\nvar _utils2 = require(\"../../utils\");\nvar _excluded = [\"testOnly_pressed\", \"hitSlop\", \"pressRetentionOffset\", \"delayHoverIn\", \"onHoverIn\", \"delayHoverOut\", \"onHoverOut\", \"delayLongPress\", \"unstable_pressDelay\", \"onPress\", \"onPressIn\", \"onPressOut\", \"onLongPress\", \"style\", \"children\", \"android_disableSound\", \"android_ripple\", \"disabled\"];\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar DEFAULT_LONG_PRESS_DURATION = 500;\nfunction Pressable(props) {\n  var _android_ripple$color, _android_ripple$radiu;\n  var testOnly_pressed = props.testOnly_pressed,\n    hitSlop = props.hitSlop,\n    pressRetentionOffset = props.pressRetentionOffset,\n    delayHoverIn = props.delayHoverIn,\n    onHoverIn = props.onHoverIn,\n    delayHoverOut = props.delayHoverOut,\n    onHoverOut = props.onHoverOut,\n    delayLongPress = props.delayLongPress,\n    unstable_pressDelay = props.unstable_pressDelay,\n    onPress = props.onPress,\n    onPressIn = props.onPressIn,\n    onPressOut = props.onPressOut,\n    onLongPress = props.onLongPress,\n    style = props.style,\n    children = props.children,\n    android_disableSound = props.android_disableSound,\n    android_ripple = props.android_ripple,\n    disabled = props.disabled,\n    remainingProps = (0, _objectWithoutProperties2.default)(props, _excluded);\n  var _useState = (0, _react.useState)(testOnly_pressed !== null && testOnly_pressed !== void 0 ? testOnly_pressed : false),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    pressedState = _useState2[0],\n    setPressedState = _useState2[1];\n  var pressableRef = (0, _react.useRef)(null);\n  var isPressCallbackEnabled = (0, _react.useRef)(true);\n  var hasPassedBoundsChecks = (0, _react.useRef)(false);\n  var shouldPreventNativeEffects = (0, _react.useRef)(false);\n  var normalizedHitSlop = (0, _react.useMemo)(function () {\n    return typeof hitSlop === 'number' ? (0, _utils.numberAsInset)(hitSlop) : hitSlop !== null && hitSlop !== void 0 ? hitSlop : {};\n  }, [hitSlop]);\n  var normalizedPressRetentionOffset = (0, _react.useMemo)(function () {\n    return typeof pressRetentionOffset === 'number' ? (0, _utils.numberAsInset)(pressRetentionOffset) : pressRetentionOffset !== null && pressRetentionOffset !== void 0 ? pressRetentionOffset : {};\n  }, [pressRetentionOffset]);\n  var hoverInTimeout = (0, _react.useRef)(null);\n  var hoverOutTimeout = (0, _react.useRef)(null);\n  var hoverGesture = (0, _react.useMemo)(function () {\n    return _gestureObjects.GestureObjects.Hover().manualActivation(true).cancelsTouchesInView(false).onBegin(function (event) {\n      if (hoverOutTimeout.current) {\n        clearTimeout(hoverOutTimeout.current);\n      }\n      if (delayHoverIn) {\n        hoverInTimeout.current = setTimeout(function () {\n          return onHoverIn === null || onHoverIn === void 0 ? void 0 : onHoverIn((0, _utils.gestureToPressableEvent)(event));\n        }, delayHoverIn);\n        return;\n      }\n      onHoverIn === null || onHoverIn === void 0 ? void 0 : onHoverIn((0, _utils.gestureToPressableEvent)(event));\n    }).onFinalize(function (event) {\n      if (hoverInTimeout.current) {\n        clearTimeout(hoverInTimeout.current);\n      }\n      if (delayHoverOut) {\n        hoverOutTimeout.current = setTimeout(function () {\n          return onHoverOut === null || onHoverOut === void 0 ? void 0 : onHoverOut((0, _utils.gestureToPressableEvent)(event));\n        }, delayHoverOut);\n        return;\n      }\n      onHoverOut === null || onHoverOut === void 0 ? void 0 : onHoverOut((0, _utils.gestureToPressableEvent)(event));\n    });\n  }, [delayHoverIn, delayHoverOut, onHoverIn, onHoverOut]);\n  var pressDelayTimeoutRef = (0, _react.useRef)(null);\n  var isTouchPropagationAllowed = (0, _react.useRef)(false);\n  var deferredEventPayload = (0, _react.useRef)(null);\n  var pressInHandler = (0, _react.useCallback)(function (event) {\n    if (handlingOnTouchesDown.current) {\n      deferredEventPayload.current = event;\n    }\n    if (!isTouchPropagationAllowed.current) {\n      return;\n    }\n    deferredEventPayload.current = null;\n    onPressIn === null || onPressIn === void 0 ? void 0 : onPressIn(event);\n    isPressCallbackEnabled.current = true;\n    pressDelayTimeoutRef.current = null;\n    setPressedState(true);\n  }, [onPressIn]);\n  var pressOutHandler = (0, _react.useCallback)(function (event) {\n    if (!hasPassedBoundsChecks.current || event.nativeEvent.touches.length > event.nativeEvent.changedTouches.length) {\n      return;\n    }\n    if (unstable_pressDelay && pressDelayTimeoutRef.current !== null) {\n      clearTimeout(pressDelayTimeoutRef.current);\n      pressInHandler(event);\n    }\n    if (deferredEventPayload.current) {\n      onPressIn === null || onPressIn === void 0 ? void 0 : onPressIn(deferredEventPayload.current);\n      deferredEventPayload.current = null;\n    }\n    onPressOut === null || onPressOut === void 0 ? void 0 : onPressOut(event);\n    if (isPressCallbackEnabled.current) {\n      onPress === null || onPress === void 0 ? void 0 : onPress(event);\n    }\n    if (longPressTimeoutRef.current) {\n      clearTimeout(longPressTimeoutRef.current);\n      longPressTimeoutRef.current = null;\n    }\n    isTouchPropagationAllowed.current = false;\n    hasPassedBoundsChecks.current = false;\n    isPressCallbackEnabled.current = true;\n    setPressedState(false);\n  }, [onPress, onPressIn, onPressOut, pressInHandler, unstable_pressDelay]);\n  var handlingOnTouchesDown = (0, _react.useRef)(false);\n  var onEndHandlingTouchesDown = (0, _react.useRef)(null);\n  var cancelledMidPress = (0, _react.useRef)(false);\n  var activateLongPress = (0, _react.useCallback)(function (event) {\n    if (!isTouchPropagationAllowed.current) {\n      return;\n    }\n    if (hasPassedBoundsChecks.current) {\n      onLongPress === null || onLongPress === void 0 ? void 0 : onLongPress((0, _utils.gestureTouchToPressableEvent)(event));\n      isPressCallbackEnabled.current = false;\n    }\n    if (longPressTimeoutRef.current) {\n      clearTimeout(longPressTimeoutRef.current);\n      longPressTimeoutRef.current = null;\n    }\n  }, [onLongPress]);\n  var longPressTimeoutRef = (0, _react.useRef)(null);\n  var longPressMinDuration = (delayLongPress !== null && delayLongPress !== void 0 ? delayLongPress : DEFAULT_LONG_PRESS_DURATION) + (unstable_pressDelay !== null && unstable_pressDelay !== void 0 ? unstable_pressDelay : 0);\n  var pressAndTouchGesture = (0, _react.useMemo)(function () {\n    return _gestureObjects.GestureObjects.LongPress().minDuration(_utils2.INT32_MAX).maxDistance(_utils2.INT32_MAX).cancelsTouchesInView(false).onTouchesDown(function (event) {\n      var _pressableRef$current;\n      handlingOnTouchesDown.current = true;\n      (_pressableRef$current = pressableRef.current) === null || _pressableRef$current === void 0 ? void 0 : _pressableRef$current.measure(function (_x, _y, width, height) {\n        var _onEndHandlingTouches;\n        if (!(0, _utils.isTouchWithinInset)({\n          width: width,\n          height: height\n        }, normalizedHitSlop, event.changedTouches.at(-1)) || hasPassedBoundsChecks.current || cancelledMidPress.current) {\n          cancelledMidPress.current = false;\n          onEndHandlingTouchesDown.current = null;\n          handlingOnTouchesDown.current = false;\n          return;\n        }\n        hasPassedBoundsChecks.current = true;\n        if (longPressTimeoutRef.current === null) {\n          longPressTimeoutRef.current = setTimeout(function () {\n            return activateLongPress(event);\n          }, longPressMinDuration);\n        }\n        if (unstable_pressDelay) {\n          pressDelayTimeoutRef.current = setTimeout(function () {\n            pressInHandler((0, _utils.gestureTouchToPressableEvent)(event));\n          }, unstable_pressDelay);\n        } else {\n          pressInHandler((0, _utils.gestureTouchToPressableEvent)(event));\n        }\n        (_onEndHandlingTouches = onEndHandlingTouchesDown.current) === null || _onEndHandlingTouches === void 0 ? void 0 : _onEndHandlingTouches.call(onEndHandlingTouchesDown);\n        onEndHandlingTouchesDown.current = null;\n        handlingOnTouchesDown.current = false;\n      });\n    }).onTouchesUp(function (event) {\n      if (handlingOnTouchesDown.current) {\n        onEndHandlingTouchesDown.current = function () {\n          return pressOutHandler((0, _utils.gestureTouchToPressableEvent)(event));\n        };\n        return;\n      }\n      if (deferredEventPayload.current !== null) {\n        shouldPreventNativeEffects.current = true;\n      }\n      pressOutHandler((0, _utils.gestureTouchToPressableEvent)(event));\n    }).onTouchesCancelled(function (event) {\n      isPressCallbackEnabled.current = false;\n      if (handlingOnTouchesDown.current) {\n        cancelledMidPress.current = true;\n        onEndHandlingTouchesDown.current = function () {\n          return pressOutHandler((0, _utils.gestureTouchToPressableEvent)(event));\n        };\n        return;\n      }\n      if (!hasPassedBoundsChecks.current || event.allTouches.length > event.changedTouches.length) {\n        return;\n      }\n      pressOutHandler((0, _utils.gestureTouchToPressableEvent)(event));\n    });\n  }, [activateLongPress, longPressMinDuration, normalizedHitSlop, pressInHandler, pressOutHandler, unstable_pressDelay]);\n  var buttonGesture = (0, _react.useMemo)(function () {\n    return _gestureObjects.GestureObjects.Native().onBegin(function () {\n      if (_reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'macos') {\n        isTouchPropagationAllowed.current = true;\n      }\n    }).onStart(function () {\n      if (_reactNative.Platform.OS === 'web') {\n        isTouchPropagationAllowed.current = true;\n      }\n      if (_reactNative.Platform.OS !== 'ios') {\n        return;\n      }\n      if (deferredEventPayload.current) {\n        isTouchPropagationAllowed.current = true;\n        if (hasPassedBoundsChecks.current) {\n          pressInHandler(deferredEventPayload.current);\n          deferredEventPayload.current = null;\n        } else {\n          pressOutHandler(deferredEventPayload.current);\n          isTouchPropagationAllowed.current = false;\n        }\n        return;\n      }\n      if (hasPassedBoundsChecks.current) {\n        isTouchPropagationAllowed.current = true;\n        return;\n      }\n      if (shouldPreventNativeEffects.current) {\n        shouldPreventNativeEffects.current = false;\n        return;\n      }\n      isTouchPropagationAllowed.current = true;\n    });\n  }, [pressInHandler, pressOutHandler]);\n  var appliedHitSlop = (0, _utils.addInsets)(normalizedHitSlop, normalizedPressRetentionOffset);\n  var isPressableEnabled = disabled !== true;\n  var gestures = [pressAndTouchGesture, hoverGesture, buttonGesture];\n  for (var _gesture of gestures) {\n    _gesture.enabled(isPressableEnabled);\n    _gesture.runOnJS(true);\n    _gesture.hitSlop(appliedHitSlop);\n    _gesture.shouldCancelWhenOutside(_reactNative.Platform.OS === 'web' ? false : true);\n  }\n  buttonGesture.hitSlop(normalizedHitSlop);\n  var gesture = _gestureObjects.GestureObjects.Simultaneous.apply(_gestureObjects.GestureObjects, gestures);\n  var defaultRippleColor = android_ripple ? undefined : 'transparent';\n  var pointerStyle = _reactNative.Platform.OS === 'web' ? {\n    cursor: 'pointer'\n  } : {};\n  var styleProp = typeof style === 'function' ? style({\n    pressed: pressedState\n  }) : style;\n  var childrenProp = typeof children === 'function' ? children({\n    pressed: pressedState\n  }) : children;\n  return _react.default.createElement(_GestureDetector.GestureDetector, {\n    gesture: gesture\n  }, _react.default.createElement(_GestureHandlerButton.default, _extends({}, remainingProps, {\n    ref: pressableRef,\n    hitSlop: appliedHitSlop,\n    enabled: isPressableEnabled,\n    touchSoundDisabled: android_disableSound !== null && android_disableSound !== void 0 ? android_disableSound : undefined,\n    rippleColor: (0, _reactNative.processColor)((_android_ripple$color = android_ripple === null || android_ripple === void 0 ? void 0 : android_ripple.color) !== null && _android_ripple$color !== void 0 ? _android_ripple$color : defaultRippleColor),\n    rippleRadius: (_android_ripple$radiu = android_ripple === null || android_ripple === void 0 ? void 0 : android_ripple.radius) !== null && _android_ripple$radiu !== void 0 ? _android_ripple$radiu : undefined,\n    style: [pointerStyle, styleProp]\n  }), childrenProp, __DEV__ ? _react.default.createElement(_PressabilityDebugView.PressabilityDebugView, {\n    color: \"red\",\n    hitSlop: normalizedHitSlop\n  }) : null));\n}","map":{"version":3,"names":["_react","_interopRequireWildcard","require","_gestureObjects","_GestureDetector","_reactNative","_GestureHandlerButton","_interopRequireDefault","_utils","_PressabilityDebugView","_utils2","_excluded","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","DEFAULT_LONG_PRESS_DURATION","Pressable","props","_android_ripple$color","_android_ripple$radiu","testOnly_pressed","hitSlop","pressRetentionOffset","delayHoverIn","onHoverIn","delayHoverOut","onHoverOut","delayLongPress","unstable_pressDelay","onPress","onPressIn","onPressOut","onLongPress","style","children","android_disableSound","android_ripple","disabled","remainingProps","_objectWithoutProperties2","_useState","useState","_useState2","_slicedToArray2","pressedState","setPressedState","pressableRef","useRef","isPressCallbackEnabled","hasPassedBoundsChecks","shouldPreventNativeEffects","normalizedHitSlop","useMemo","numberAsInset","normalizedPressRetentionOffset","hoverInTimeout","hoverOutTimeout","hoverGesture","Gesture","Hover","manualActivation","cancelsTouchesInView","onBegin","event","current","clearTimeout","setTimeout","gestureToPressableEvent","onFinalize","pressDelayTimeoutRef","isTouchPropagationAllowed","deferredEventPayload","pressInHandler","useCallback","handlingOnTouchesDown","pressOutHandler","nativeEvent","touches","length","changedTouches","longPressTimeoutRef","onEndHandlingTouchesDown","cancelledMidPress","activateLongPress","gestureTouchToPressableEvent","longPressMinDuration","pressAndTouchGesture","LongPress","minDuration","INT32_MAX","maxDistance","onTouchesDown","_pressableRef$current","measure","_x","_y","width","height","_onEndHandlingTouches","isTouchWithinInset","at","onTouchesUp","onTouchesCancelled","allTouches","buttonGesture","Native","Platform","OS","onStart","appliedHitSlop","addInsets","isPressableEnabled","gestures","gesture","enabled","runOnJS","shouldCancelWhenOutside","Simultaneous","apply","defaultRippleColor","undefined","pointerStyle","cursor","styleProp","pressed","childrenProp","React","createElement","GestureDetector","NativeButton","_extends","ref","touchSoundDisabled","rippleColor","processColor","color","rippleRadius","radius","__DEV__","PressabilityDebugView"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/react-native-gesture-handler/lib/module/components/Pressable/Pressable.tsx"],"sourcesContent":["import React, { useCallback, useMemo, useRef, useState } from 'react';\nimport { GestureObjects as Gesture } from '../../handlers/gestures/gestureObjects';\nimport { GestureDetector } from '../../handlers/gestures/GestureDetector';\nimport { PressableEvent, PressableProps } from './PressableProps';\nimport {\n  Insets,\n  Platform,\n  StyleProp,\n  View,\n  ViewStyle,\n  processColor,\n} from 'react-native';\nimport NativeButton from '../GestureHandlerButton';\nimport {\n  numberAsInset,\n  gestureToPressableEvent,\n  isTouchWithinInset,\n  gestureTouchToPressableEvent,\n  addInsets,\n} from './utils';\nimport { PressabilityDebugView } from '../../handlers/PressabilityDebugView';\nimport { GestureTouchEvent } from '../../handlers/gestureHandlerCommon';\nimport { INT32_MAX } from '../../utils';\n\nconst DEFAULT_LONG_PRESS_DURATION = 500;\n\nexport default function Pressable(props: PressableProps) {\n  const {\n    testOnly_pressed,\n    hitSlop,\n    pressRetentionOffset,\n    delayHoverIn,\n    onHoverIn,\n    delayHoverOut,\n    onHoverOut,\n    delayLongPress,\n    unstable_pressDelay,\n    onPress,\n    onPressIn,\n    onPressOut,\n    onLongPress,\n    style,\n    children,\n    android_disableSound,\n    android_ripple,\n    disabled,\n    ...remainingProps\n  } = props;\n\n  const [pressedState, setPressedState] = useState(testOnly_pressed ?? false);\n\n  const pressableRef = useRef<View>(null);\n\n  // Disabled when onLongPress has been called\n  const isPressCallbackEnabled = useRef<boolean>(true);\n  const hasPassedBoundsChecks = useRef<boolean>(false);\n  const shouldPreventNativeEffects = useRef<boolean>(false);\n\n  const normalizedHitSlop: Insets = useMemo(\n    () =>\n      typeof hitSlop === 'number' ? numberAsInset(hitSlop) : hitSlop ?? {},\n    [hitSlop]\n  );\n\n  const normalizedPressRetentionOffset: Insets = useMemo(\n    () =>\n      typeof pressRetentionOffset === 'number'\n        ? numberAsInset(pressRetentionOffset)\n        : pressRetentionOffset ?? {},\n    [pressRetentionOffset]\n  );\n\n  const hoverInTimeout = useRef<number | null>(null);\n  const hoverOutTimeout = useRef<number | null>(null);\n\n  const hoverGesture = useMemo(\n    () =>\n      Gesture.Hover()\n        .manualActivation(true) // Stops Hover from blocking Native gesture activation on web\n        .cancelsTouchesInView(false)\n        .onBegin((event) => {\n          if (hoverOutTimeout.current) {\n            clearTimeout(hoverOutTimeout.current);\n          }\n          if (delayHoverIn) {\n            hoverInTimeout.current = setTimeout(\n              () => onHoverIn?.(gestureToPressableEvent(event)),\n              delayHoverIn\n            );\n            return;\n          }\n          onHoverIn?.(gestureToPressableEvent(event));\n        })\n        .onFinalize((event) => {\n          if (hoverInTimeout.current) {\n            clearTimeout(hoverInTimeout.current);\n          }\n          if (delayHoverOut) {\n            hoverOutTimeout.current = setTimeout(\n              () => onHoverOut?.(gestureToPressableEvent(event)),\n              delayHoverOut\n            );\n            return;\n          }\n          onHoverOut?.(gestureToPressableEvent(event));\n        }),\n    [delayHoverIn, delayHoverOut, onHoverIn, onHoverOut]\n  );\n\n  const pressDelayTimeoutRef = useRef<number | null>(null);\n  const isTouchPropagationAllowed = useRef<boolean>(false);\n\n  // iOS only: due to varying flow of gestures, events sometimes have to be saved for later use\n  const deferredEventPayload = useRef<PressableEvent | null>(null);\n\n  const pressInHandler = useCallback(\n    (event: PressableEvent) => {\n      if (handlingOnTouchesDown.current) {\n        deferredEventPayload.current = event;\n      }\n\n      if (!isTouchPropagationAllowed.current) {\n        return;\n      }\n\n      deferredEventPayload.current = null;\n\n      onPressIn?.(event);\n      isPressCallbackEnabled.current = true;\n      pressDelayTimeoutRef.current = null;\n      setPressedState(true);\n    },\n    [onPressIn]\n  );\n\n  const pressOutHandler = useCallback(\n    (event: PressableEvent) => {\n      if (\n        !hasPassedBoundsChecks.current ||\n        event.nativeEvent.touches.length >\n          event.nativeEvent.changedTouches.length\n      ) {\n        return;\n      }\n\n      if (unstable_pressDelay && pressDelayTimeoutRef.current !== null) {\n        // When delay is preemptively finished by lifting touches,\n        // we want to immediately activate it's effects - pressInHandler,\n        // even though we are located at the pressOutHandler\n        clearTimeout(pressDelayTimeoutRef.current);\n        pressInHandler(event);\n      }\n\n      if (deferredEventPayload.current) {\n        onPressIn?.(deferredEventPayload.current);\n        deferredEventPayload.current = null;\n      }\n\n      onPressOut?.(event);\n\n      if (isPressCallbackEnabled.current) {\n        onPress?.(event);\n      }\n\n      if (longPressTimeoutRef.current) {\n        clearTimeout(longPressTimeoutRef.current);\n        longPressTimeoutRef.current = null;\n      }\n\n      isTouchPropagationAllowed.current = false;\n      hasPassedBoundsChecks.current = false;\n      isPressCallbackEnabled.current = true;\n      setPressedState(false);\n    },\n    [onPress, onPressIn, onPressOut, pressInHandler, unstable_pressDelay]\n  );\n\n  const handlingOnTouchesDown = useRef<boolean>(false);\n  const onEndHandlingTouchesDown = useRef<(() => void) | null>(null);\n  const cancelledMidPress = useRef<boolean>(false);\n\n  const activateLongPress = useCallback(\n    (event: GestureTouchEvent) => {\n      if (!isTouchPropagationAllowed.current) {\n        return;\n      }\n\n      if (hasPassedBoundsChecks.current) {\n        onLongPress?.(gestureTouchToPressableEvent(event));\n        isPressCallbackEnabled.current = false;\n      }\n\n      if (longPressTimeoutRef.current) {\n        clearTimeout(longPressTimeoutRef.current);\n        longPressTimeoutRef.current = null;\n      }\n    },\n    [onLongPress]\n  );\n\n  const longPressTimeoutRef = useRef<number | null>(null);\n  const longPressMinDuration =\n    (delayLongPress ?? DEFAULT_LONG_PRESS_DURATION) +\n    (unstable_pressDelay ?? 0);\n\n  const pressAndTouchGesture = useMemo(\n    () =>\n      Gesture.LongPress()\n        .minDuration(INT32_MAX) // Stops long press from blocking native gesture\n        .maxDistance(INT32_MAX) // Stops long press from cancelling after set distance\n        .cancelsTouchesInView(false)\n        .onTouchesDown((event) => {\n          handlingOnTouchesDown.current = true;\n          pressableRef.current?.measure((_x, _y, width, height) => {\n            if (\n              !isTouchWithinInset(\n                {\n                  width,\n                  height,\n                },\n                normalizedHitSlop,\n                event.changedTouches.at(-1)\n              ) ||\n              hasPassedBoundsChecks.current ||\n              cancelledMidPress.current\n            ) {\n              cancelledMidPress.current = false;\n              onEndHandlingTouchesDown.current = null;\n              handlingOnTouchesDown.current = false;\n              return;\n            }\n\n            hasPassedBoundsChecks.current = true;\n\n            // In case of multiple touches, the first one starts long press gesture\n            if (longPressTimeoutRef.current === null) {\n              // Start long press gesture timer\n              longPressTimeoutRef.current = setTimeout(\n                () => activateLongPress(event),\n                longPressMinDuration\n              );\n            }\n\n            if (unstable_pressDelay) {\n              pressDelayTimeoutRef.current = setTimeout(() => {\n                pressInHandler(gestureTouchToPressableEvent(event));\n              }, unstable_pressDelay);\n            } else {\n              pressInHandler(gestureTouchToPressableEvent(event));\n            }\n\n            onEndHandlingTouchesDown.current?.();\n            onEndHandlingTouchesDown.current = null;\n            handlingOnTouchesDown.current = false;\n          });\n        })\n        .onTouchesUp((event) => {\n          if (handlingOnTouchesDown.current) {\n            onEndHandlingTouchesDown.current = () =>\n              pressOutHandler(gestureTouchToPressableEvent(event));\n            return;\n          }\n          // On iOS, short taps will make LongPress gesture call onTouchesUp before Native gesture calls onStart\n          // This variable ensures that onStart isn't detected as the first gesture since Pressable is pressed.\n          if (deferredEventPayload.current !== null) {\n            shouldPreventNativeEffects.current = true;\n          }\n          pressOutHandler(gestureTouchToPressableEvent(event));\n        })\n        .onTouchesCancelled((event) => {\n          isPressCallbackEnabled.current = false;\n\n          if (handlingOnTouchesDown.current) {\n            cancelledMidPress.current = true;\n            onEndHandlingTouchesDown.current = () =>\n              pressOutHandler(gestureTouchToPressableEvent(event));\n            return;\n          }\n\n          if (\n            !hasPassedBoundsChecks.current ||\n            event.allTouches.length > event.changedTouches.length\n          ) {\n            return;\n          }\n\n          pressOutHandler(gestureTouchToPressableEvent(event));\n        }),\n    [\n      activateLongPress,\n      longPressMinDuration,\n      normalizedHitSlop,\n      pressInHandler,\n      pressOutHandler,\n      unstable_pressDelay,\n    ]\n  );\n\n  // RNButton is placed inside ButtonGesture to enable Android's ripple and to capture non-propagating events\n  const buttonGesture = useMemo(\n    () =>\n      Gesture.Native()\n        .onBegin(() => {\n          // Android sets BEGAN state on press down\n          if (Platform.OS === 'android' || Platform.OS === 'macos') {\n            isTouchPropagationAllowed.current = true;\n          }\n        })\n        .onStart(() => {\n          if (Platform.OS === 'web') {\n            isTouchPropagationAllowed.current = true;\n          }\n\n          // iOS sets ACTIVE state on press down\n          if (Platform.OS !== 'ios') {\n            return;\n          }\n\n          if (deferredEventPayload.current) {\n            isTouchPropagationAllowed.current = true;\n\n            if (hasPassedBoundsChecks.current) {\n              pressInHandler(deferredEventPayload.current);\n              deferredEventPayload.current = null;\n            } else {\n              pressOutHandler(deferredEventPayload.current);\n              isTouchPropagationAllowed.current = false;\n            }\n\n            return;\n          }\n\n          if (hasPassedBoundsChecks.current) {\n            isTouchPropagationAllowed.current = true;\n            return;\n          }\n\n          if (shouldPreventNativeEffects.current) {\n            shouldPreventNativeEffects.current = false;\n            return;\n          }\n\n          isTouchPropagationAllowed.current = true;\n        }),\n    [pressInHandler, pressOutHandler]\n  );\n\n  const appliedHitSlop = addInsets(\n    normalizedHitSlop,\n    normalizedPressRetentionOffset\n  );\n\n  const isPressableEnabled = disabled !== true;\n\n  const gestures = [pressAndTouchGesture, hoverGesture, buttonGesture];\n\n  for (const gesture of gestures) {\n    gesture.enabled(isPressableEnabled);\n    gesture.runOnJS(true);\n    gesture.hitSlop(appliedHitSlop);\n    gesture.shouldCancelWhenOutside(Platform.OS === 'web' ? false : true);\n  }\n\n  // Uses different hitSlop, to activate on hitSlop area instead of pressRetentionOffset area\n  buttonGesture.hitSlop(normalizedHitSlop);\n\n  const gesture = Gesture.Simultaneous(...gestures);\n\n  const defaultRippleColor = android_ripple ? undefined : 'transparent';\n\n  // `cursor: 'pointer'` on `RNButton` crashes iOS\n  const pointerStyle: StyleProp<ViewStyle> =\n    Platform.OS === 'web' ? { cursor: 'pointer' } : {};\n\n  const styleProp =\n    typeof style === 'function' ? style({ pressed: pressedState }) : style;\n\n  const childrenProp =\n    typeof children === 'function'\n      ? children({ pressed: pressedState })\n      : children;\n\n  return (\n    <GestureDetector gesture={gesture}>\n      <NativeButton\n        {...remainingProps}\n        ref={pressableRef}\n        hitSlop={appliedHitSlop}\n        enabled={isPressableEnabled}\n        touchSoundDisabled={android_disableSound ?? undefined}\n        rippleColor={processColor(android_ripple?.color ?? defaultRippleColor)}\n        rippleRadius={android_ripple?.radius ?? undefined}\n        style={[pointerStyle, styleProp]}>\n        {childrenProp}\n        {__DEV__ ? (\n          <PressabilityDebugView color=\"red\" hitSlop={normalizedHitSlop} />\n        ) : null}\n      </NativeButton>\n    </GestureDetector>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}