{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _store = _interopRequireDefault(require(\"../store/store.jsx\"));\nvar _api = require(\"../utils/api\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _this = this,\n  _jsxFileName = \"/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/SourceCode/DisplayStoreData/index.jsx\";\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nvar DisplayStoreData = function DisplayStoreData() {\n  var _generatedData$words2;\n  var currentChildren = (0, _store.default)(function (state) {\n    return state.currentChildren;\n  });\n  var learningGoals = (0, _store.default)(function (state) {\n    return state.learningGoals;\n  });\n  var _useState = (0, _react.useState)(null),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    generatedData = _useState2[0],\n    setGeneratedData = _useState2[1];\n  var _useState3 = (0, _react.useState)(null),\n    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n    sceneImage = _useState4[0],\n    setSceneImage = _useState4[1];\n  var _useState5 = (0, _react.useState)([]),\n    _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n    elementImages = _useState6[0],\n    setElementImages = _useState6[1];\n  var _useState7 = (0, _react.useState)(false),\n    _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n    loading = _useState8[0],\n    setLoading = _useState8[1];\n  var _useState9 = (0, _react.useState)(false),\n    _useState10 = (0, _slicedToArray2.default)(_useState9, 2),\n    imageLoading = _useState10[0],\n    setImageLoading = _useState10[1];\n  var _useState11 = (0, _react.useState)([]),\n    _useState12 = (0, _slicedToArray2.default)(_useState11, 2),\n    selectedElements = _useState12[0],\n    setSelectedElements = _useState12[1];\n  var toggleElementSelection = function toggleElementSelection(index) {\n    setSelectedElements(function (prevSelected) {\n      if (prevSelected.includes(index)) {\n        return prevSelected.filter(function (i) {\n          return i !== index;\n        });\n      } else {\n        return [].concat((0, _toConsumableArray2.default)(prevSelected), [index]);\n      }\n    });\n  };\n  var generateData = function () {\n    var _ref = (0, _asyncToGenerator2.default)(function* () {\n      setLoading(true);\n      try {\n        var prompt = `请你给我的数据直接以{}包裹，不需要其他任何文字内容.每一次生成的内容与教学步骤不允许与上次一样.每一个步骤都必须详细，且包含三个递进步骤.每一个步骤不得少于50字. 注意一切生成内容要以选中场景与“环境”的描述为优先.1. 如果教学目标里有构音，请生成5个汉语词汇，包含用构音中的几个汉语拼音声母构成的词语，如果 Current Children中有强化物，请结合这些强化物做生成； 2. 根据选中场景中的描述，根据LearningGoals中的‘命名’、‘构音’、‘语言结构’（如果有就生成，如果没有就不生成），返回满足每个对应目标的，和场景结合的教学步骤（注意被教学儿童患有自闭症），每个目标返回A,B,C依次3个步骤。当前数据Current Children: ${JSON.stringify(currentChildren).replace(/\"/g, \"'\")}, Learning Goals: ${JSON.stringify(learningGoals).replace(/\"/g, \"'\")}`;\n        var gptResponse = yield (0, _api.gptQuery)(prompt);\n        var results;\n        try {\n          results = JSON.parse(gptResponse);\n        } catch (parseError) {\n          console.error('Error parsing GPT response:', parseError);\n          throw new Error('Invalid JSON format in GPT response.');\n        }\n        console.log('Generated Data from GPT:', results);\n        setGeneratedData(results);\n      } catch (error) {\n        console.error('Error generating data from GPT:', error);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function generateData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var generateImages = function () {\n    var _ref2 = (0, _asyncToGenerator2.default)(function* () {\n      setImageLoading(true);\n      try {\n        var _generatedData$words;\n        var scenePrompt = `生成一个简单的卡通风格场景图。绝对不允许出现文字！,场景尽量不要出现人物，如果有，不能超过2人，且全部为中国人，场景尽量较空，绝对不允许出现文字，基于教学目标：${JSON.stringify(learningGoals)}，仅展示环境。`;\n        var elementPrompts = (generatedData == null || (_generatedData$words = generatedData.words) == null ? void 0 : _generatedData$words.map(function (word) {\n          return `接下来你生成的所有元素图都要保证，尽量简单，避免重复元素，避免复杂；生成一个卡通风格小元素图，基于：${word}。`;\n        })) || [];\n        var sceneResponse = yield (0, _api.generateImage)(scenePrompt);\n        var elementResponses = yield Promise.all(elementPrompts.map(function (prompt) {\n          return (0, _api.generateImage)(prompt);\n        }));\n        setSceneImage(sceneResponse);\n        setElementImages(elementResponses);\n        setSelectedElements([]);\n      } catch (error) {\n        console.error('Error generating images:', error);\n      } finally {\n        setImageLoading(false);\n      }\n    });\n    return function generateImages() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  (0, _react.useEffect)(function () {\n    generateData();\n  }, [currentChildren, learningGoals]);\n  return (0, _jsxRuntime.jsxs)(_reactNative.View, {\n    style: styles.container,\n    children: [(0, _jsxRuntime.jsxs)(_reactNative.ScrollView, {\n      contentContainerStyle: styles.scrollContainer,\n      children: [generatedData && (0, _jsxRuntime.jsxs)(_reactNative.View, {\n        style: styles.section,\n        children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {\n          style: styles.title,\n          children: \"\\u751F\\u6210\\u7684\\u6784\\u97F3\\u8BCD\\u6C47\"\n        }), (0, _jsxRuntime.jsx)(_reactNative.Text, {\n          style: styles.content,\n          children: ((_generatedData$words2 = generatedData.words) == null ? void 0 : _generatedData$words2.join(', ')) || '无构音数据'\n        })]\n      }), (generatedData == null ? void 0 : generatedData['教学步骤']) && Object.entries(generatedData['教学步骤']).map(function (_ref3) {\n        var _ref4 = (0, _slicedToArray2.default)(_ref3, 2),\n          key = _ref4[0],\n          steps = _ref4[1];\n        return (0, _jsxRuntime.jsxs)(_reactNative.View, {\n          style: styles.section,\n          children: [(0, _jsxRuntime.jsxs)(_reactNative.Text, {\n            style: styles.title,\n            children: [key, \" \\u6559\\u5B66\\u6B65\\u9AA4\"]\n          }), Object.entries(steps).map(function (_ref5) {\n            var _ref6 = (0, _slicedToArray2.default)(_ref5, 2),\n              stepKey = _ref6[0],\n              stepValue = _ref6[1];\n            return (0, _jsxRuntime.jsxs)(_reactNative.View, {\n              style: styles.stepContainer,\n              children: [(0, _jsxRuntime.jsxs)(_reactNative.Text, {\n                style: styles.stepKey,\n                children: [stepKey, \":\"]\n              }), (0, _jsxRuntime.jsx)(_reactNative.Text, {\n                style: styles.stepValue,\n                children: stepValue\n              })]\n            }, stepKey);\n          })]\n        }, key);\n      }), imageLoading ? (0, _jsxRuntime.jsx)(_reactNative.ActivityIndicator, {\n        size: \"large\",\n        color: \"#007BFF\"\n      }) : (0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {\n        children: [(0, _jsxRuntime.jsx)(_reactNative.View, {\n          style: styles.imageContainer,\n          children: sceneImage && (0, _jsxRuntime.jsx)(_reactNative.Image, {\n            source: {\n              uri: sceneImage\n            },\n            style: styles.sceneImage,\n            resizeMode: \"contain\"\n          })\n        }), elementImages.length > 0 && (0, _jsxRuntime.jsx)(_reactNative.View, {\n          style: styles.elementsWrapper,\n          children: elementImages.map(function (imgUri, index) {\n            var isSelected = selectedElements.includes(index);\n            return (0, _jsxRuntime.jsx)(_reactNative.Pressable, {\n              onPress: function onPress() {\n                return toggleElementSelection(index);\n              },\n              style: [styles.elementImageWrapper, isSelected && styles.selectedBorder],\n              children: (0, _jsxRuntime.jsx)(_reactNative.Image, {\n                source: {\n                  uri: imgUri\n                },\n                style: styles.elementImage\n              })\n            }, index);\n          })\n        })]\n      })]\n    }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {\n      style: [styles.regenerateButton, loading && styles.disabledButton],\n      onPress: generateData,\n      disabled: loading,\n      children: (0, _jsxRuntime.jsx)(_reactNative.Text, {\n        style: styles.buttonText,\n        children: loading ? '重新生成中...' : '重新生成'\n      })\n    }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {\n      style: [styles.generateImagesButton, imageLoading && styles.disabledButton],\n      onPress: generateImages,\n      disabled: imageLoading,\n      children: (0, _jsxRuntime.jsx)(_reactNative.Text, {\n        style: styles.buttonText,\n        children: imageLoading ? '生成图片中...' : '生成图片'\n      })\n    })]\n  });\n};\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    backgroundColor: '#f5f5f5'\n  },\n  scrollContainer: {\n    alignItems: 'flex-start',\n    paddingVertical: 16\n  },\n  section: {\n    marginBottom: 20,\n    padding: 16,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 8,\n    backgroundColor: '#fff',\n    width: '100%'\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 8\n  },\n  content: {\n    fontSize: 14,\n    color: '#333',\n    marginBottom: 4\n  },\n  stepContainer: {\n    marginBottom: 8,\n    paddingLeft: 10\n  },\n  stepKey: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#555'\n  },\n  stepValue: {\n    fontSize: 14,\n    color: '#333'\n  },\n  imageContainer: {\n    width: '100%',\n    height: 300,\n    marginTop: 20\n  },\n  sceneImage: {\n    width: '100%',\n    height: '100%',\n    borderRadius: 8,\n    marginBottom: 16\n  },\n  elementsWrapper: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginTop: 16,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  elementImageWrapper: {\n    margin: 5,\n    borderRadius: 8,\n    borderWidth: 2,\n    borderColor: 'transparent',\n    overflow: 'hidden',\n    width: 80,\n    height: 80\n  },\n  elementImage: {\n    width: '100%',\n    height: '100%',\n    borderRadius: 8\n  },\n  selectedBorder: {\n    borderColor: '#007BFF'\n  },\n  regenerateButton: {\n    marginTop: 16,\n    paddingVertical: 12,\n    paddingHorizontal: 20,\n    backgroundColor: '#007BFF',\n    borderRadius: 8,\n    alignItems: 'center'\n  },\n  generateImagesButton: {\n    marginTop: 16,\n    paddingVertical: 12,\n    paddingHorizontal: 20,\n    backgroundColor: '#28A745',\n    borderRadius: 8,\n    alignItems: 'center'\n  },\n  disabledButton: {\n    backgroundColor: '#ccc'\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});\nvar _default = exports.default = DisplayStoreData;","map":{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_store","_interopRequireDefault","_api","_jsxRuntime","_this","_jsxFileName","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","DisplayStoreData","_generatedData$words2","currentChildren","useStore","state","learningGoals","_useState","useState","_useState2","_slicedToArray2","generatedData","setGeneratedData","_useState3","_useState4","sceneImage","setSceneImage","_useState5","_useState6","elementImages","setElementImages","_useState7","_useState8","loading","setLoading","_useState9","_useState10","imageLoading","setImageLoading","_useState11","_useState12","selectedElements","setSelectedElements","toggleElementSelection","index","prevSelected","includes","filter","concat","_toConsumableArray2","generateData","_ref","_asyncToGenerator2","prompt","JSON","stringify","replace","gptResponse","gptQuery","results","parse","parseError","console","error","Error","log","apply","arguments","generateImages","_ref2","_generatedData$words","scenePrompt","elementPrompts","words","map","word","sceneResponse","generateImage","elementResponses","Promise","all","useEffect","jsxs","View","style","styles","container","children","ScrollView","contentContainerStyle","scrollContainer","section","jsx","Text","title","content","join","entries","_ref3","_ref4","key","steps","_ref5","_ref6","stepKey","stepValue","stepContainer","ActivityIndicator","size","color","Fragment","imageContainer","Image","source","uri","resizeMode","length","elementsWrapper","imgUri","isSelected","Pressable","onPress","elementImageWrapper","selectedBorder","elementImage","TouchableOpacity","regenerateButton","disabledButton","disabled","buttonText","generateImagesButton","StyleSheet","create","flex","padding","backgroundColor","alignItems","paddingVertical","marginBottom","borderWidth","borderColor","borderRadius","width","fontSize","fontWeight","paddingLeft","height","marginTop","flexDirection","flexWrap","justifyContent","margin","overflow","paddingHorizontal","_default","exports"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/SourceCode/DisplayStoreData/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n    View,\n    Text,\n    StyleSheet,\n    ScrollView,\n    TouchableOpacity,\n    ActivityIndicator,\n    Image,\n    Pressable,\n} from 'react-native';\nimport useStore from '../store/store.jsx'; // 导入 zustand store\nimport { gptQuery, generateImage } from '../utils/api'; // 导入 GPT 和生图 API\n\nconst DisplayStoreData = () => {\n    const currentChildren = useStore((state) => state.currentChildren); // 获取 store 中的 currentChildren\n    const learningGoals = useStore((state) => state.learningGoals);     // 获取 store 中的 learningGoals\n\n    const [generatedData, setGeneratedData] = useState(null);     // 保存生成的教学数据\n    const [sceneImage, setSceneImage] = useState(null);           // 保存场景图\n    const [elementImages, setElementImages] = useState([]);       // 保存小元素图\n    const [loading, setLoading] = useState(false);                // 加载状态\n    const [imageLoading, setImageLoading] = useState(false);      // 图片生成加载状态\n\n    // 新增：选中小元素的下标集合\n    const [selectedElements, setSelectedElements] = useState([]);\n\n    // 点击小元素时，切换选中状态\n    const toggleElementSelection = (index) => {\n        setSelectedElements((prevSelected) => {\n            if (prevSelected.includes(index)) {\n                // 如果已选中，则取消选中\n                return prevSelected.filter((i) => i !== index);\n            } else {\n                // 如果未选中，则添加到选中列表\n                return [...prevSelected, index];\n            }\n        });\n    };\n\n    // 生成 GPT 文本\n    const generateData = async () => {\n        setLoading(true);\n        try {\n            const prompt = `请你给我的数据直接以{}包裹，不需要其他任何文字内容.每一次生成的内容与教学步骤不允许与上次一样.每一个步骤都必须详细，且包含三个递进步骤.每一个步骤不得少于50字. 注意一切生成内容要以选中场景与“环境”的描述为优先.1. 如果教学目标里有构音，请生成5个汉语词汇，包含用构音中的几个汉语拼音声母构成的词语，如果 Current Children中有强化物，请结合这些强化物做生成； 2. 根据选中场景中的描述，根据LearningGoals中的‘命名’、‘构音’、‘语言结构’（如果有就生成，如果没有就不生成），返回满足每个对应目标的，和场景结合的教学步骤（注意被教学儿童患有自闭症），每个目标返回A,B,C依次3个步骤。当前数据Current Children: ${JSON.stringify(currentChildren).replace(/\"/g, \"'\")}, Learning Goals: ${JSON.stringify(learningGoals).replace(/\"/g, \"'\")}`;\n            const gptResponse = await gptQuery(prompt); // 调用 GPT API\n            let results;\n            try {\n                results = JSON.parse(gptResponse);\n            } catch (parseError) {\n                console.error('Error parsing GPT response:', parseError);\n                throw new Error('Invalid JSON format in GPT response.');\n            }\n            console.log('Generated Data from GPT:', results);\n            setGeneratedData(results);\n        } catch (error) {\n            console.error('Error generating data from GPT:', error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // 生成图片\n    const generateImages = async () => {\n        setImageLoading(true);\n        try {\n            // 生图 Prompt 示例，可根据实际需求进行细化或修改\n            const scenePrompt = `生成一个简单的卡通风格场景图。绝对不允许出现文字！,场景尽量不要出现人物，如果有，不能超过2人，且全部为中国人，场景尽量较空，绝对不允许出现文字，基于教学目标：${JSON.stringify(\n                learningGoals\n            )}，仅展示环境。`;\n\n            // 假设 GPT 返回的 5 个构音词汇是存放在 generatedData.words 中\n            const elementPrompts =\n                generatedData?.words?.map(\n                    (word) => `接下来你生成的所有元素图都要保证，尽量简单，避免重复元素，避免复杂；生成一个卡通风格小元素图，基于：${word}。`\n                ) || [];\n\n            const sceneResponse = await generateImage(scenePrompt); // 调用生图 API 生成场景图\n            const elementResponses = await Promise.all(\n                elementPrompts.map((prompt) => generateImage(prompt))\n            ); // 调用生图 API 生成小元素图\n            setSceneImage(sceneResponse); // 设置场景图 URL\n            setElementImages(elementResponses); // 设置小元素图 URL 数组\n            setSelectedElements([]); // 重置选中状态\n        } catch (error) {\n            console.error('Error generating images:', error);\n        } finally {\n            setImageLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        // 当 currentChildren 或 learningGoals 改变时，自动重新生成\n        generateData();\n    }, [currentChildren, learningGoals]);\n\n    return (\n        <View style={styles.container}>\n            <ScrollView contentContainerStyle={styles.scrollContainer}>\n                {/* ======== 文本生成结果展示 ======== */}\n                {generatedData && (\n                    <View style={styles.section}>\n                        <Text style={styles.title}>生成的构音词汇</Text>\n                        <Text style={styles.content}>\n                            {generatedData.words?.join(', ') || '无构音数据'}\n                        </Text>\n                    </View>\n                )}\n\n                {generatedData?.['教学步骤'] &&\n                    Object.entries(generatedData['教学步骤']).map(([key, steps]) => (\n                        <View key={key} style={styles.section}>\n                            <Text style={styles.title}>{key} 教学步骤</Text>\n                            {Object.entries(steps).map(([stepKey, stepValue]) => (\n                                <View key={stepKey} style={styles.stepContainer}>\n                                    <Text style={styles.stepKey}>{stepKey}:</Text>\n                                    <Text style={styles.stepValue}>{stepValue}</Text>\n                                </View>\n                            ))}\n                        </View>\n                    ))}\n\n                {/* ======== 图片区域展示 ======== */}\n                {imageLoading ? (\n                    <ActivityIndicator size=\"large\" color=\"#007BFF\" />\n                ) : (\n                    <>\n                        {/* 场景图 */}\n                        <View style={styles.imageContainer}>\n                            {sceneImage && (\n                                <Image\n                                    source={{ uri: sceneImage }}\n                                    style={styles.sceneImage}\n                                    resizeMode=\"contain\" // 确保完整显示\n                                />\n                            )}\n                        </View>\n                        {/* 小元素图（依次排列，点击可选/不选） */}\n                        {elementImages.length > 0 && (\n                            <View style={styles.elementsWrapper}>\n                                {elementImages.map((imgUri, index) => {\n                                    const isSelected = selectedElements.includes(index);\n                                    return (\n                                        <Pressable\n                                            key={index}\n                                            onPress={() => toggleElementSelection(index)}\n                                            style={[\n                                                styles.elementImageWrapper,\n                                                isSelected && styles.selectedBorder,\n                                            ]}\n                                        >\n                                            <Image\n                                                source={{ uri: imgUri }}\n                                                style={styles.elementImage}\n                                            />\n                                        </Pressable>\n                                    );\n                                })}\n                            </View>\n                        )}\n                    </>\n                )}\n            </ScrollView>\n\n            {/* ======== 按钮区域 ======== */}\n            <TouchableOpacity\n                style={[styles.regenerateButton, loading && styles.disabledButton]}\n                onPress={generateData}\n                disabled={loading}\n            >\n                <Text style={styles.buttonText}>\n                    {loading ? '重新生成中...' : '重新生成'}\n                </Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity\n                style={[styles.generateImagesButton, imageLoading && styles.disabledButton]}\n                onPress={generateImages}\n                disabled={imageLoading}\n            >\n                <Text style={styles.buttonText}>\n                    {imageLoading ? '生成图片中...' : '生成图片'}\n                </Text>\n            </TouchableOpacity>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        padding: 16,\n        backgroundColor: '#f5f5f5',\n    },\n    scrollContainer: {\n        alignItems: 'flex-start',\n        paddingVertical: 16,\n    },\n    section: {\n        marginBottom: 20,\n        padding: 16,\n        borderWidth: 1,\n        borderColor: '#ccc',\n        borderRadius: 8,\n        backgroundColor: '#fff',\n        width: '100%',\n    },\n    title: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        marginBottom: 8,\n    },\n    content: {\n        fontSize: 14,\n        color: '#333',\n        marginBottom: 4,\n    },\n    stepContainer: {\n        marginBottom: 8,\n        paddingLeft: 10,\n    },\n    stepKey: {\n        fontSize: 16,\n        fontWeight: '600',\n        color: '#555',\n    },\n    stepValue: {\n        fontSize: 14,\n        color: '#333',\n    },\n    imageContainer: {\n        width: '100%',\n        height: 300,\n        marginTop: 20,\n    },\n    sceneImage: {\n        width: '100%',\n        height: '100%',\n        borderRadius: 8,\n        marginBottom: 16,\n    },\n    elementsWrapper: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        marginTop: 16,\n        justifyContent: 'center', // 确保元素居中\n        alignItems: 'center', // 确保元素垂直居中\n    },\n    elementImageWrapper: {\n        margin: 5,\n        borderRadius: 8,\n        borderWidth: 2,\n        borderColor: 'transparent',\n        overflow: 'hidden',\n        width: 80, // 限制小元素图的宽度\n        height: 80, // 限制小元素图的高度\n    },\n    elementImage: {\n        width: '100%',\n        height: '100%',\n        borderRadius: 8,\n    },\n    selectedBorder: {\n        borderColor: '#007BFF',\n    },\n    regenerateButton: {\n        marginTop: 16,\n        paddingVertical: 12,\n        paddingHorizontal: 20,\n        backgroundColor: '#007BFF',\n        borderRadius: 8,\n        alignItems: 'center',\n    },\n    generateImagesButton: {\n        marginTop: 16,\n        paddingVertical: 12,\n        paddingHorizontal: 20,\n        backgroundColor: '#28A745',\n        borderRadius: 8,\n        alignItems: 'center',\n    },\n    disabledButton: {\n        backgroundColor: '#ccc',\n    },\n    buttonText: {\n        color: '#fff',\n        fontSize: 16,\n        fontWeight: 'bold',\n    },\n});\n\nexport default DisplayStoreData;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}