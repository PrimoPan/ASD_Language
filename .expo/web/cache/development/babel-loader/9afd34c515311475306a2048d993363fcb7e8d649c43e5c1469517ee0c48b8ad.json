{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useDetectorUpdater = useDetectorUpdater;\nvar _react = require(\"react\");\nvar _attachHandlers = require(\"./attachHandlers\");\nvar _updateHandlers = require(\"./updateHandlers\");\nvar _needsToReattach = require(\"./needsToReattach\");\nvar _dropHandlers = require(\"./dropHandlers\");\nvar _utils = require(\"./utils\");\nvar _findNodeHandle = _interopRequireDefault(require(\"../../../findNodeHandle\"));\nfunction useDetectorUpdater(state, preparedGesture, gesturesToAttach, gestureConfig, webEventHandlersRef) {\n  var forceRender = (0, _utils.useForceRender)();\n  var updateAttachedGestures = (0, _react.useCallback)(function (skipConfigUpdate) {\n    var viewTag = (0, _findNodeHandle.default)(state.viewRef);\n    var didUnderlyingViewChange = viewTag !== state.previousViewTag;\n    if (didUnderlyingViewChange || (0, _needsToReattach.needsToReattach)(preparedGesture, gesturesToAttach)) {\n      (0, _utils.validateDetectorChildren)(state.viewRef);\n      (0, _dropHandlers.dropHandlers)(preparedGesture);\n      (0, _attachHandlers.attachHandlers)({\n        preparedGesture: preparedGesture,\n        gestureConfig: gestureConfig,\n        gesturesToAttach: gesturesToAttach,\n        webEventHandlersRef: webEventHandlersRef,\n        viewTag: viewTag\n      });\n      if (didUnderlyingViewChange) {\n        state.previousViewTag = viewTag;\n        state.forceRebuildReanimatedEvent = true;\n        forceRender();\n      }\n    } else if (!skipConfigUpdate) {\n      (0, _updateHandlers.updateHandlers)(preparedGesture, gestureConfig, gesturesToAttach);\n    }\n  }, [forceRender, gestureConfig, gesturesToAttach, preparedGesture, state, webEventHandlersRef]);\n  return updateAttachedGestures;\n}","map":{"version":3,"names":["_react","require","_attachHandlers","_updateHandlers","_needsToReattach","_dropHandlers","_utils","_findNodeHandle","_interopRequireDefault","useDetectorUpdater","state","preparedGesture","gesturesToAttach","gestureConfig","webEventHandlersRef","forceRender","useForceRender","updateAttachedGestures","useCallback","skipConfigUpdate","viewTag","findNodeHandle","viewRef","didUnderlyingViewChange","previousViewTag","needsToReattach","validateDetectorChildren","dropHandlers","attachHandlers","forceRebuildReanimatedEvent","updateHandlers"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/GestureDetector/useDetectorUpdater.ts"],"sourcesContent":["import React, { useCallback } from 'react';\nimport { GestureType } from '../gesture';\nimport { ComposedGesture } from '../gestureComposition';\n\nimport {\n  AttachedGestureState,\n  GestureDetectorState,\n  WebEventHandler,\n} from './types';\nimport { attachHandlers } from './attachHandlers';\nimport { updateHandlers } from './updateHandlers';\nimport { needsToReattach } from './needsToReattach';\nimport { dropHandlers } from './dropHandlers';\nimport { useForceRender, validateDetectorChildren } from './utils';\nimport findNodeHandle from '../../../findNodeHandle';\n\n// Returns a function that's responsible for updating the attached gestures\n// If the view has changed, it will reattach the handlers to the new view\n// If the view remains the same, it will update the handlers with the new config\nexport function useDetectorUpdater(\n  state: GestureDetectorState,\n  preparedGesture: AttachedGestureState,\n  gesturesToAttach: GestureType[],\n  gestureConfig: ComposedGesture | GestureType,\n  webEventHandlersRef: React.RefObject<WebEventHandler>\n) {\n  const forceRender = useForceRender();\n  const updateAttachedGestures = useCallback(\n    // skipConfigUpdate is used to prevent unnecessary updates when only checking if the view has changed\n    (skipConfigUpdate?: boolean) => {\n      // If the underlying view has changed we need to reattach handlers to the new view\n      const viewTag = findNodeHandle(state.viewRef) as number;\n      const didUnderlyingViewChange = viewTag !== state.previousViewTag;\n\n      if (\n        didUnderlyingViewChange ||\n        needsToReattach(preparedGesture, gesturesToAttach)\n      ) {\n        validateDetectorChildren(state.viewRef);\n        dropHandlers(preparedGesture);\n        attachHandlers({\n          preparedGesture,\n          gestureConfig,\n          gesturesToAttach,\n          webEventHandlersRef,\n          viewTag,\n        });\n\n        if (didUnderlyingViewChange) {\n          state.previousViewTag = viewTag;\n          state.forceRebuildReanimatedEvent = true;\n          forceRender();\n        }\n      } else if (!skipConfigUpdate) {\n        updateHandlers(preparedGesture, gestureConfig, gesturesToAttach);\n      }\n    },\n    [\n      forceRender,\n      gestureConfig,\n      gesturesToAttach,\n      preparedGesture,\n      state,\n      webEventHandlersRef,\n    ]\n  );\n\n  return updateAttachedGestures;\n}\n"],"mappings":";;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AASA,IAAAC,eAAA,GAAAD,OAAA;AACA,IAAAE,eAAA,GAAAF,OAAA;AACA,IAAAG,gBAAA,GAAAH,OAAA;AACA,IAAAI,aAAA,GAAAJ,OAAA;AACA,IAAAK,MAAA,GAAAL,OAAA;AACA,IAAAM,eAAA,GAAAC,sBAAA,CAAAP,OAAA;AAKO,SAASQ,kBAATA,CACLC,KADK,EAELC,eAFK,EAGLC,gBAHK,EAILC,aAJK,EAKLC,mBALK,EAML;EACA,IAAMC,WAAW,GAAG,IAAAC,qBAAc,GAAlC;EACA,IAAMC,sBAAsB,GAAG,IAAAC,kBAAW,EAEvC,UAAAC,gBAAD,EAAgC;IAE9B,IAAMC,OAAO,GAAG,IAAAC,uBAAc,EAACX,KAAK,CAACY,OAAP,CAA9B;IACA,IAAMC,uBAAuB,GAAGH,OAAO,KAAKV,KAAK,CAACc,eAAlD;IAEA,IACED,uBAAuB,IACvB,IAAAE,gCAAe,EAACd,eAAD,EAAkBC,gBAAlB,CAFjB,EAGE;MACA,IAAAc,+BAAwB,EAAChB,KAAK,CAACY,OAAP,CAAxB;MACA,IAAAK,0BAAY,EAAChB,eAAD,CAAZ;MACA,IAAAiB,8BAAc,EAAC;QACbjB,eADa,EACbA,eADa;QAEbE,aAFa,EAEbA,aAFa;QAGbD,gBAHa,EAGbA,gBAHa;QAIbE,mBAJa,EAIbA,mBAJa;QAKbM,OAAA,EAAAA;MALa,CAAD,CAAd;MAQA,IAAIG,uBAAJ,EAA6B;QAC3Bb,KAAK,CAACc,eAAN,GAAwBJ,OAAxB;QACAV,KAAK,CAACmB,2BAAN,GAAoC,IAApC;QACAd,WAAW;MACZ;IACF,CAnBD,MAmBO,IAAI,CAACI,gBAAL,EAAuB;MAC5B,IAAAW,8BAAc,EAACnB,eAAD,EAAkBE,aAAlB,EAAiCD,gBAAjC,CAAd;IACD;EACF,CA7BuC,EA8BxC,CACEG,WADF,EAEEF,aAFF,EAGED,gBAHF,EAIED,eAJF,EAKED,KALF,EAMEI,mBANF,CA9BwC,CAA1C;EAwCA,OAAOG,sBAAP;AACD","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}