{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _EventManager2 = _interopRequireDefault(require(\"./EventManager\"));\nvar _gestureHandlerCommon = require(\"../../handlers/gestureHandlerCommon\");\nvar _interfaces = require(\"../interfaces\");\nvar _utils = require(\"../utils\");\nvar _PointerType = require(\"../../PointerType\");\nfunction _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _superPropGet(t, o, e, r) { var p = (0, _get2.default)((0, _getPrototypeOf2.default)(1 & r ? t.prototype : t), o, e); return 2 & r && \"function\" == typeof p ? function (t) { return p.apply(e, t); } : p; }\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nvar POINTER_CAPTURE_EXCLUDE_LIST = new Set(['SELECT', 'INPUT']);\nvar PointerEventManager = exports.default = function (_EventManager) {\n  function PointerEventManager(view) {\n    var _this;\n    (0, _classCallCheck2.default)(this, PointerEventManager);\n    _this = _callSuper(this, PointerEventManager, [view]);\n    _defineProperty(_this, \"trackedPointers\", new Set());\n    _defineProperty(_this, \"mouseButtonsMapper\", new Map());\n    _defineProperty(_this, \"lastPosition\", void 0);\n    _defineProperty(_this, \"pointerDownCallback\", function (event) {\n      if (!(0, _utils.isPointerInBounds)(_this.view, {\n        x: event.clientX,\n        y: event.clientY\n      })) {\n        return;\n      }\n      var adaptedEvent = _this.mapEvent(event, _interfaces.EventTypes.DOWN);\n      var target = event.target;\n      if (!POINTER_CAPTURE_EXCLUDE_LIST.has(target.tagName)) {\n        target.setPointerCapture(adaptedEvent.pointerId);\n      }\n      _this.markAsInBounds(adaptedEvent.pointerId);\n      _this.trackedPointers.add(adaptedEvent.pointerId);\n      if (++_this.activePointersCounter > 1) {\n        adaptedEvent.eventType = _interfaces.EventTypes.ADDITIONAL_POINTER_DOWN;\n        _this.onPointerAdd(adaptedEvent);\n      } else {\n        _this.onPointerDown(adaptedEvent);\n      }\n    });\n    _defineProperty(_this, \"pointerUpCallback\", function (event) {\n      if (_this.activePointersCounter === 0) {\n        return;\n      }\n      var adaptedEvent = _this.mapEvent(event, _interfaces.EventTypes.UP);\n      var target = event.target;\n      if (!POINTER_CAPTURE_EXCLUDE_LIST.has(target.tagName)) {\n        target.releasePointerCapture(adaptedEvent.pointerId);\n      }\n      _this.markAsOutOfBounds(adaptedEvent.pointerId);\n      _this.trackedPointers.delete(adaptedEvent.pointerId);\n      if (--_this.activePointersCounter > 0) {\n        adaptedEvent.eventType = _interfaces.EventTypes.ADDITIONAL_POINTER_UP;\n        _this.onPointerRemove(adaptedEvent);\n      } else {\n        _this.onPointerUp(adaptedEvent);\n      }\n    });\n    _defineProperty(_this, \"pointerMoveCallback\", function (event) {\n      var adaptedEvent = _this.mapEvent(event, _interfaces.EventTypes.MOVE);\n      var target = event.target;\n      if (!target.hasPointerCapture(event.pointerId) && !POINTER_CAPTURE_EXCLUDE_LIST.has(target.tagName)) {\n        target.setPointerCapture(event.pointerId);\n      }\n      var inBounds = (0, _utils.isPointerInBounds)(_this.view, {\n        x: adaptedEvent.x,\n        y: adaptedEvent.y\n      });\n      var pointerIndex = _this.pointersInBounds.indexOf(adaptedEvent.pointerId);\n      if (inBounds) {\n        if (pointerIndex < 0) {\n          adaptedEvent.eventType = _interfaces.EventTypes.ENTER;\n          _this.onPointerEnter(adaptedEvent);\n          _this.markAsInBounds(adaptedEvent.pointerId);\n        } else {\n          _this.onPointerMove(adaptedEvent);\n        }\n      } else {\n        if (pointerIndex >= 0) {\n          adaptedEvent.eventType = _interfaces.EventTypes.LEAVE;\n          _this.onPointerLeave(adaptedEvent);\n          _this.markAsOutOfBounds(adaptedEvent.pointerId);\n        } else {\n          _this.onPointerOutOfBounds(adaptedEvent);\n        }\n      }\n      _this.lastPosition.x = event.x;\n      _this.lastPosition.y = event.y;\n    });\n    _defineProperty(_this, \"pointerCancelCallback\", function (event) {\n      var adaptedEvent = _this.mapEvent(event, _interfaces.EventTypes.CANCEL);\n      _this.onPointerCancel(adaptedEvent);\n      _this.markAsOutOfBounds(adaptedEvent.pointerId);\n      _this.activePointersCounter = 0;\n      _this.trackedPointers.clear();\n    });\n    _defineProperty(_this, \"pointerEnterCallback\", function (event) {\n      var adaptedEvent = _this.mapEvent(event, _interfaces.EventTypes.ENTER);\n      _this.onPointerMoveOver(adaptedEvent);\n    });\n    _defineProperty(_this, \"pointerLeaveCallback\", function (event) {\n      var adaptedEvent = _this.mapEvent(event, _interfaces.EventTypes.LEAVE);\n      _this.onPointerMoveOut(adaptedEvent);\n    });\n    _defineProperty(_this, \"lostPointerCaptureCallback\", function (event) {\n      var adaptedEvent = _this.mapEvent(event, _interfaces.EventTypes.CANCEL);\n      if (_this.trackedPointers.has(adaptedEvent.pointerId)) {\n        _this.onPointerCancel(adaptedEvent);\n        _this.activePointersCounter = 0;\n        _this.trackedPointers.clear();\n      }\n    });\n    _this.mouseButtonsMapper.set(0, _gestureHandlerCommon.MouseButton.LEFT);\n    _this.mouseButtonsMapper.set(1, _gestureHandlerCommon.MouseButton.MIDDLE);\n    _this.mouseButtonsMapper.set(2, _gestureHandlerCommon.MouseButton.RIGHT);\n    _this.mouseButtonsMapper.set(3, _gestureHandlerCommon.MouseButton.BUTTON_4);\n    _this.mouseButtonsMapper.set(4, _gestureHandlerCommon.MouseButton.BUTTON_5);\n    _this.lastPosition = {\n      x: -Infinity,\n      y: -Infinity\n    };\n    return _this;\n  }\n  (0, _inherits2.default)(PointerEventManager, _EventManager);\n  return (0, _createClass2.default)(PointerEventManager, [{\n    key: \"registerListeners\",\n    value: function registerListeners() {\n      this.view.addEventListener('pointerdown', this.pointerDownCallback);\n      this.view.addEventListener('pointerup', this.pointerUpCallback);\n      this.view.addEventListener('pointermove', this.pointerMoveCallback);\n      this.view.addEventListener('pointercancel', this.pointerCancelCallback);\n      this.view.addEventListener('pointerenter', this.pointerEnterCallback);\n      this.view.addEventListener('pointerleave', this.pointerLeaveCallback);\n      this.view.addEventListener('lostpointercapture', this.lostPointerCaptureCallback);\n    }\n  }, {\n    key: \"unregisterListeners\",\n    value: function unregisterListeners() {\n      this.view.removeEventListener('pointerdown', this.pointerDownCallback);\n      this.view.removeEventListener('pointerup', this.pointerUpCallback);\n      this.view.removeEventListener('pointermove', this.pointerMoveCallback);\n      this.view.removeEventListener('pointercancel', this.pointerCancelCallback);\n      this.view.removeEventListener('pointerenter', this.pointerEnterCallback);\n      this.view.removeEventListener('pointerleave', this.pointerLeaveCallback);\n      this.view.removeEventListener('lostpointercapture', this.lostPointerCaptureCallback);\n    }\n  }, {\n    key: \"mapEvent\",\n    value: function mapEvent(event, eventType) {\n      var _PointerTypeMapping$g;\n      var rect = this.view.getBoundingClientRect();\n      var _calculateViewScale = (0, _utils.calculateViewScale)(this.view),\n        scaleX = _calculateViewScale.scaleX,\n        scaleY = _calculateViewScale.scaleY;\n      return {\n        x: event.clientX,\n        y: event.clientY,\n        offsetX: (event.clientX - rect.left) / scaleX,\n        offsetY: (event.clientY - rect.top) / scaleY,\n        pointerId: event.pointerId,\n        eventType: eventType,\n        pointerType: (_PointerTypeMapping$g = _utils.PointerTypeMapping.get(event.pointerType)) !== null && _PointerTypeMapping$g !== void 0 ? _PointerTypeMapping$g : _PointerType.PointerType.OTHER,\n        button: this.mouseButtonsMapper.get(event.button),\n        time: event.timeStamp,\n        stylusData: (0, _utils.tryExtractStylusData)(event)\n      };\n    }\n  }, {\n    key: \"resetManager\",\n    value: function resetManager() {\n      _superPropGet(PointerEventManager, \"resetManager\", this, 3)([]);\n      this.trackedPointers.clear();\n    }\n  }]);\n}(_EventManager2.default);","map":{"version":3,"names":["_EventManager2","_interopRequireDefault","require","_gestureHandlerCommon","_interfaces","_utils","_PointerType","_callSuper","t","o","e","_getPrototypeOf2","default","_possibleConstructorReturn2","_isNativeReflectConstruct","Reflect","construct","constructor","apply","Boolean","prototype","valueOf","call","_superPropGet","r","p","_get2","POINTER_CAPTURE_EXCLUDE_LIST","Set","PointerEventManager","exports","_EventManager","view","_this","_classCallCheck2","_defineProperty","Map","event","isPointerInBounds","x","clientX","y","clientY","adaptedEvent","mapEvent","EventTypes","DOWN","target","has","tagName","setPointerCapture","pointerId","markAsInBounds","trackedPointers","add","activePointersCounter","eventType","ADDITIONAL_POINTER_DOWN","onPointerAdd","onPointerDown","UP","releasePointerCapture","markAsOutOfBounds","delete","ADDITIONAL_POINTER_UP","onPointerRemove","onPointerUp","MOVE","hasPointerCapture","inBounds","pointerIndex","pointersInBounds","indexOf","ENTER","onPointerEnter","onPointerMove","LEAVE","onPointerLeave","onPointerOutOfBounds","lastPosition","CANCEL","onPointerCancel","clear","onPointerMoveOver","onPointerMoveOut","mouseButtonsMapper","set","MouseButton","LEFT","MIDDLE","RIGHT","BUTTON_4","BUTTON_5","Infinity","_inherits2","_createClass2","key","value","registerListeners","addEventListener","pointerDownCallback","pointerUpCallback","pointerMoveCallback","pointerCancelCallback","pointerEnterCallback","pointerLeaveCallback","lostPointerCaptureCallback","unregisterListeners","removeEventListener","_PointerTypeMapping$g","rect","getBoundingClientRect","_calculateViewScale","calculateViewScale","scaleX","scaleY","offsetX","left","offsetY","top","pointerType","PointerTypeMapping","get","PointerType","OTHER","button","time","timeStamp","stylusData","tryExtractStylusData","resetManager","EventManager"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/react-native-gesture-handler/lib/module/web/tools/PointerEventManager.ts"],"sourcesContent":["import EventManager from './EventManager';\nimport { MouseButton } from '../../handlers/gestureHandlerCommon';\nimport { AdaptedEvent, EventTypes, Point } from '../interfaces';\nimport {\n  PointerTypeMapping,\n  calculateViewScale,\n  tryExtractStylusData,\n  isPointerInBounds,\n} from '../utils';\nimport { PointerType } from '../../PointerType';\n\nconst POINTER_CAPTURE_EXCLUDE_LIST = new Set<string>(['SELECT', 'INPUT']);\n\nexport default class PointerEventManager extends EventManager<HTMLElement> {\n  private trackedPointers = new Set<number>();\n  private readonly mouseButtonsMapper = new Map<number, MouseButton>();\n  private lastPosition: Point;\n\n  constructor(view: HTMLElement) {\n    super(view);\n\n    this.mouseButtonsMapper.set(0, MouseButton.LEFT);\n    this.mouseButtonsMapper.set(1, MouseButton.MIDDLE);\n    this.mouseButtonsMapper.set(2, MouseButton.RIGHT);\n    this.mouseButtonsMapper.set(3, MouseButton.BUTTON_4);\n    this.mouseButtonsMapper.set(4, MouseButton.BUTTON_5);\n\n    this.lastPosition = {\n      x: -Infinity,\n      y: -Infinity,\n    };\n  }\n\n  private pointerDownCallback = (event: PointerEvent) => {\n    if (!isPointerInBounds(this.view, { x: event.clientX, y: event.clientY })) {\n      return;\n    }\n\n    const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.DOWN);\n    const target = event.target as HTMLElement;\n\n    if (!POINTER_CAPTURE_EXCLUDE_LIST.has(target.tagName)) {\n      target.setPointerCapture(adaptedEvent.pointerId);\n    }\n\n    this.markAsInBounds(adaptedEvent.pointerId);\n    this.trackedPointers.add(adaptedEvent.pointerId);\n\n    if (++this.activePointersCounter > 1) {\n      adaptedEvent.eventType = EventTypes.ADDITIONAL_POINTER_DOWN;\n      this.onPointerAdd(adaptedEvent);\n    } else {\n      this.onPointerDown(adaptedEvent);\n    }\n  };\n\n  private pointerUpCallback = (event: PointerEvent) => {\n    // When we call reset on gesture handlers, it also resets their event managers\n    // In some handlers (like RotationGestureHandler) reset is called before all pointers leave view\n    // This means, that activePointersCounter will be set to 0, while there are still remaining pointers on view\n    // Removing them will end in activePointersCounter going below 0, therefore handlers won't behave properly\n    if (this.activePointersCounter === 0) {\n      return;\n    }\n\n    const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.UP);\n    const target = event.target as HTMLElement;\n\n    if (!POINTER_CAPTURE_EXCLUDE_LIST.has(target.tagName)) {\n      target.releasePointerCapture(adaptedEvent.pointerId);\n    }\n\n    this.markAsOutOfBounds(adaptedEvent.pointerId);\n    this.trackedPointers.delete(adaptedEvent.pointerId);\n\n    if (--this.activePointersCounter > 0) {\n      adaptedEvent.eventType = EventTypes.ADDITIONAL_POINTER_UP;\n      this.onPointerRemove(adaptedEvent);\n    } else {\n      this.onPointerUp(adaptedEvent);\n    }\n  };\n\n  private pointerMoveCallback = (event: PointerEvent) => {\n    const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.MOVE);\n    const target = event.target as HTMLElement;\n\n    // You may be wondering why are we setting pointer capture here, when we\n    // already set it in `pointerdown` handler. Well, that's a great question,\n    // for which I don't have an answer. Specification (https://www.w3.org/TR/pointerevents2/#dom-element-setpointercapture)\n    // says that the requirement for `setPointerCapture` to work is that pointer\n    // must be in 'active buttons state`, otherwise it will fail silently, which\n    // is lovely. Obviously, when `pointerdown` is fired, one of the buttons\n    // (when using mouse) is pressed, but that doesn't mean that `setPointerCapture`\n    // will succeed, for some reason. Since it fails silently, we don't actually know\n    // if it worked or not (there's `gotpointercapture` event, but the complexity of\n    // incorporating it here seems stupid), so we just call it again here, every time\n    // pointer moves until it succeeds.\n    // God, I do love web development.\n    if (\n      !target.hasPointerCapture(event.pointerId) &&\n      !POINTER_CAPTURE_EXCLUDE_LIST.has(target.tagName)\n    ) {\n      target.setPointerCapture(event.pointerId);\n    }\n\n    const inBounds: boolean = isPointerInBounds(this.view, {\n      x: adaptedEvent.x,\n      y: adaptedEvent.y,\n    });\n\n    const pointerIndex: number = this.pointersInBounds.indexOf(\n      adaptedEvent.pointerId\n    );\n\n    if (inBounds) {\n      if (pointerIndex < 0) {\n        adaptedEvent.eventType = EventTypes.ENTER;\n        this.onPointerEnter(adaptedEvent);\n        this.markAsInBounds(adaptedEvent.pointerId);\n      } else {\n        this.onPointerMove(adaptedEvent);\n      }\n    } else {\n      if (pointerIndex >= 0) {\n        adaptedEvent.eventType = EventTypes.LEAVE;\n        this.onPointerLeave(adaptedEvent);\n        this.markAsOutOfBounds(adaptedEvent.pointerId);\n      } else {\n        this.onPointerOutOfBounds(adaptedEvent);\n      }\n    }\n\n    this.lastPosition.x = event.x;\n    this.lastPosition.y = event.y;\n  };\n\n  private pointerCancelCallback = (event: PointerEvent) => {\n    const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.CANCEL);\n\n    this.onPointerCancel(adaptedEvent);\n    this.markAsOutOfBounds(adaptedEvent.pointerId);\n    this.activePointersCounter = 0;\n    this.trackedPointers.clear();\n  };\n\n  private pointerEnterCallback = (event: PointerEvent) => {\n    const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.ENTER);\n\n    this.onPointerMoveOver(adaptedEvent);\n  };\n\n  private pointerLeaveCallback = (event: PointerEvent) => {\n    const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.LEAVE);\n\n    this.onPointerMoveOut(adaptedEvent);\n  };\n\n  private lostPointerCaptureCallback = (event: PointerEvent) => {\n    const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.CANCEL);\n\n    if (this.trackedPointers.has(adaptedEvent.pointerId)) {\n      // In some cases the `pointerup` event is not fired, but `lostpointercapture` is.\n      // Here we simulate the `pointercancel` event to make sure the gesture handler stops tracking it.\n      this.onPointerCancel(adaptedEvent);\n\n      this.activePointersCounter = 0;\n      this.trackedPointers.clear();\n    }\n  };\n\n  public registerListeners(): void {\n    this.view.addEventListener('pointerdown', this.pointerDownCallback);\n    this.view.addEventListener('pointerup', this.pointerUpCallback);\n    this.view.addEventListener('pointermove', this.pointerMoveCallback);\n    this.view.addEventListener('pointercancel', this.pointerCancelCallback);\n\n    // onPointerEnter and onPointerLeave are triggered by a custom logic responsible for\n    // handling shouldCancelWhenOutside flag, and are unreliable unless the pointer is down.\n    // We therefore use pointerenter and pointerleave events to handle the hover gesture,\n    // mapping them to onPointerMoveOver and onPointerMoveOut respectively.\n    this.view.addEventListener('pointerenter', this.pointerEnterCallback);\n    this.view.addEventListener('pointerleave', this.pointerLeaveCallback);\n    this.view.addEventListener(\n      'lostpointercapture',\n      this.lostPointerCaptureCallback\n    );\n  }\n\n  public unregisterListeners(): void {\n    this.view.removeEventListener('pointerdown', this.pointerDownCallback);\n    this.view.removeEventListener('pointerup', this.pointerUpCallback);\n    this.view.removeEventListener('pointermove', this.pointerMoveCallback);\n    this.view.removeEventListener('pointercancel', this.pointerCancelCallback);\n    this.view.removeEventListener('pointerenter', this.pointerEnterCallback);\n    this.view.removeEventListener('pointerleave', this.pointerLeaveCallback);\n    this.view.removeEventListener(\n      'lostpointercapture',\n      this.lostPointerCaptureCallback\n    );\n  }\n\n  protected mapEvent(event: PointerEvent, eventType: EventTypes): AdaptedEvent {\n    const rect = this.view.getBoundingClientRect();\n    const { scaleX, scaleY } = calculateViewScale(this.view);\n\n    return {\n      x: event.clientX,\n      y: event.clientY,\n      offsetX: (event.clientX - rect.left) / scaleX,\n      offsetY: (event.clientY - rect.top) / scaleY,\n      pointerId: event.pointerId,\n      eventType: eventType,\n      pointerType:\n        PointerTypeMapping.get(event.pointerType) ?? PointerType.OTHER,\n      button: this.mouseButtonsMapper.get(event.button),\n      time: event.timeStamp,\n      stylusData: tryExtractStylusData(event),\n    };\n  }\n\n  public resetManager(): void {\n    super.resetManager();\n    this.trackedPointers.clear();\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}