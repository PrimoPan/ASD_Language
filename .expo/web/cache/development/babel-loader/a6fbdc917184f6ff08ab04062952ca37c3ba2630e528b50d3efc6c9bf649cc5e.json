{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.withClamp = void 0;\nvar _util = require(\"./util.js\");\nvar _index = require(\"../logger/index.js\");\nvar withClamp = exports.withClamp = function withClamp(config, _animationToClamp) {\n  'worklet';\n\n  return (0, _util.defineAnimation)(_animationToClamp, function () {\n    'worklet';\n\n    var animationToClamp = typeof _animationToClamp === 'function' ? _animationToClamp() : _animationToClamp;\n    var strippedMin = config.min === undefined ? undefined : (0, _util.recognizePrefixSuffix)(config.min).strippedValue;\n    var strippedMax = config.max === undefined ? undefined : (0, _util.recognizePrefixSuffix)(config.max).strippedValue;\n    function clampOnFrame(animation, now) {\n      var finished = animationToClamp.onFrame(animationToClamp, now);\n      if (animationToClamp.current === undefined) {\n        _index.logger.warn(\"Error inside 'withClamp' animation, the inner animation has invalid current value\");\n        return true;\n      } else {\n        var _recognizePrefixSuffi = (0, _util.recognizePrefixSuffix)(animationToClamp.current),\n          prefix = _recognizePrefixSuffi.prefix,\n          strippedValue = _recognizePrefixSuffi.strippedValue,\n          suffix = _recognizePrefixSuffi.suffix;\n        var newValue;\n        if (strippedMax !== undefined && strippedMax < strippedValue) {\n          newValue = strippedMax;\n        } else if (strippedMin !== undefined && strippedMin > strippedValue) {\n          newValue = strippedMin;\n        } else {\n          newValue = strippedValue;\n        }\n        animation.current = typeof animationToClamp.current === 'number' ? newValue : `${prefix === undefined ? '' : prefix}${newValue}${suffix === undefined ? '' : suffix}`;\n      }\n      return finished;\n    }\n    function onStart(animation, value, now, previousAnimation) {\n      animation.current = value;\n      animation.previousAnimation = animationToClamp;\n      var animationBeforeClamped = previousAnimation == null ? void 0 : previousAnimation.previousAnimation;\n      if (config.max !== undefined && config.min !== undefined && config.max < config.min) {\n        _index.logger.warn('Wrong config was provided to withClamp. Min value is bigger than max');\n      }\n      animationToClamp.onStart(animationToClamp, (animationBeforeClamped == null ? void 0 : animationBeforeClamped.current) || value, now, animationBeforeClamped);\n    }\n    var callback = function callback(finished) {\n      if (animationToClamp.callback) {\n        animationToClamp.callback(finished);\n      }\n    };\n    return {\n      isHigherOrder: true,\n      onFrame: clampOnFrame,\n      onStart: onStart,\n      current: animationToClamp.current,\n      callback: callback,\n      previousAnimation: null,\n      reduceMotion: (0, _util.getReduceMotionForAnimation)(config.reduceMotion)\n    };\n  });\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","withClamp","_util","require","_index","config","_animationToClamp","defineAnimation","animationToClamp","strippedMin","min","undefined","recognizePrefixSuffix","strippedValue","strippedMax","max","clampOnFrame","animation","now","finished","onFrame","current","logger","warn","_recognizePrefixSuffi","prefix","suffix","newValue","onStart","previousAnimation","animationBeforeClamped","callback","isHigherOrder","reduceMotion","getReduceMotionForAnimation"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/react-native-reanimated/src/animation/clamp.ts"],"sourcesContent":["'use strict';\nimport {\n  defineAnimation,\n  getReduceMotionForAnimation,\n  recognizePrefixSuffix,\n} from './util';\nimport type {\n  Animation,\n  Timestamp,\n  AnimatableValue,\n  AnimationObject,\n  ReduceMotion,\n} from '../commonTypes';\nimport type { ClampAnimation } from './commonTypes';\nimport { logger } from '../logger';\n\ntype withClampType = <T extends number | string>(\n  config: {\n    min?: T;\n    max?: T;\n  },\n  clampedAnimation: T\n) => T;\n\nexport const withClamp = function <T extends number | string>(\n  config: { min?: T; max?: T; reduceMotion?: ReduceMotion },\n  _animationToClamp: AnimationObject<T> | (() => AnimationObject<T>)\n): Animation<ClampAnimation> {\n  'worklet';\n  return defineAnimation<ClampAnimation, AnimationObject<T>>(\n    _animationToClamp,\n    (): ClampAnimation => {\n      'worklet';\n      const animationToClamp =\n        typeof _animationToClamp === 'function'\n          ? _animationToClamp()\n          : _animationToClamp;\n\n      const strippedMin =\n        config.min === undefined\n          ? undefined\n          : recognizePrefixSuffix(config.min).strippedValue;\n\n      const strippedMax =\n        config.max === undefined\n          ? undefined\n          : recognizePrefixSuffix(config.max).strippedValue;\n\n      function clampOnFrame(\n        animation: ClampAnimation,\n        now: Timestamp\n      ): boolean {\n        const finished = animationToClamp.onFrame(animationToClamp, now);\n\n        if (animationToClamp.current === undefined) {\n          logger.warn(\n            \"Error inside 'withClamp' animation, the inner animation has invalid current value\"\n          );\n          return true;\n        } else {\n          const { prefix, strippedValue, suffix } = recognizePrefixSuffix(\n            animationToClamp.current\n          );\n\n          let newValue;\n\n          if (strippedMax !== undefined && strippedMax < strippedValue) {\n            newValue = strippedMax;\n          } else if (strippedMin !== undefined && strippedMin > strippedValue) {\n            newValue = strippedMin;\n          } else {\n            newValue = strippedValue;\n          }\n\n          animation.current =\n            typeof animationToClamp.current === 'number'\n              ? newValue\n              : `${prefix === undefined ? '' : prefix}${newValue}${\n                  suffix === undefined ? '' : suffix\n                }`;\n        }\n\n        return finished;\n      }\n\n      function onStart(\n        animation: Animation<any>,\n        value: AnimatableValue,\n        now: Timestamp,\n        previousAnimation: Animation<any> | null\n      ): void {\n        animation.current = value;\n        animation.previousAnimation = animationToClamp;\n        const animationBeforeClamped = previousAnimation?.previousAnimation;\n        if (\n          config.max !== undefined &&\n          config.min !== undefined &&\n          config.max < config.min\n        ) {\n          logger.warn(\n            'Wrong config was provided to withClamp. Min value is bigger than max'\n          );\n        }\n\n        animationToClamp.onStart(\n          animationToClamp,\n          /**\n           * Provide the current value of the previous animation of the clamped\n           * animation so we can animate from the original \"un-truncated\" value\n           */\n          animationBeforeClamped?.current || value,\n          now,\n          animationBeforeClamped\n        );\n      }\n\n      const callback = (finished?: boolean): void => {\n        if (animationToClamp.callback) {\n          animationToClamp.callback(finished);\n        }\n      };\n\n      return {\n        isHigherOrder: true,\n        onFrame: clampOnFrame,\n        onStart,\n        current: animationToClamp.current!,\n        callback,\n        previousAnimation: null,\n        reduceMotion: getReduceMotionForAnimation(config.reduceMotion),\n      };\n    }\n  );\n} as withClampType;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}