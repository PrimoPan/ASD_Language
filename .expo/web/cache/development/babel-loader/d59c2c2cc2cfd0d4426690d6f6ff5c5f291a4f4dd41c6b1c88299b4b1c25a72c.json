{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _EnableNewWebImplementation = require(\"./EnableNewWebImplementation\");\nvar _Gestures = require(\"./web/Gestures\");\nvar _InteractionManager = _interopRequireDefault(require(\"./web/tools/InteractionManager\"));\nvar _NodeManager = _interopRequireDefault(require(\"./web/tools/NodeManager\"));\nvar HammerNodeManager = _interopRequireWildcard(require(\"./web_hammer/NodeManager\"));\nvar _GestureHandlerWebDelegate = require(\"./web/tools/GestureHandlerWebDelegate\");\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nvar shouldPreventDrop = false;\nvar _default = exports.default = {\n  handleSetJSResponder: function handleSetJSResponder(tag, blockNativeResponder) {\n    console.warn('handleSetJSResponder: ', tag, blockNativeResponder);\n  },\n  handleClearJSResponder: function handleClearJSResponder() {\n    console.warn('handleClearJSResponder: ');\n  },\n  createGestureHandler: function createGestureHandler(handlerName, handlerTag, config) {\n    if ((0, _EnableNewWebImplementation.isNewWebImplementationEnabled)()) {\n      if (!(handlerName in _Gestures.Gestures)) {\n        throw new Error(`react-native-gesture-handler: ${handlerName} is not supported on web.`);\n      }\n      var GestureClass = _Gestures.Gestures[handlerName];\n      _NodeManager.default.createGestureHandler(handlerTag, new GestureClass(new _GestureHandlerWebDelegate.GestureHandlerWebDelegate()));\n      _InteractionManager.default.getInstance().configureInteractions(_NodeManager.default.getHandler(handlerTag), config);\n    } else {\n      if (!(handlerName in _Gestures.HammerGestures)) {\n        throw new Error(`react-native-gesture-handler: ${handlerName} is not supported on web.`);\n      }\n      var _GestureClass = _Gestures.HammerGestures[handlerName];\n      HammerNodeManager.createGestureHandler(handlerTag, new _GestureClass());\n    }\n    this.updateGestureHandler(handlerTag, config);\n  },\n  attachGestureHandler: function attachGestureHandler(handlerTag, newView, _actionType, propsRef) {\n    if (!(newView instanceof Element || newView instanceof _react.default.Component)) {\n      shouldPreventDrop = true;\n      var handler = (0, _EnableNewWebImplementation.isNewWebImplementationEnabled)() ? _NodeManager.default.getHandler(handlerTag) : HammerNodeManager.getHandler(handlerTag);\n      var handlerName = handler.constructor.name;\n      throw new Error(`${handlerName} with tag ${handlerTag} received child that is not valid HTML element.`);\n    }\n    if ((0, _EnableNewWebImplementation.isNewWebImplementationEnabled)()) {\n      _NodeManager.default.getHandler(handlerTag).init(newView, propsRef);\n    } else {\n      HammerNodeManager.getHandler(handlerTag).setView(newView, propsRef);\n    }\n  },\n  updateGestureHandler: function updateGestureHandler(handlerTag, newConfig) {\n    if ((0, _EnableNewWebImplementation.isNewWebImplementationEnabled)()) {\n      _NodeManager.default.getHandler(handlerTag).updateGestureConfig(newConfig);\n      _InteractionManager.default.getInstance().configureInteractions(_NodeManager.default.getHandler(handlerTag), newConfig);\n    } else {\n      HammerNodeManager.getHandler(handlerTag).updateGestureConfig(newConfig);\n    }\n  },\n  getGestureHandlerNode: function getGestureHandlerNode(handlerTag) {\n    if ((0, _EnableNewWebImplementation.isNewWebImplementationEnabled)()) {\n      return _NodeManager.default.getHandler(handlerTag);\n    } else {\n      return HammerNodeManager.getHandler(handlerTag);\n    }\n  },\n  dropGestureHandler: function dropGestureHandler(handlerTag) {\n    if (shouldPreventDrop) {\n      return;\n    }\n    if ((0, _EnableNewWebImplementation.isNewWebImplementationEnabled)()) {\n      _NodeManager.default.dropGestureHandler(handlerTag);\n    } else {\n      HammerNodeManager.dropGestureHandler(handlerTag);\n    }\n  },\n  flushOperations: function flushOperations() {}\n};","map":{"version":3,"names":["_react","_interopRequireDefault","require","_EnableNewWebImplementation","_Gestures","_InteractionManager","_NodeManager","HammerNodeManager","_interopRequireWildcard","_GestureHandlerWebDelegate","shouldPreventDrop","_default","exports","default","handleSetJSResponder","tag","blockNativeResponder","console","warn","handleClearJSResponder","createGestureHandler","handlerName","handlerTag","config","isNewWebImplementationEnabled","Gestures","Error","GestureClass","NodeManager","GestureHandlerWebDelegate","InteractionManager","getInstance","configureInteractions","getHandler","HammerGestures","updateGestureHandler","attachGestureHandler","newView","_actionType","propsRef","Element","React","Component","handler","constructor","name","init","setView","newConfig","updateGestureConfig","getGestureHandlerNode","dropGestureHandler","flushOperations"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/react-native-gesture-handler/lib/module/RNGestureHandlerModule.web.ts"],"sourcesContent":["import React from 'react';\n\nimport type { ActionType } from './ActionType';\nimport { isNewWebImplementationEnabled } from './EnableNewWebImplementation';\nimport { Gestures, HammerGestures } from './web/Gestures';\nimport type { Config } from './web/interfaces';\nimport InteractionManager from './web/tools/InteractionManager';\nimport NodeManager from './web/tools/NodeManager';\nimport * as HammerNodeManager from './web_hammer/NodeManager';\nimport { GestureHandlerWebDelegate } from './web/tools/GestureHandlerWebDelegate';\n\n// init method is called inside attachGestureHandler function. However, this function may\n// fail when received view is not valid HTML element. On the other hand, dropGestureHandler\n// will be called even if attach failed, which will result in crash.\n//\n// We use this flag to check whether or not dropGestureHandler should be called.\nlet shouldPreventDrop = false;\n\nexport default {\n  handleSetJSResponder(tag: number, blockNativeResponder: boolean) {\n    console.warn('handleSetJSResponder: ', tag, blockNativeResponder);\n  },\n  handleClearJSResponder() {\n    console.warn('handleClearJSResponder: ');\n  },\n  createGestureHandler<T>(\n    handlerName: keyof typeof Gestures,\n    handlerTag: number,\n    config: T\n  ) {\n    if (isNewWebImplementationEnabled()) {\n      if (!(handlerName in Gestures)) {\n        throw new Error(\n          `react-native-gesture-handler: ${handlerName} is not supported on web.`\n        );\n      }\n\n      const GestureClass = Gestures[handlerName];\n      NodeManager.createGestureHandler(\n        handlerTag,\n        new GestureClass(new GestureHandlerWebDelegate())\n      );\n      InteractionManager.getInstance().configureInteractions(\n        NodeManager.getHandler(handlerTag),\n        config as unknown as Config\n      );\n    } else {\n      if (!(handlerName in HammerGestures)) {\n        throw new Error(\n          `react-native-gesture-handler: ${handlerName} is not supported on web.`\n        );\n      }\n\n      // @ts-ignore If it doesn't exist, the error is thrown\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      const GestureClass = HammerGestures[handlerName];\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n      HammerNodeManager.createGestureHandler(handlerTag, new GestureClass());\n    }\n\n    this.updateGestureHandler(handlerTag, config as unknown as Config);\n  },\n  attachGestureHandler(\n    handlerTag: number,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    newView: any,\n    _actionType: ActionType,\n    propsRef: React.RefObject<unknown>\n  ) {\n    if (!(newView instanceof Element || newView instanceof React.Component)) {\n      shouldPreventDrop = true;\n\n      const handler = isNewWebImplementationEnabled()\n        ? NodeManager.getHandler(handlerTag)\n        : HammerNodeManager.getHandler(handlerTag);\n\n      const handlerName = handler.constructor.name;\n\n      throw new Error(\n        `${handlerName} with tag ${handlerTag} received child that is not valid HTML element.`\n      );\n    }\n\n    if (isNewWebImplementationEnabled()) {\n      // @ts-ignore Types should be HTMLElement or React.Component\n      NodeManager.getHandler(handlerTag).init(newView, propsRef);\n    } else {\n      // @ts-ignore Types should be HTMLElement or React.Component\n      HammerNodeManager.getHandler(handlerTag).setView(newView, propsRef);\n    }\n  },\n  updateGestureHandler(handlerTag: number, newConfig: Config) {\n    if (isNewWebImplementationEnabled()) {\n      NodeManager.getHandler(handlerTag).updateGestureConfig(newConfig);\n\n      InteractionManager.getInstance().configureInteractions(\n        NodeManager.getHandler(handlerTag),\n        newConfig\n      );\n    } else {\n      HammerNodeManager.getHandler(handlerTag).updateGestureConfig(newConfig);\n    }\n  },\n  getGestureHandlerNode(handlerTag: number) {\n    if (isNewWebImplementationEnabled()) {\n      return NodeManager.getHandler(handlerTag);\n    } else {\n      return HammerNodeManager.getHandler(handlerTag);\n    }\n  },\n  dropGestureHandler(handlerTag: number) {\n    if (shouldPreventDrop) {\n      return;\n    }\n\n    if (isNewWebImplementationEnabled()) {\n      NodeManager.dropGestureHandler(handlerTag);\n    } else {\n      HammerNodeManager.dropGestureHandler(handlerTag);\n    }\n  },\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  flushOperations() {},\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}