{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NativeEventsManager = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _classPrivateFieldLooseBase2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseBase\"));\nvar _classPrivateFieldLooseKey2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseKey\"));\nvar _utils = require(\"./utils.js\");\nvar _WorkletEventHandler = require(\"../WorkletEventHandler.js\");\nvar _findNodeHandle3 = require(\"../platformFunctions/findNodeHandle\");\nvar _managedComponent = (0, _classPrivateFieldLooseKey2.default)(\"managedComponent\");\nvar _componentOptions = (0, _classPrivateFieldLooseKey2.default)(\"componentOptions\");\nvar _eventViewTag = (0, _classPrivateFieldLooseKey2.default)(\"eventViewTag\");\nvar NativeEventsManager = exports.NativeEventsManager = function () {\n  function NativeEventsManager(component, options) {\n    (0, _classCallCheck2.default)(this, NativeEventsManager);\n    Object.defineProperty(this, _managedComponent, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _componentOptions, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _eventViewTag, {\n      writable: true,\n      value: -1\n    });\n    (0, _classPrivateFieldLooseBase2.default)(this, _managedComponent)[_managedComponent] = component;\n    (0, _classPrivateFieldLooseBase2.default)(this, _componentOptions)[_componentOptions] = options;\n    (0, _classPrivateFieldLooseBase2.default)(this, _eventViewTag)[_eventViewTag] = this.getEventViewTag();\n  }\n  return (0, _createClass2.default)(NativeEventsManager, [{\n    key: \"attachEvents\",\n    value: function attachEvents() {\n      var _this = this;\n      executeForEachEventHandler((0, _classPrivateFieldLooseBase2.default)(this, _managedComponent)[_managedComponent].props, function (key, handler) {\n        handler.registerForEvents((0, _classPrivateFieldLooseBase2.default)(_this, _eventViewTag)[_eventViewTag], key);\n      });\n    }\n  }, {\n    key: \"detachEvents\",\n    value: function detachEvents() {\n      var _this2 = this;\n      executeForEachEventHandler((0, _classPrivateFieldLooseBase2.default)(this, _managedComponent)[_managedComponent].props, function (_key, handler) {\n        handler.unregisterFromEvents((0, _classPrivateFieldLooseBase2.default)(_this2, _eventViewTag)[_eventViewTag]);\n      });\n    }\n  }, {\n    key: \"updateEvents\",\n    value: function updateEvents(prevProps) {\n      var _this3 = this;\n      var computedEventTag = this.getEventViewTag();\n      if ((0, _classPrivateFieldLooseBase2.default)(this, _eventViewTag)[_eventViewTag] !== computedEventTag) {\n        executeForEachEventHandler(prevProps, function (_key, handler) {\n          handler.unregisterFromEvents((0, _classPrivateFieldLooseBase2.default)(_this3, _eventViewTag)[_eventViewTag]);\n        });\n        (0, _classPrivateFieldLooseBase2.default)(this, _eventViewTag)[_eventViewTag] = computedEventTag;\n        this.attachEvents();\n        return;\n      }\n      executeForEachEventHandler(prevProps, function (key, prevHandler) {\n        var newProp = (0, _classPrivateFieldLooseBase2.default)(_this3, _managedComponent)[_managedComponent].props[key];\n        if (!newProp) {\n          prevHandler.unregisterFromEvents((0, _classPrivateFieldLooseBase2.default)(_this3, _eventViewTag)[_eventViewTag]);\n        } else if (isWorkletEventHandler(newProp) && newProp.workletEventHandler !== prevHandler) {\n          prevHandler.unregisterFromEvents((0, _classPrivateFieldLooseBase2.default)(_this3, _eventViewTag)[_eventViewTag]);\n          newProp.workletEventHandler.registerForEvents((0, _classPrivateFieldLooseBase2.default)(_this3, _eventViewTag)[_eventViewTag]);\n        }\n      });\n      executeForEachEventHandler((0, _classPrivateFieldLooseBase2.default)(this, _managedComponent)[_managedComponent].props, function (key, handler) {\n        if (!prevProps[key]) {\n          handler.registerForEvents((0, _classPrivateFieldLooseBase2.default)(_this3, _eventViewTag)[_eventViewTag]);\n        }\n      });\n    }\n  }, {\n    key: \"getEventViewTag\",\n    value: function getEventViewTag() {\n      var componentAnimatedRef = (0, _classPrivateFieldLooseBase2.default)(this, _managedComponent)[_managedComponent]._component;\n      var newTag;\n      if (componentAnimatedRef.getScrollableNode) {\n        var _findNodeHandle;\n        var scrollableNode = componentAnimatedRef.getScrollableNode();\n        newTag = (_findNodeHandle = (0, _findNodeHandle3.findNodeHandle)(scrollableNode)) != null ? _findNodeHandle : -1;\n      } else {\n        var _findNodeHandle2, _classPrivateFieldLoo;\n        newTag = (_findNodeHandle2 = (0, _findNodeHandle3.findNodeHandle)((_classPrivateFieldLoo = (0, _classPrivateFieldLooseBase2.default)(this, _componentOptions)[_componentOptions]) != null && _classPrivateFieldLoo.setNativeProps ? (0, _classPrivateFieldLooseBase2.default)(this, _managedComponent)[_managedComponent] : componentAnimatedRef)) != null ? _findNodeHandle2 : -1;\n      }\n      return newTag;\n    }\n  }]);\n}();\nfunction isWorkletEventHandler(prop) {\n  return (0, _utils.has)('workletEventHandler', prop) && prop.workletEventHandler instanceof _WorkletEventHandler.WorkletEventHandler;\n}\nfunction executeForEachEventHandler(props, callback) {\n  for (var key in props) {\n    var prop = props[key];\n    if (isWorkletEventHandler(prop)) {\n      callback(key, prop.workletEventHandler);\n    }\n  }\n}","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","NativeEventsManager","_classCallCheck2","_createClass2","_classPrivateFieldLooseBase2","_classPrivateFieldLooseKey2","_utils","_WorkletEventHandler","_findNodeHandle3","_managedComponent","default","_componentOptions","_eventViewTag","component","options","writable","getEventViewTag","key","attachEvents","_this","executeForEachEventHandler","props","handler","registerForEvents","detachEvents","_this2","_key","unregisterFromEvents","updateEvents","prevProps","_this3","computedEventTag","prevHandler","newProp","isWorkletEventHandler","workletEventHandler","componentAnimatedRef","_component","newTag","getScrollableNode","_findNodeHandle","scrollableNode","findNodeHandle","_findNodeHandle2","_classPrivateFieldLoo","setNativeProps","prop","has","WorkletEventHandler","callback"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/react-native-reanimated/src/createAnimatedComponent/NativeEventsManager.ts"],"sourcesContent":["'use strict';\nimport type {\n  INativeEventsManager,\n  IAnimatedComponentInternal,\n  AnimatedComponentProps,\n  InitialComponentProps,\n  AnimatedComponentRef,\n} from './commonTypes';\nimport { has } from './utils';\nimport { WorkletEventHandler } from '../WorkletEventHandler';\nimport { findNodeHandle } from '../platformFunctions/findNodeHandle';\n\nexport class NativeEventsManager implements INativeEventsManager {\n  readonly #managedComponent: ManagedAnimatedComponent;\n  readonly #componentOptions?: ComponentOptions;\n  #eventViewTag = -1;\n\n  constructor(component: ManagedAnimatedComponent, options?: ComponentOptions) {\n    this.#managedComponent = component;\n    this.#componentOptions = options;\n    this.#eventViewTag = this.getEventViewTag();\n  }\n\n  public attachEvents() {\n    executeForEachEventHandler(this.#managedComponent.props, (key, handler) => {\n      handler.registerForEvents(this.#eventViewTag, key);\n    });\n  }\n\n  public detachEvents() {\n    executeForEachEventHandler(\n      this.#managedComponent.props,\n      (_key, handler) => {\n        handler.unregisterFromEvents(this.#eventViewTag);\n      }\n    );\n  }\n\n  public updateEvents(\n    prevProps: AnimatedComponentProps<InitialComponentProps>\n  ) {\n    const computedEventTag = this.getEventViewTag();\n    // If the event view tag changes, we need to completely re-mount all events\n    if (this.#eventViewTag !== computedEventTag) {\n      // Remove all bindings from previous props that ran on the old viewTag\n      executeForEachEventHandler(prevProps, (_key, handler) => {\n        handler.unregisterFromEvents(this.#eventViewTag);\n      });\n      // We don't need to unregister from current (new) props, because their events weren't registered yet\n      // Replace the view tag\n      this.#eventViewTag = computedEventTag;\n      // Attach the events with a new viewTag\n      this.attachEvents();\n      return;\n    }\n\n    executeForEachEventHandler(prevProps, (key, prevHandler) => {\n      const newProp = this.#managedComponent.props[key];\n      if (!newProp) {\n        // Prop got deleted\n        prevHandler.unregisterFromEvents(this.#eventViewTag);\n      } else if (\n        isWorkletEventHandler(newProp) &&\n        newProp.workletEventHandler !== prevHandler\n      ) {\n        // Prop got changed\n        prevHandler.unregisterFromEvents(this.#eventViewTag);\n        newProp.workletEventHandler.registerForEvents(this.#eventViewTag);\n      }\n    });\n\n    executeForEachEventHandler(this.#managedComponent.props, (key, handler) => {\n      if (!prevProps[key]) {\n        // Prop got added\n        handler.registerForEvents(this.#eventViewTag);\n      }\n    });\n  }\n\n  private getEventViewTag() {\n    // Get the tag for registering events - since the event emitting view can be nested inside the main component\n    const componentAnimatedRef = this.#managedComponent\n      ._component as AnimatedComponentRef;\n    let newTag: number;\n    if (componentAnimatedRef.getScrollableNode) {\n      const scrollableNode = componentAnimatedRef.getScrollableNode();\n      newTag = findNodeHandle(scrollableNode) ?? -1;\n    } else {\n      newTag =\n        findNodeHandle(\n          this.#componentOptions?.setNativeProps\n            ? this.#managedComponent\n            : componentAnimatedRef\n        ) ?? -1;\n    }\n    return newTag;\n  }\n}\n\nfunction isWorkletEventHandler(\n  prop: unknown\n): prop is WorkletEventHandlerHolder {\n  return (\n    has('workletEventHandler', prop) &&\n    prop.workletEventHandler instanceof WorkletEventHandler\n  );\n}\n\nfunction executeForEachEventHandler(\n  props: AnimatedComponentProps<InitialComponentProps>,\n  callback: (\n    key: string,\n    handler: InstanceType<typeof WorkletEventHandler>\n  ) => void\n) {\n  for (const key in props) {\n    const prop = props[key];\n    if (isWorkletEventHandler(prop)) {\n      callback(key, prop.workletEventHandler);\n    }\n  }\n}\n\ntype ManagedAnimatedComponent = React.Component<\n  AnimatedComponentProps<InitialComponentProps>\n> &\n  IAnimatedComponentInternal;\n\ntype ComponentOptions = {\n  setNativeProps: (\n    ref: AnimatedComponentRef,\n    props: InitialComponentProps\n  ) => void;\n};\n\ntype WorkletEventHandlerHolder = {\n  workletEventHandler: InstanceType<typeof WorkletEventHandler>;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}