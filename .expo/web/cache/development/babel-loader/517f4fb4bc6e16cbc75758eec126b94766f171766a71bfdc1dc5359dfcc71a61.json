{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.gptQuery = exports.generateImage = void 0;\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\nvar _axios = _interopRequireDefault(require(\"axios\"));\nvar BASE_URL = 'http://47.242.78.104:6088';\nvar gptQuery = exports.gptQuery = function () {\n  var _ref = (0, _asyncToGenerator2.default)(function* (question) {\n    if (!question.trim()) {\n      throw new Error('问题不能为空');\n    }\n    try {\n      var response = yield _axios.default.post(`${BASE_URL}/i/gpt`, {\n        uid: 'a81s',\n        qus: question\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log(question);\n      var data = response.data.data;\n      if (!data) {\n        throw new Error('接口未返回回答');\n      }\n      return data;\n    } catch (error) {\n      var _error$response;\n      throw new Error(((_error$response = error.response) == null || (_error$response = _error$response.data) == null ? void 0 : _error$response.message) || '请求 GPT 失败');\n    }\n  });\n  return function gptQuery(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar generateImage = exports.generateImage = function () {\n  var _ref2 = (0, _asyncToGenerator2.default)(function* (description) {\n    if (!description.trim()) {\n      throw new Error('图片描述不能为空');\n    }\n    try {\n      var response = yield _axios.default.post(`${BASE_URL}/i/pic`, {\n        uid: 'a81s',\n        picreq: description\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('生图prompt:', description);\n      var data = response.data.data;\n      console.log(response.data);\n      if (!data) {\n        throw new Error('接口未返回图片 URL');\n      }\n      return data;\n    } catch (error) {\n      var _error$response2;\n      throw new Error(((_error$response2 = error.response) == null || (_error$response2 = _error$response2.data) == null ? void 0 : _error$response2.message) || '生成图片失败');\n    }\n  });\n  return function generateImage(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["_axios","_interopRequireDefault","require","BASE_URL","gptQuery","exports","_ref","_asyncToGenerator2","default","question","trim","Error","response","axios","post","uid","qus","headers","console","log","data","error","_error$response","message","_x","apply","arguments","generateImage","_ref2","description","picreq","_error$response2","_x2"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/SourceCode/utils/api.js"],"sourcesContent":["import axios from 'axios';\n\n// 配置 API 基础 URL\nconst BASE_URL = 'http://47.242.78.104:6088';\n\n/**\n * GPT 问答接口\n * @param {string} question - 用户的问题\n * @returns {Promise<string>} - 返回 GPT 的回答\n */\nexport const gptQuery = async (question) => {\n    if (!question.trim()) {\n        throw new Error('问题不能为空');\n    }\n\n    try {\n        const response = await axios.post(\n            `${BASE_URL}/i/gpt`,\n            {\n                uid: 'a81s', // 替换为后端提供的用户标识\n                qus: question,\n            },\n            {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            }\n        );\n        console.log(question);\n        const { data } = response.data;\n        if (!data) {\n            throw new Error('接口未返回回答');\n        }\n        return data; // 返回 GPT 的回答\n    } catch (error) {\n        throw new Error(error.response?.data?.message || '请求 GPT 失败');\n    }\n};\n\n/**\n * 图像生成接口\n * @param {string} description - 图片描述\n * @returns {Promise<string>} - 返回生成的图片 URL\n */\nexport const generateImage = async (description) => {\n    if (!description.trim()) {\n        throw new Error('图片描述不能为空');\n    }\n\n    try {\n        const response = await axios.post(\n            `${BASE_URL}/i/pic`,\n            {\n                uid: 'a81s', // 替换为后端提供的用户标识\n                picreq: description,\n            },\n            {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            }\n        );\n        console.log('生图prompt:',description);\n        const { data } = response.data;\n        console.log(response.data);\n        if (!data) {\n            throw new Error('接口未返回图片 URL');\n        }\n        return data; // 返回图片 URL\n    } catch (error) {\n        throw new Error(error.response?.data?.message || '生成图片失败');\n    }\n};\n"],"mappings":";;;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AAGA,IAAMC,QAAQ,GAAG,2BAA2B;AAOrC,IAAMC,QAAQ,GAAAC,OAAA,CAAAD,QAAA;EAAA,IAAAE,IAAA,OAAAC,kBAAA,CAAAC,OAAA,EAAG,WAAOC,QAAQ,EAAK;IACxC,IAAI,CAACA,QAAQ,CAACC,IAAI,CAAC,CAAC,EAAE;MAClB,MAAM,IAAIC,KAAK,CAAC,QAAQ,CAAC;IAC7B;IAEA,IAAI;MACA,IAAMC,QAAQ,SAASC,cAAK,CAACC,IAAI,CAC7B,GAAGX,QAAQ,QAAQ,EACnB;QACIY,GAAG,EAAE,MAAM;QACXC,GAAG,EAAEP;MACT,CAAC,EACD;QACIQ,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CACJ,CAAC;MACDC,OAAO,CAACC,GAAG,CAACV,QAAQ,CAAC;MACrB,IAAQW,IAAI,GAAKR,QAAQ,CAACQ,IAAI,CAAtBA,IAAI;MACZ,IAAI,CAACA,IAAI,EAAE;QACP,MAAM,IAAIT,KAAK,CAAC,SAAS,CAAC;MAC9B;MACA,OAAOS,IAAI;IACf,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAC,eAAA;MACZ,MAAM,IAAIX,KAAK,CAAC,EAAAW,eAAA,GAAAD,KAAK,CAACT,QAAQ,cAAAU,eAAA,GAAdA,eAAA,CAAgBF,IAAI,qBAApBE,eAAA,CAAsBC,OAAO,KAAI,WAAW,CAAC;IACjE;EACJ,CAAC;EAAA,gBA3BYnB,QAAQA,CAAAoB,EAAA;IAAA,OAAAlB,IAAA,CAAAmB,KAAA,OAAAC,SAAA;EAAA;AAAA,GA2BpB;AAOM,IAAMC,aAAa,GAAAtB,OAAA,CAAAsB,aAAA;EAAA,IAAAC,KAAA,OAAArB,kBAAA,CAAAC,OAAA,EAAG,WAAOqB,WAAW,EAAK;IAChD,IAAI,CAACA,WAAW,CAACnB,IAAI,CAAC,CAAC,EAAE;MACrB,MAAM,IAAIC,KAAK,CAAC,UAAU,CAAC;IAC/B;IAEA,IAAI;MACA,IAAMC,QAAQ,SAASC,cAAK,CAACC,IAAI,CAC7B,GAAGX,QAAQ,QAAQ,EACnB;QACIY,GAAG,EAAE,MAAM;QACXe,MAAM,EAAED;MACZ,CAAC,EACD;QACIZ,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CACJ,CAAC;MACDC,OAAO,CAACC,GAAG,CAAC,WAAW,EAACU,WAAW,CAAC;MACpC,IAAQT,IAAI,GAAKR,QAAQ,CAACQ,IAAI,CAAtBA,IAAI;MACZF,OAAO,CAACC,GAAG,CAACP,QAAQ,CAACQ,IAAI,CAAC;MAC1B,IAAI,CAACA,IAAI,EAAE;QACP,MAAM,IAAIT,KAAK,CAAC,aAAa,CAAC;MAClC;MACA,OAAOS,IAAI;IACf,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAU,gBAAA;MACZ,MAAM,IAAIpB,KAAK,CAAC,EAAAoB,gBAAA,GAAAV,KAAK,CAACT,QAAQ,cAAAmB,gBAAA,GAAdA,gBAAA,CAAgBX,IAAI,qBAApBW,gBAAA,CAAsBR,OAAO,KAAI,QAAQ,CAAC;IAC9D;EACJ,CAAC;EAAA,gBA5BYI,aAAaA,CAAAK,GAAA;IAAA,OAAAJ,KAAA,CAAAH,KAAA,OAAAC,SAAA;EAAA;AAAA,GA4BzB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}