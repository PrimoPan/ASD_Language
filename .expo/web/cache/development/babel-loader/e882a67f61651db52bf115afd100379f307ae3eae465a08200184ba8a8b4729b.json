{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useViewRefHandler = useViewRefHandler;\nvar _utils = require(\"../../../utils\");\nvar _getShadowNodeFromRef = require(\"../../../getShadowNodeFromRef\");\nvar _react = require(\"react\");\nvar _findNodeHandle = _interopRequireDefault(require(\"../../../findNodeHandle\"));\nfunction useViewRefHandler(state, updateAttachedGestures) {\n  var refHandler = (0, _react.useCallback)(function (ref) {\n    if (ref === null) {\n      return;\n    }\n    state.viewRef = ref;\n    if (state.previousViewTag === -1) {\n      state.previousViewTag = (0, _findNodeHandle.default)(state.viewRef);\n    }\n    if (!state.firstRender) {\n      updateAttachedGestures(true);\n    }\n    if (__DEV__ && (0, _utils.isFabric)() && global.isFormsStackingContext) {\n      var node = (0, _getShadowNodeFromRef.getShadowNodeFromRef)(ref);\n      if (global.isFormsStackingContext(node) === false) {\n        console.error((0, _utils.tagMessage)('GestureDetector has received a child that may get view-flattened. ' + '\\nTo prevent it from misbehaving you need to wrap the child with a `<View collapsable={false}>`.'));\n      }\n    }\n  }, [state, updateAttachedGestures]);\n  return refHandler;\n}","map":{"version":3,"names":["_utils","require","_getShadowNodeFromRef","_react","_findNodeHandle","_interopRequireDefault","useViewRefHandler","state","updateAttachedGestures","refHandler","useCallback","ref","viewRef","previousViewTag","findNodeHandle","firstRender","__DEV__","isFabric","global","isFormsStackingContext","node","getShadowNodeFromRef","console","error","tagMessage"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/GestureDetector/useViewRefHandler.ts"],"sourcesContent":["import { isFabric, tagMessage } from '../../../utils';\nimport { getShadowNodeFromRef } from '../../../getShadowNodeFromRef';\n\nimport { GestureDetectorState } from './types';\nimport React, { useCallback } from 'react';\nimport findNodeHandle from '../../../findNodeHandle';\n\ndeclare const global: {\n  isFormsStackingContext: (node: unknown) => boolean | null; // JSI function\n};\n\n// Ref handler for the Wrap component attached under the GestureDetector.\n// It's responsible for setting the viewRef on the state and triggering the reattaching of handlers\n// if the view has changed.\nexport function useViewRefHandler(\n  state: GestureDetectorState,\n  updateAttachedGestures: (skipConfigUpdate?: boolean) => void\n) {\n  const refHandler = useCallback(\n    (ref: React.Component | null) => {\n      if (ref === null) {\n        return;\n      }\n\n      state.viewRef = ref;\n\n      // if it's the first render, also set the previousViewTag to prevent reattaching gestures when not needed\n      if (state.previousViewTag === -1) {\n        state.previousViewTag = findNodeHandle(state.viewRef) as number;\n      }\n\n      // Pass true as `skipConfigUpdate`. Here we only want to trigger the eventual reattaching of handlers\n      // in case the view has changed. If the view doesn't change, the update will be handled by detector.\n      if (!state.firstRender) {\n        updateAttachedGestures(true);\n      }\n\n      if (__DEV__ && isFabric() && global.isFormsStackingContext) {\n        const node = getShadowNodeFromRef(ref);\n        if (global.isFormsStackingContext(node) === false) {\n          console.error(\n            tagMessage(\n              'GestureDetector has received a child that may get view-flattened. ' +\n                '\\nTo prevent it from misbehaving you need to wrap the child with a `<View collapsable={false}>`.'\n            )\n          );\n        }\n      }\n    },\n    [state, updateAttachedGestures]\n  );\n\n  return refHandler;\n}\n"],"mappings":";;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,qBAAA,GAAAD,OAAA;AAGA,IAAAE,MAAA,GAAAF,OAAA;AACA,IAAAG,eAAA,GAAAC,sBAAA,CAAAJ,OAAA;AASO,SAASK,iBAATA,CACLC,KADK,EAELC,sBAFK,EAGL;EACA,IAAMC,UAAU,GAAG,IAAAC,kBAAW,EAC3B,UAAAC,GAAD,EAAiC;IAC/B,IAAIA,GAAG,KAAK,IAAZ,EAAkB;MAChB;IACD;IAEDJ,KAAK,CAACK,OAAN,GAAgBD,GAAhB;IAGA,IAAIJ,KAAK,CAACM,eAAN,KAA0B,CAAC,CAA/B,EAAkC;MAChCN,KAAK,CAACM,eAAN,GAAwB,IAAAC,uBAAc,EAACP,KAAK,CAACK,OAAP,CAAtC;IACD;IAID,IAAI,CAACL,KAAK,CAACQ,WAAX,EAAwB;MACtBP,sBAAsB,CAAC,IAAD,CAAtB;IACD;IAED,IAAIQ,OAAO,IAAI,IAAAC,eAAQ,GAAnB,IAAyBC,MAAM,CAACC,sBAApC,EAA4D;MAC1D,IAAMC,IAAI,GAAG,IAAAC,0CAAoB,EAACV,GAAD,CAAjC;MACA,IAAIO,MAAM,CAACC,sBAAP,CAA8BC,IAA9B,MAAwC,KAA5C,EAAmD;QACjDE,OAAO,CAACC,KAAR,CACE,IAAAC,iBAAU,EACR,uEACE,kGAFM,CADZ;MAMD;IACF;EACF,CA9B2B,EA+B5B,CAACjB,KAAD,EAAQC,sBAAR,CA/B4B,CAA9B;EAkCA,OAAOC,UAAP;AACD","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}