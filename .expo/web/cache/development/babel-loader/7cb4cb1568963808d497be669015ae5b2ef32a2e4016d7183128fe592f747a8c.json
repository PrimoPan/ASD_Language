{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.withSpring = void 0;\nvar _util = require(\"./util.js\");\nvar _springUtils = require(\"./springUtils.js\");\nvar withSpring = exports.withSpring = function withSpring(toValue, userConfig, callback) {\n  'worklet';\n\n  return (0, _util.defineAnimation)(toValue, function () {\n    'worklet';\n\n    var defaultConfig = {\n      damping: 10,\n      mass: 1,\n      stiffness: 100,\n      overshootClamping: false,\n      restDisplacementThreshold: 0.01,\n      restSpeedThreshold: 2,\n      velocity: 0,\n      duration: 2000,\n      dampingRatio: 0.5,\n      reduceMotion: undefined,\n      clamp: undefined\n    };\n    var config = Object.assign({}, defaultConfig, userConfig, {\n      useDuration: !!(userConfig != null && userConfig.duration || userConfig != null && userConfig.dampingRatio),\n      skipAnimation: false\n    });\n    config.skipAnimation = !(0, _springUtils.checkIfConfigIsValid)(config);\n    if (config.duration === 0) {\n      config.skipAnimation = true;\n    }\n    function springOnFrame(animation, now) {\n      var toValue = animation.toValue,\n        startTimestamp = animation.startTimestamp,\n        current = animation.current;\n      var timeFromStart = now - startTimestamp;\n      if (config.useDuration && timeFromStart >= config.duration) {\n        animation.current = toValue;\n        animation.lastTimestamp = 0;\n        return true;\n      }\n      if (config.skipAnimation) {\n        animation.current = toValue;\n        animation.lastTimestamp = 0;\n        return true;\n      }\n      var lastTimestamp = animation.lastTimestamp,\n        velocity = animation.velocity;\n      var deltaTime = Math.min(now - lastTimestamp, 64);\n      animation.lastTimestamp = now;\n      var t = deltaTime / 1000;\n      var v0 = -velocity;\n      var x0 = toValue - current;\n      var zeta = animation.zeta,\n        omega0 = animation.omega0,\n        omega1 = animation.omega1;\n      var _ref = zeta < 1 ? (0, _springUtils.underDampedSpringCalculations)(animation, {\n          zeta: zeta,\n          v0: v0,\n          x0: x0,\n          omega0: omega0,\n          omega1: omega1,\n          t: t\n        }) : (0, _springUtils.criticallyDampedSpringCalculations)(animation, {\n          v0: v0,\n          x0: x0,\n          omega0: omega0,\n          t: t\n        }),\n        newPosition = _ref.position,\n        newVelocity = _ref.velocity;\n      animation.current = newPosition;\n      animation.velocity = newVelocity;\n      var _isAnimationTerminati = (0, _springUtils.isAnimationTerminatingCalculation)(animation, config),\n        isOvershooting = _isAnimationTerminati.isOvershooting,\n        isVelocity = _isAnimationTerminati.isVelocity,\n        isDisplacement = _isAnimationTerminati.isDisplacement;\n      var springIsNotInMove = isOvershooting || isVelocity && isDisplacement;\n      if (!config.useDuration && springIsNotInMove) {\n        animation.velocity = 0;\n        animation.current = toValue;\n        animation.lastTimestamp = 0;\n        return true;\n      }\n      return false;\n    }\n    function isTriggeredTwice(previousAnimation, animation) {\n      return (previousAnimation == null ? void 0 : previousAnimation.lastTimestamp) && (previousAnimation == null ? void 0 : previousAnimation.startTimestamp) && (previousAnimation == null ? void 0 : previousAnimation.toValue) === animation.toValue && (previousAnimation == null ? void 0 : previousAnimation.duration) === animation.duration && (previousAnimation == null ? void 0 : previousAnimation.dampingRatio) === animation.dampingRatio;\n    }\n    function onStart(animation, value, now, previousAnimation) {\n      animation.current = value;\n      animation.startValue = value;\n      var mass = config.mass;\n      var triggeredTwice = isTriggeredTwice(previousAnimation, animation);\n      var duration = config.duration;\n      var x0 = triggeredTwice ? previousAnimation == null ? void 0 : previousAnimation.startValue : Number(animation.toValue) - value;\n      if (previousAnimation) {\n        animation.velocity = (triggeredTwice ? previousAnimation == null ? void 0 : previousAnimation.velocity : (previousAnimation == null ? void 0 : previousAnimation.velocity) + config.velocity) || 0;\n      } else {\n        animation.velocity = config.velocity || 0;\n      }\n      if (triggeredTwice) {\n        animation.zeta = (previousAnimation == null ? void 0 : previousAnimation.zeta) || 0;\n        animation.omega0 = (previousAnimation == null ? void 0 : previousAnimation.omega0) || 0;\n        animation.omega1 = (previousAnimation == null ? void 0 : previousAnimation.omega1) || 0;\n      } else {\n        if (config.useDuration) {\n          var actualDuration = triggeredTwice ? duration - (((previousAnimation == null ? void 0 : previousAnimation.lastTimestamp) || 0) - ((previousAnimation == null ? void 0 : previousAnimation.startTimestamp) || 0)) : duration;\n          config.duration = actualDuration;\n          mass = (0, _springUtils.calculateNewMassToMatchDuration)(x0, config, animation.velocity);\n        }\n        var _initialCalculations = (0, _springUtils.initialCalculations)(mass, config),\n          zeta = _initialCalculations.zeta,\n          omega0 = _initialCalculations.omega0,\n          omega1 = _initialCalculations.omega1;\n        animation.zeta = zeta;\n        animation.omega0 = omega0;\n        animation.omega1 = omega1;\n        if (config.clamp !== undefined) {\n          animation.zeta = (0, _springUtils.scaleZetaToMatchClamps)(animation, config.clamp);\n        }\n      }\n      animation.lastTimestamp = (previousAnimation == null ? void 0 : previousAnimation.lastTimestamp) || now;\n      animation.startTimestamp = triggeredTwice ? (previousAnimation == null ? void 0 : previousAnimation.startTimestamp) || now : now;\n    }\n    return {\n      onFrame: springOnFrame,\n      onStart: onStart,\n      toValue: toValue,\n      velocity: config.velocity || 0,\n      current: toValue,\n      startValue: 0,\n      callback: callback,\n      lastTimestamp: 0,\n      startTimestamp: 0,\n      zeta: 0,\n      omega0: 0,\n      omega1: 0,\n      reduceMotion: (0, _util.getReduceMotionForAnimation)(config.reduceMotion)\n    };\n  });\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","withSpring","_util","require","_springUtils","toValue","userConfig","callback","defineAnimation","defaultConfig","damping","mass","stiffness","overshootClamping","restDisplacementThreshold","restSpeedThreshold","velocity","duration","dampingRatio","reduceMotion","undefined","clamp","config","assign","useDuration","skipAnimation","checkIfConfigIsValid","springOnFrame","animation","now","startTimestamp","current","timeFromStart","lastTimestamp","deltaTime","Math","min","t","v0","x0","zeta","omega0","omega1","_ref","underDampedSpringCalculations","criticallyDampedSpringCalculations","newPosition","position","newVelocity","_isAnimationTerminati","isAnimationTerminatingCalculation","isOvershooting","isVelocity","isDisplacement","springIsNotInMove","isTriggeredTwice","previousAnimation","onStart","startValue","triggeredTwice","Number","actualDuration","calculateNewMassToMatchDuration","_initialCalculations","initialCalculations","scaleZetaToMatchClamps","onFrame","getReduceMotionForAnimation"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/react-native-reanimated/src/animation/spring.ts"],"sourcesContent":["'use strict';\nimport { defineAnimation, getReduceMotionForAnimation } from './util';\nimport type {\n  Animation,\n  AnimationCallback,\n  AnimatableValue,\n  Timestamp,\n} from '../commonTypes';\nimport type {\n  SpringConfig,\n  SpringAnimation,\n  InnerSpringAnimation,\n  SpringConfigInner,\n  DefaultSpringConfig,\n} from './springUtils';\nimport {\n  initialCalculations,\n  calculateNewMassToMatchDuration,\n  underDampedSpringCalculations,\n  criticallyDampedSpringCalculations,\n  isAnimationTerminatingCalculation,\n  scaleZetaToMatchClamps,\n  checkIfConfigIsValid,\n} from './springUtils';\n\n// TODO TYPESCRIPT This is a temporary type to get rid of .d.ts file.\ntype withSpringType = <T extends AnimatableValue>(\n  toValue: T,\n  userConfig?: SpringConfig,\n  callback?: AnimationCallback\n) => T;\n\n/**\n * Lets you create spring-based animations.\n *\n * @param toValue - The value at which the animation will come to rest -\n *   {@link AnimatableValue}\n * @param config - The spring animation configuration - {@link SpringConfig}\n * @param callback - A function called on animation complete -\n *   {@link AnimationCallback}\n * @returns An [animation\n *   object](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animation-object)\n *   which holds the current state of the animation\n * @see https://docs.swmansion.com/react-native-reanimated/docs/animations/withSpring\n */\nexport const withSpring = ((\n  toValue: AnimatableValue,\n  userConfig?: SpringConfig,\n  callback?: AnimationCallback\n): Animation<SpringAnimation> => {\n  'worklet';\n\n  return defineAnimation<SpringAnimation>(toValue, () => {\n    'worklet';\n    const defaultConfig: DefaultSpringConfig = {\n      damping: 10,\n      mass: 1,\n      stiffness: 100,\n      overshootClamping: false,\n      restDisplacementThreshold: 0.01,\n      restSpeedThreshold: 2,\n      velocity: 0,\n      duration: 2000,\n      dampingRatio: 0.5,\n      reduceMotion: undefined,\n      clamp: undefined,\n    } as const;\n\n    const config: DefaultSpringConfig & SpringConfigInner = {\n      ...defaultConfig,\n      ...userConfig,\n      useDuration: !!(userConfig?.duration || userConfig?.dampingRatio),\n      skipAnimation: false,\n    };\n\n    config.skipAnimation = !checkIfConfigIsValid(config);\n\n    if (config.duration === 0) {\n      config.skipAnimation = true;\n    }\n\n    function springOnFrame(\n      animation: InnerSpringAnimation,\n      now: Timestamp\n    ): boolean {\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      const { toValue, startTimestamp, current } = animation;\n\n      const timeFromStart = now - startTimestamp;\n\n      if (config.useDuration && timeFromStart >= config.duration) {\n        animation.current = toValue;\n        // clear lastTimestamp to avoid using stale value by the next spring animation that starts after this one\n        animation.lastTimestamp = 0;\n        return true;\n      }\n\n      if (config.skipAnimation) {\n        animation.current = toValue;\n        animation.lastTimestamp = 0;\n        return true;\n      }\n      const { lastTimestamp, velocity } = animation;\n\n      const deltaTime = Math.min(now - lastTimestamp, 64);\n      animation.lastTimestamp = now;\n\n      const t = deltaTime / 1000;\n      const v0 = -velocity;\n      const x0 = toValue - current;\n\n      const { zeta, omega0, omega1 } = animation;\n\n      const { position: newPosition, velocity: newVelocity } =\n        zeta < 1\n          ? underDampedSpringCalculations(animation, {\n              zeta,\n              v0,\n              x0,\n              omega0,\n              omega1,\n              t,\n            })\n          : criticallyDampedSpringCalculations(animation, {\n              v0,\n              x0,\n              omega0,\n              t,\n            });\n\n      animation.current = newPosition;\n      animation.velocity = newVelocity;\n\n      const { isOvershooting, isVelocity, isDisplacement } =\n        isAnimationTerminatingCalculation(animation, config);\n\n      const springIsNotInMove =\n        isOvershooting || (isVelocity && isDisplacement);\n\n      if (!config.useDuration && springIsNotInMove) {\n        animation.velocity = 0;\n        animation.current = toValue;\n        // clear lastTimestamp to avoid using stale value by the next spring animation that starts after this one\n        animation.lastTimestamp = 0;\n        return true;\n      }\n\n      return false;\n    }\n\n    function isTriggeredTwice(\n      previousAnimation: SpringAnimation | undefined,\n      animation: SpringAnimation\n    ) {\n      return (\n        previousAnimation?.lastTimestamp &&\n        previousAnimation?.startTimestamp &&\n        previousAnimation?.toValue === animation.toValue &&\n        previousAnimation?.duration === animation.duration &&\n        previousAnimation?.dampingRatio === animation.dampingRatio\n      );\n    }\n\n    function onStart(\n      animation: SpringAnimation,\n      value: number,\n      now: Timestamp,\n      previousAnimation: SpringAnimation | undefined\n    ): void {\n      animation.current = value;\n      animation.startValue = value;\n\n      let mass = config.mass;\n      const triggeredTwice = isTriggeredTwice(previousAnimation, animation);\n\n      const duration = config.duration;\n\n      const x0 = triggeredTwice\n        ? // If animation is triggered twice we want to continue the previous animation\n          // form the previous starting point\n          previousAnimation?.startValue\n        : Number(animation.toValue) - value;\n\n      if (previousAnimation) {\n        animation.velocity =\n          (triggeredTwice\n            ? previousAnimation?.velocity\n            : previousAnimation?.velocity + config.velocity) || 0;\n      } else {\n        animation.velocity = config.velocity || 0;\n      }\n\n      if (triggeredTwice) {\n        animation.zeta = previousAnimation?.zeta || 0;\n        animation.omega0 = previousAnimation?.omega0 || 0;\n        animation.omega1 = previousAnimation?.omega1 || 0;\n      } else {\n        if (config.useDuration) {\n          const actualDuration = triggeredTwice\n            ? // If animation is triggered twice we want to continue the previous animation\n              // so we need to include the time that already elapsed\n              duration -\n              ((previousAnimation?.lastTimestamp || 0) -\n                (previousAnimation?.startTimestamp || 0))\n            : duration;\n\n          config.duration = actualDuration;\n          mass = calculateNewMassToMatchDuration(\n            x0 as number,\n            config,\n            animation.velocity\n          );\n        }\n\n        const { zeta, omega0, omega1 } = initialCalculations(mass, config);\n        animation.zeta = zeta;\n        animation.omega0 = omega0;\n        animation.omega1 = omega1;\n\n        if (config.clamp !== undefined) {\n          animation.zeta = scaleZetaToMatchClamps(animation, config.clamp);\n        }\n      }\n\n      animation.lastTimestamp = previousAnimation?.lastTimestamp || now;\n\n      animation.startTimestamp = triggeredTwice\n        ? previousAnimation?.startTimestamp || now\n        : now;\n    }\n\n    return {\n      onFrame: springOnFrame,\n      onStart,\n      toValue,\n      velocity: config.velocity || 0,\n      current: toValue,\n      startValue: 0,\n      callback,\n      lastTimestamp: 0,\n      startTimestamp: 0,\n      zeta: 0,\n      omega0: 0,\n      omega1: 0,\n      reduceMotion: getReduceMotionForAnimation(config.reduceMotion),\n    } as SpringAnimation;\n  });\n}) as withSpringType;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}