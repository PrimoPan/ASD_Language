{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createGestureHandler = createGestureHandler;\nexports.dropGestureHandler = dropGestureHandler;\nexports.gestures = void 0;\nexports.getHandler = getHandler;\nexports.getNodes = getNodes;\nvar gestures = exports.gestures = {};\nfunction getHandler(tag) {\n  if (tag in gestures) {\n    return gestures[tag];\n  }\n  throw new Error(`No handler for tag ${tag}`);\n}\nfunction createGestureHandler(handlerTag, handler) {\n  if (handlerTag in gestures) {\n    throw new Error(`Handler with tag ${handlerTag} already exists`);\n  }\n  gestures[handlerTag] = handler;\n  gestures[handlerTag].handlerTag = handlerTag;\n}\nfunction dropGestureHandler(handlerTag) {\n  if (!(handlerTag in gestures)) {\n    return;\n  }\n  getHandler(handlerTag).destroy();\n  delete gestures[handlerTag];\n}\nfunction getNodes() {\n  return Object.assign({}, gestures);\n}","map":{"version":3,"names":["gestures","exports","getHandler","tag","Error","createGestureHandler","handlerTag","handler","dropGestureHandler","destroy","getNodes","Object","assign"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/react-native-gesture-handler/lib/module/web_hammer/NodeManager.ts"],"sourcesContent":["export const gestures: Record<number, any> = {};\n\nexport function getHandler(tag: number) {\n  if (tag in gestures) {\n    return gestures[tag];\n  }\n\n  throw new Error(`No handler for tag ${tag}`);\n}\n\nexport function createGestureHandler(handlerTag: number, handler: any) {\n  if (handlerTag in gestures) {\n    throw new Error(`Handler with tag ${handlerTag} already exists`);\n  }\n  gestures[handlerTag] = handler;\n  // @ts-ignore no types for web handlers yet\n  gestures[handlerTag].handlerTag = handlerTag;\n}\n\nexport function dropGestureHandler(handlerTag: number) {\n  // Since React 18, there are cases where componentWillUnmount gets called twice in a row\n  // so skip this if the tag was already removed.\n  if (!(handlerTag in gestures)) {\n    return;\n  }\n  getHandler(handlerTag).destroy();\n  // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n  delete gestures[handlerTag];\n}\n\nexport function getNodes() {\n  return { ...gestures };\n}\n"],"mappings":";;;;;;;;AAAO,IAAMA,QAA6B,GAAAC,OAAA,CAAAD,QAAA,GAAG,EAAtC;AAEA,SAASE,UAATA,CAAoBC,GAApB,EAAiC;EACtC,IAAIA,GAAG,IAAIH,QAAX,EAAqB;IACnB,OAAOA,QAAQ,CAACG,GAAD,CAAf;EACD;EAED,MAAM,IAAIC,KAAJ,CAAW,sBAAqBD,GAAI,EAApC,CAAN;AACD;AAEM,SAASE,oBAATA,CAA8BC,UAA9B,EAAkDC,OAAlD,EAAgE;EACrE,IAAID,UAAU,IAAIN,QAAlB,EAA4B;IAC1B,MAAM,IAAII,KAAJ,CAAW,oBAAmBE,UAAW,iBAAzC,CAAN;EACD;EACDN,QAAQ,CAACM,UAAD,CAAR,GAAuBC,OAAvB;EAEAP,QAAQ,CAACM,UAAD,CAAR,CAAqBA,UAArB,GAAkCA,UAAlC;AACD;AAEM,SAASE,kBAATA,CAA4BF,UAA5B,EAAgD;EAGrD,IAAI,EAAEA,UAAU,IAAIN,QAAhB,CAAJ,EAA+B;IAC7B;EACD;EACDE,UAAU,CAACI,UAAD,CAAV,CAAuBG,OAAvB;EAEA,OAAOT,QAAQ,CAACM,UAAD,CAAf;AACD;AAEM,SAASI,QAATA,CAAA,EAAoB;EACzB,OAAAC,MAAA,CAAAC,MAAA,KAAYZ,QAAA;AACb","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}