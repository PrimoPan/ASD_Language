{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.withTiming = void 0;\nvar _Easing = require(\"../Easing.js\");\nvar _util = require(\"./util.js\");\nvar withTiming = exports.withTiming = function withTiming(toValue, userConfig, callback) {\n  'worklet';\n\n  if (__DEV__ && userConfig != null && userConfig.easing) {\n    (0, _util.assertEasingIsWorklet)(userConfig.easing);\n  }\n  return (0, _util.defineAnimation)(toValue, function () {\n    'worklet';\n\n    var config = {\n      duration: 300,\n      easing: _Easing.Easing.inOut(_Easing.Easing.quad)\n    };\n    if (userConfig) {\n      Object.keys(userConfig).forEach(function (key) {\n        return config[key] = userConfig[key];\n      });\n    }\n    function timing(animation, now) {\n      var toValue = animation.toValue,\n        startTime = animation.startTime,\n        startValue = animation.startValue;\n      var runtime = now - startTime;\n      if (runtime >= config.duration) {\n        animation.startTime = 0;\n        animation.current = toValue;\n        return true;\n      }\n      var progress = animation.easing(runtime / config.duration);\n      animation.current = startValue + (toValue - startValue) * progress;\n      return false;\n    }\n    function onStart(animation, value, now, previousAnimation) {\n      if (previousAnimation && previousAnimation.type === 'timing' && previousAnimation.toValue === toValue && previousAnimation.startTime) {\n        animation.startTime = previousAnimation.startTime;\n        animation.startValue = previousAnimation.startValue;\n      } else {\n        animation.startTime = now;\n        animation.startValue = value;\n      }\n      animation.current = value;\n      if (typeof config.easing === 'object') {\n        animation.easing = config.easing.factory();\n      } else {\n        animation.easing = config.easing;\n      }\n    }\n    return {\n      type: 'timing',\n      onFrame: timing,\n      onStart: onStart,\n      progress: 0,\n      toValue: toValue,\n      startValue: 0,\n      startTime: 0,\n      easing: function easing() {\n        return 0;\n      },\n      current: toValue,\n      callback: callback,\n      reduceMotion: (0, _util.getReduceMotionForAnimation)(userConfig == null ? void 0 : userConfig.reduceMotion)\n    };\n  });\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","withTiming","_Easing","require","_util","toValue","userConfig","callback","__DEV__","easing","assertEasingIsWorklet","defineAnimation","config","duration","Easing","inOut","quad","keys","forEach","key","timing","animation","now","startTime","startValue","runtime","current","progress","onStart","previousAnimation","type","factory","onFrame","reduceMotion","getReduceMotionForAnimation"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/react-native-reanimated/src/animation/timing.ts"],"sourcesContent":["'use strict';\nimport type { EasingFunctionFactory } from '../Easing';\nimport { Easing } from '../Easing';\nimport {\n  assertEasingIsWorklet,\n  defineAnimation,\n  getReduceMotionForAnimation,\n} from './util';\nimport type {\n  Animation,\n  AnimationCallback,\n  Timestamp,\n  AnimatableValue,\n  ReduceMotion,\n  EasingFunction,\n} from '../commonTypes';\n\n/**\n * The timing animation configuration.\n *\n * @param duration - Length of the animation (in milliseconds). Defaults to 300.\n * @param easing - An easing function which defines the animation curve.\n *   Defaults to `Easing.inOut(Easing.quad)`.\n * @param reduceMotion - Determines how the animation responds to the device's\n *   reduced motion accessibility setting. Default to `ReduceMotion.System` -\n *   {@link ReduceMotion}.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/animations/withTiming#config-\n */\ninterface TimingConfig {\n  duration?: number;\n  reduceMotion?: ReduceMotion;\n  easing?: EasingFunction | EasingFunctionFactory;\n}\n\nexport type WithTimingConfig = TimingConfig;\n\nexport interface TimingAnimation extends Animation<TimingAnimation> {\n  type: string;\n  easing: EasingFunction;\n  startValue: AnimatableValue;\n  startTime: Timestamp;\n  progress: number;\n  toValue: AnimatableValue;\n  current: AnimatableValue;\n}\n\ninterface InnerTimingAnimation\n  extends Omit<TimingAnimation, 'toValue' | 'current'> {\n  toValue: number;\n  current: number;\n}\n\n// TODO TYPESCRIPT This is temporary type put in here to get rid of our .d.ts file\ntype withTimingType = <T extends AnimatableValue>(\n  toValue: T,\n  userConfig?: TimingConfig,\n  callback?: AnimationCallback\n) => T;\n\n/**\n * Lets you create an animation based on duration and easing.\n *\n * @param toValue - The value on which the animation will come at rest -\n *   {@link AnimatableValue}.\n * @param config - The timing animation configuration - {@link TimingConfig}.\n * @param callback - A function called on animation complete -\n *   {@link AnimationCallback}.\n * @returns An [animation\n *   object](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animation-object)\n *   which holds the current state of the animation.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/animations/withTiming\n */\nexport const withTiming = function (\n  toValue: AnimatableValue,\n  userConfig?: TimingConfig,\n  callback?: AnimationCallback\n): Animation<TimingAnimation> {\n  'worklet';\n\n  if (__DEV__ && userConfig?.easing) {\n    assertEasingIsWorklet(userConfig.easing);\n  }\n\n  return defineAnimation<TimingAnimation>(toValue, () => {\n    'worklet';\n    const config: Required<Omit<TimingConfig, 'reduceMotion'>> = {\n      duration: 300,\n      easing: Easing.inOut(Easing.quad),\n    };\n    if (userConfig) {\n      Object.keys(userConfig).forEach(\n        (key) =>\n          ((config as any)[key] = userConfig[key as keyof typeof userConfig])\n      );\n    }\n\n    function timing(animation: InnerTimingAnimation, now: Timestamp): boolean {\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      const { toValue, startTime, startValue } = animation;\n      const runtime = now - startTime;\n\n      if (runtime >= config.duration) {\n        // reset startTime to avoid reusing finished animation config in `start` method\n        animation.startTime = 0;\n        animation.current = toValue;\n        return true;\n      }\n      const progress = animation.easing(runtime / config.duration);\n      animation.current =\n        (startValue as number) + (toValue - (startValue as number)) * progress;\n      return false;\n    }\n\n    function onStart(\n      animation: TimingAnimation,\n      value: number,\n      now: Timestamp,\n      previousAnimation: Animation<TimingAnimation>\n    ): void {\n      if (\n        previousAnimation &&\n        (previousAnimation as TimingAnimation).type === 'timing' &&\n        (previousAnimation as TimingAnimation).toValue === toValue &&\n        (previousAnimation as TimingAnimation).startTime\n      ) {\n        // to maintain continuity of timing animations we check if we are starting\n        // new timing over the old one with the same parameters. If so, we want\n        // to copy animation timeline properties\n        animation.startTime = (previousAnimation as TimingAnimation).startTime;\n        animation.startValue = (\n          previousAnimation as TimingAnimation\n        ).startValue;\n      } else {\n        animation.startTime = now;\n        animation.startValue = value;\n      }\n      animation.current = value;\n      if (typeof config.easing === 'object') {\n        animation.easing = config.easing.factory();\n      } else {\n        animation.easing = config.easing;\n      }\n    }\n\n    return {\n      type: 'timing',\n      onFrame: timing,\n      onStart: onStart as (animation: TimingAnimation, now: number) => boolean,\n      progress: 0,\n      toValue,\n      startValue: 0,\n      startTime: 0,\n      easing: () => 0,\n      current: toValue,\n      callback,\n      reduceMotion: getReduceMotionForAnimation(userConfig?.reduceMotion),\n    } as TimingAnimation;\n  });\n} as withTimingType;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}