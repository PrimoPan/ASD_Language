{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _Directions = require(\"../../Directions\");\nvar _constants = require(\"../constants\");\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nvar Vector = exports.default = function () {\n  function Vector(x, y) {\n    (0, _classCallCheck2.default)(this, Vector);\n    _defineProperty(this, \"x\", void 0);\n    _defineProperty(this, \"y\", void 0);\n    _defineProperty(this, \"unitX\", void 0);\n    _defineProperty(this, \"unitY\", void 0);\n    _defineProperty(this, \"_magnitude\", void 0);\n    this.x = x;\n    this.y = y;\n    this._magnitude = Math.hypot(this.x, this.y);\n    var isMagnitudeSufficient = this._magnitude > _constants.MINIMAL_RECOGNIZABLE_MAGNITUDE;\n    this.unitX = isMagnitudeSufficient ? this.x / this._magnitude : 0;\n    this.unitY = isMagnitudeSufficient ? this.y / this._magnitude : 0;\n  }\n  return (0, _createClass2.default)(Vector, [{\n    key: \"magnitude\",\n    get: function get() {\n      return this._magnitude;\n    }\n  }, {\n    key: \"computeSimilarity\",\n    value: function computeSimilarity(vector) {\n      return this.unitX * vector.unitX + this.unitY * vector.unitY;\n    }\n  }, {\n    key: \"isSimilar\",\n    value: function isSimilar(vector, threshold) {\n      return this.computeSimilarity(vector) > threshold;\n    }\n  }], [{\n    key: \"fromDirection\",\n    value: function fromDirection(direction) {\n      var _DirectionToVectorMap;\n      return (_DirectionToVectorMap = DirectionToVectorMappings.get(direction)) !== null && _DirectionToVectorMap !== void 0 ? _DirectionToVectorMap : new Vector(0, 0);\n    }\n  }, {\n    key: \"fromVelocity\",\n    value: function fromVelocity(tracker, pointerId) {\n      var velocity = tracker.getVelocity(pointerId);\n      return new Vector(velocity.x, velocity.y);\n    }\n  }]);\n}();\nvar DirectionToVectorMappings = new Map([[_Directions.Directions.LEFT, new Vector(-1, 0)], [_Directions.Directions.RIGHT, new Vector(1, 0)], [_Directions.Directions.UP, new Vector(0, -1)], [_Directions.Directions.DOWN, new Vector(0, 1)], [_Directions.DiagonalDirections.UP_RIGHT, new Vector(1, -1)], [_Directions.DiagonalDirections.DOWN_RIGHT, new Vector(1, 1)], [_Directions.DiagonalDirections.UP_LEFT, new Vector(-1, -1)], [_Directions.DiagonalDirections.DOWN_LEFT, new Vector(-1, 1)]]);","map":{"version":3,"names":["_Directions","require","_constants","Vector","exports","default","x","y","_classCallCheck2","_defineProperty","_magnitude","Math","hypot","isMagnitudeSufficient","MINIMAL_RECOGNIZABLE_MAGNITUDE","unitX","unitY","_createClass2","key","get","value","computeSimilarity","vector","isSimilar","threshold","fromDirection","direction","_DirectionToVectorMap","DirectionToVectorMappings","fromVelocity","tracker","pointerId","velocity","getVelocity","Map","Directions","LEFT","RIGHT","UP","DOWN","DiagonalDirections","UP_RIGHT","DOWN_RIGHT","UP_LEFT","DOWN_LEFT"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/react-native-gesture-handler/lib/module/web/tools/Vector.ts"],"sourcesContent":["import { DiagonalDirections, Directions } from '../../Directions';\nimport { MINIMAL_RECOGNIZABLE_MAGNITUDE } from '../constants';\nimport PointerTracker from './PointerTracker';\n\nexport default class Vector {\n  private readonly x;\n  private readonly y;\n  private readonly unitX;\n  private readonly unitY;\n  private readonly _magnitude;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n\n    this._magnitude = Math.hypot(this.x, this.y);\n    const isMagnitudeSufficient =\n      this._magnitude > MINIMAL_RECOGNIZABLE_MAGNITUDE;\n\n    this.unitX = isMagnitudeSufficient ? this.x / this._magnitude : 0;\n    this.unitY = isMagnitudeSufficient ? this.y / this._magnitude : 0;\n  }\n\n  static fromDirection(direction: Directions | DiagonalDirections): Vector {\n    return DirectionToVectorMappings.get(direction) ?? new Vector(0, 0);\n  }\n\n  static fromVelocity(tracker: PointerTracker, pointerId: number) {\n    const velocity = tracker.getVelocity(pointerId);\n    return new Vector(velocity.x, velocity.y);\n  }\n\n  get magnitude() {\n    return this._magnitude;\n  }\n\n  computeSimilarity(vector: Vector) {\n    return this.unitX * vector.unitX + this.unitY * vector.unitY;\n  }\n\n  isSimilar(vector: Vector, threshold: number) {\n    return this.computeSimilarity(vector) > threshold;\n  }\n}\n\nconst DirectionToVectorMappings = new Map<\n  Directions | DiagonalDirections,\n  Vector\n>([\n  [Directions.LEFT, new Vector(-1, 0)],\n  [Directions.RIGHT, new Vector(1, 0)],\n  [Directions.UP, new Vector(0, -1)],\n  [Directions.DOWN, new Vector(0, 1)],\n\n  [DiagonalDirections.UP_RIGHT, new Vector(1, -1)],\n  [DiagonalDirections.DOWN_RIGHT, new Vector(1, 1)],\n  [DiagonalDirections.UP_LEFT, new Vector(-1, -1)],\n  [DiagonalDirections.DOWN_LEFT, new Vector(-1, 1)],\n]);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}