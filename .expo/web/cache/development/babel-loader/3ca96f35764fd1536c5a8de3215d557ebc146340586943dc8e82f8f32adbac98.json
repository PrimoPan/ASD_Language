{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useAnimatedRef = useAnimatedRef;\nvar _react = require(\"react\");\nvar _useSharedValue = require(\"./useSharedValue.js\");\nvar _fabricUtils = require(\"../fabricUtils\");\nvar _shareables = require(\"../shareables.js\");\nvar _shareableMappingCache = require(\"../shareableMappingCache.js\");\nvar _reactNative = require(\"react-native\");\nvar _findNodeHandle = require(\"../platformFunctions/findNodeHandle\");\nvar _PlatformChecker = require(\"../PlatformChecker.js\");\nvar IS_WEB = (0, _PlatformChecker.isWeb)();\nfunction getComponentOrScrollable(component) {\n  if ((0, _PlatformChecker.isFabric)() && component.getNativeScrollRef) {\n    return component.getNativeScrollRef();\n  } else if (!(0, _PlatformChecker.isFabric)() && component.getScrollableNode) {\n    return component.getScrollableNode();\n  }\n  return component;\n}\nfunction useAnimatedRef() {\n  var tag = (0, _useSharedValue.useSharedValue)(-1);\n  var viewName = (0, _useSharedValue.useSharedValue)(null);\n  var ref = (0, _react.useRef)();\n  if (!ref.current) {\n    var _fun = function fun(component) {\n      if (component) {\n        var getTagValueFunction = (0, _PlatformChecker.isFabric)() ? _fabricUtils.getShadowNodeWrapperFromRef : _findNodeHandle.findNodeHandle;\n        var getTagOrShadowNodeWrapper = function getTagOrShadowNodeWrapper() {\n          return IS_WEB ? getComponentOrScrollable(component) : getTagValueFunction(getComponentOrScrollable(component));\n        };\n        tag.value = getTagOrShadowNodeWrapper();\n        _fun.getTag = (0, _PlatformChecker.isFabric)() ? function () {\n          return (0, _findNodeHandle.findNodeHandle)(getComponentOrScrollable(component));\n        } : getTagOrShadowNodeWrapper;\n        _fun.current = component;\n        if (_reactNative.Platform.OS === 'ios' && !(0, _PlatformChecker.isFabric)()) {\n          var _component$viewConfig;\n          viewName.value = (component == null || (_component$viewConfig = component.viewConfig) == null ? void 0 : _component$viewConfig.uiViewClassName) || 'RCTView';\n        }\n      }\n      return tag.value;\n    };\n    _fun.current = null;\n    var animatedRefShareableHandle = (0, _shareables.makeShareableCloneRecursive)({\n      __init: function __init() {\n        'worklet';\n\n        var f = function f() {\n          return tag.value;\n        };\n        f.viewName = viewName;\n        return f;\n      }\n    });\n    _shareableMappingCache.shareableMappingCache.set(_fun, animatedRefShareableHandle);\n    ref.current = _fun;\n  }\n  return ref.current;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","useAnimatedRef","_react","require","_useSharedValue","_fabricUtils","_shareables","_shareableMappingCache","_reactNative","_findNodeHandle","_PlatformChecker","IS_WEB","isWeb","getComponentOrScrollable","component","isFabric","getNativeScrollRef","getScrollableNode","tag","useSharedValue","viewName","ref","useRef","current","fun","getTagValueFunction","getShadowNodeWrapperFromRef","findNodeHandle","getTagOrShadowNodeWrapper","getTag","Platform","OS","_component$viewConfig","viewConfig","uiViewClassName","animatedRefShareableHandle","makeShareableCloneRecursive","__init","f","shareableMappingCache","set"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/react-native-reanimated/src/hook/useAnimatedRef.ts"],"sourcesContent":["'use strict';\nimport type { Component } from 'react';\nimport { useRef } from 'react';\nimport { useSharedValue } from './useSharedValue';\nimport type { AnimatedRef, AnimatedRefOnUI } from './commonTypes';\nimport type { ShadowNodeWrapper } from '../commonTypes';\nimport { getShadowNodeWrapperFromRef } from '../fabricUtils';\nimport { makeShareableCloneRecursive } from '../shareables';\nimport { shareableMappingCache } from '../shareableMappingCache';\nimport { Platform } from 'react-native';\nimport { findNodeHandle } from '../platformFunctions/findNodeHandle';\nimport type { ScrollView, FlatList } from 'react-native';\nimport { isFabric, isWeb } from '../PlatformChecker';\n\nconst IS_WEB = isWeb();\n\ninterface MaybeScrollableComponent extends Component {\n  getNativeScrollRef?: FlatList['getNativeScrollRef'];\n  getScrollableNode?:\n    | ScrollView['getScrollableNode']\n    | FlatList['getScrollableNode'];\n  viewConfig?: {\n    uiViewClassName?: string;\n  };\n}\n\nfunction getComponentOrScrollable(component: MaybeScrollableComponent) {\n  if (isFabric() && component.getNativeScrollRef) {\n    return component.getNativeScrollRef();\n  } else if (!isFabric() && component.getScrollableNode) {\n    return component.getScrollableNode();\n  }\n  return component;\n}\n\n/**\n * Lets you get a reference of a view that you can use inside a worklet.\n *\n * @returns An object with a `.current` property which contains an instance of a\n *   component.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/core/useAnimatedRef\n */\nexport function useAnimatedRef<\n  TComponent extends Component,\n>(): AnimatedRef<TComponent> {\n  const tag = useSharedValue<number | ShadowNodeWrapper | null>(-1);\n  const viewName = useSharedValue<string | null>(null);\n\n  const ref = useRef<AnimatedRef<TComponent>>();\n\n  if (!ref.current) {\n    const fun: AnimatedRef<TComponent> = <AnimatedRef<TComponent>>((\n      component\n    ) => {\n      // enters when ref is set by attaching to a component\n      if (component) {\n        const getTagValueFunction = isFabric()\n          ? getShadowNodeWrapperFromRef\n          : findNodeHandle;\n\n        const getTagOrShadowNodeWrapper = () => {\n          return IS_WEB\n            ? getComponentOrScrollable(component)\n            : getTagValueFunction(getComponentOrScrollable(component));\n        };\n\n        tag.value = getTagOrShadowNodeWrapper();\n\n        // On Fabric we have to unwrap the tag from the shadow node wrapper\n        fun.getTag = isFabric()\n          ? () => findNodeHandle(getComponentOrScrollable(component))\n          : getTagOrShadowNodeWrapper;\n\n        fun.current = component;\n        // viewName is required only on iOS with Paper\n        if (Platform.OS === 'ios' && !isFabric()) {\n          viewName.value =\n            (component as MaybeScrollableComponent)?.viewConfig\n              ?.uiViewClassName || 'RCTView';\n        }\n      }\n      return tag.value;\n    });\n\n    fun.current = null;\n\n    const animatedRefShareableHandle = makeShareableCloneRecursive({\n      __init: () => {\n        'worklet';\n        const f: AnimatedRefOnUI = () => tag.value;\n        f.viewName = viewName;\n        return f;\n      },\n    });\n    shareableMappingCache.set(fun, animatedRefShareableHandle);\n    ref.current = fun;\n  }\n\n  return ref.current;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}