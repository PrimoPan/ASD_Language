{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.INT32_MAX=void 0;exports.deepEqual=deepEqual;exports.hasProperty=hasProperty;exports.isFabric=isFabric;exports.isJestEnv=isJestEnv;exports.isRemoteDebuggingEnabled=isRemoteDebuggingEnabled;exports.tagMessage=tagMessage;exports.toArray=toArray;exports.withPrevAndCurrent=withPrevAndCurrent;var _toConsumableArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));function toArray(object){if(!Array.isArray(object)){return[object];}return object;}function withPrevAndCurrent(array,mapFn){var previousArr=[null];var currentArr=(0,_toConsumableArray2.default)(array);var transformedArr=[];currentArr.forEach(function(current,i){var previous=previousArr[i];var transformed=mapFn(previous,current);previousArr.push(transformed);transformedArr.push(transformed);});return transformedArr;}function hasProperty(object,key){return Object.prototype.hasOwnProperty.call(object,key);}function isJestEnv(){return hasProperty(global,'process')&&!!process.env.JEST_WORKER_ID;}function tagMessage(msg){return`[react-native-gesture-handler] ${msg}`;}function isFabric(){var _global;return!!((_global=global)!==null&&_global!==void 0&&_global.nativeFabricUIManager);}function isRemoteDebuggingEnabled(){var localGlobal=global;return(!localGlobal.nativeCallSyncHook||!!localGlobal.__REMOTEDEV__)&&!localGlobal.RN$Bridgeless;}function deepEqual(obj1,obj2){if(obj1===obj2){return true;}if(typeof obj1!=='object'||typeof obj2!=='object'||obj1===null||obj2===null){return false;}var keys1=Object.keys(obj1);var keys2=Object.keys(obj2);if(keys1.length!==keys2.length){return false;}for(var key of keys1){if(!keys2.includes(key)||!deepEqual(obj1[key],obj2[key])){return false;}}return true;}var INT32_MAX=exports.INT32_MAX=2**31-1;","map":{"version":3,"names":["toArray","object","Array","isArray","withPrevAndCurrent","array","mapFn","previousArr","currentArr","_toConsumableArray2","default","transformedArr","forEach","current","i","previous","transformed","push","hasProperty","key","Object","prototype","hasOwnProperty","call","isJestEnv","global","process","env","JEST_WORKER_ID","tagMessage","msg","isFabric","_global","nativeFabricUIManager","isRemoteDebuggingEnabled","localGlobal","nativeCallSyncHook","__REMOTEDEV__","RN$Bridgeless","deepEqual","obj1","obj2","keys1","keys","keys2","length","includes","INT32_MAX","exports"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/react-native-gesture-handler/lib/module/utils.ts"],"sourcesContent":["export function toArray<T>(object: T | T[]): T[] {\n  if (!Array.isArray(object)) {\n    return [object];\n  }\n\n  return object;\n}\n\nexport type withPrevAndCurrentMapFn<T, Transformed> = (\n  previous: Transformed | null,\n  current: T\n) => Transformed;\nexport function withPrevAndCurrent<T, Transformed>(\n  array: T[],\n  mapFn: withPrevAndCurrentMapFn<T, Transformed>\n): Transformed[] {\n  const previousArr: (null | Transformed)[] = [null];\n  const currentArr = [...array];\n  const transformedArr: Transformed[] = [];\n  currentArr.forEach((current, i) => {\n    // This type cast is fine and solves problem mentioned in https://github.com/software-mansion/react-native-gesture-handler/pull/2867 (namely that `previous` can be undefined).\n    // Unfortunately, linter on our CI does not allow this type of casting as it is unnecessary. To bypass that we use eslint-disable.\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n    const previous = previousArr[i] as Transformed | null;\n    const transformed = mapFn(previous, current);\n    previousArr.push(transformed);\n    transformedArr.push(transformed);\n  });\n  return transformedArr;\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function hasProperty(object: object, key: string) {\n  return Object.prototype.hasOwnProperty.call(object, key);\n}\n\nexport function isJestEnv(): boolean {\n  // @ts-ignore Do not use `@types/node` because it will prioritise Node types over RN types which breaks the types (ex. setTimeout) in React Native projects.\n  return hasProperty(global, 'process') && !!process.env.JEST_WORKER_ID;\n}\n\nexport function tagMessage(msg: string) {\n  return `[react-native-gesture-handler] ${msg}`;\n}\n\n// Helper method to check whether Fabric is enabled, however global.nativeFabricUIManager\n// may not be initialized before the first render\nexport function isFabric(): boolean {\n  // @ts-expect-error nativeFabricUIManager is not yet included in the RN types\n  return !!global?.nativeFabricUIManager;\n}\n\nexport function isRemoteDebuggingEnabled(): boolean {\n  // react-native-reanimated checks if in remote debugging in the same way\n  // @ts-ignore global is available but node types are not included\n  const localGlobal = global as any;\n  return (\n    (!localGlobal.nativeCallSyncHook || !!localGlobal.__REMOTEDEV__) &&\n    !localGlobal.RN$Bridgeless\n  );\n}\n\n/**\n * Recursively compares two objects for deep equality.\n *\n * **Note:** This function does not support cyclic references.\n *\n * @param obj1 - The first object to compare.\n * @param obj2 - The second object to compare.\n * @returns `true` if the objects are deeply equal, `false` otherwise.\n */\nexport function deepEqual(obj1: any, obj2: any) {\n  if (obj1 === obj2) {\n    return true;\n  }\n\n  if (\n    typeof obj1 !== 'object' ||\n    typeof obj2 !== 'object' ||\n    obj1 === null ||\n    obj2 === null\n  ) {\n    return false;\n  }\n\n  const keys1 = Object.keys(obj1);\n  const keys2 = Object.keys(obj2);\n\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n\n  for (const key of keys1) {\n    if (!keys2.includes(key) || !deepEqual(obj1[key], obj2[key])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport const INT32_MAX = 2 ** 31 - 1;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}