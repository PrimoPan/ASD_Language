{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _State=require(\"../../State\");function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}var InteractionManager=exports.default=function(){function InteractionManager(){(0,_classCallCheck2.default)(this,InteractionManager);_defineProperty(this,\"waitForRelations\",new Map());_defineProperty(this,\"simultaneousRelations\",new Map());_defineProperty(this,\"blocksHandlersRelations\",new Map());}return(0,_createClass2.default)(InteractionManager,[{key:\"configureInteractions\",value:function configureInteractions(handler,config){this.dropRelationsForHandlerWithTag(handler.getTag());if(config.waitFor){var waitFor=[];config.waitFor.forEach(function(otherHandler){if(typeof otherHandler==='number'){waitFor.push(otherHandler);}else{waitFor.push(otherHandler.handlerTag);}});this.waitForRelations.set(handler.getTag(),waitFor);}if(config.simultaneousHandlers){var simultaneousHandlers=[];config.simultaneousHandlers.forEach(function(otherHandler){if(typeof otherHandler==='number'){simultaneousHandlers.push(otherHandler);}else{simultaneousHandlers.push(otherHandler.handlerTag);}});this.simultaneousRelations.set(handler.getTag(),simultaneousHandlers);}if(config.blocksHandlers){var blocksHandlers=[];config.blocksHandlers.forEach(function(otherHandler){if(typeof otherHandler==='number'){blocksHandlers.push(otherHandler);}else{blocksHandlers.push(otherHandler.handlerTag);}});this.blocksHandlersRelations.set(handler.getTag(),blocksHandlers);}}},{key:\"shouldWaitForHandlerFailure\",value:function shouldWaitForHandlerFailure(handler,otherHandler){var waitFor=this.waitForRelations.get(handler.getTag());return(waitFor===null||waitFor===void 0?void 0:waitFor.find(function(tag){return tag===otherHandler.getTag();}))!==undefined;}},{key:\"shouldRecognizeSimultaneously\",value:function shouldRecognizeSimultaneously(handler,otherHandler){var simultaneousHandlers=this.simultaneousRelations.get(handler.getTag());return(simultaneousHandlers===null||simultaneousHandlers===void 0?void 0:simultaneousHandlers.find(function(tag){return tag===otherHandler.getTag();}))!==undefined;}},{key:\"shouldRequireHandlerToWaitForFailure\",value:function shouldRequireHandlerToWaitForFailure(handler,otherHandler){var waitFor=this.blocksHandlersRelations.get(handler.getTag());return(waitFor===null||waitFor===void 0?void 0:waitFor.find(function(tag){return tag===otherHandler.getTag();}))!==undefined;}},{key:\"shouldHandlerBeCancelledBy\",value:function shouldHandlerBeCancelledBy(_handler,otherHandler){var _otherHandler$isButto;var isNativeHandler=otherHandler.constructor.name==='NativeViewGestureHandler';var isActive=otherHandler.getState()===_State.State.ACTIVE;var isButton=((_otherHandler$isButto=otherHandler.isButton)===null||_otherHandler$isButto===void 0?void 0:_otherHandler$isButto.call(otherHandler))===true;return isNativeHandler&&isActive&&!isButton;}},{key:\"dropRelationsForHandlerWithTag\",value:function dropRelationsForHandlerWithTag(handlerTag){this.waitForRelations.delete(handlerTag);this.simultaneousRelations.delete(handlerTag);this.blocksHandlersRelations.delete(handlerTag);}},{key:\"reset\",value:function reset(){this.waitForRelations.clear();this.simultaneousRelations.clear();this.blocksHandlersRelations.clear();}}],[{key:\"getInstance\",value:function getInstance(){if(!this.instance){this.instance=new InteractionManager();}return this.instance;}}]);}();_defineProperty(InteractionManager,\"instance\",void 0);","map":{"version":3,"names":["_State","require","InteractionManager","exports","default","_classCallCheck2","_defineProperty","Map","_createClass2","key","value","configureInteractions","handler","config","dropRelationsForHandlerWithTag","getTag","waitFor","forEach","otherHandler","push","handlerTag","waitForRelations","set","simultaneousHandlers","simultaneousRelations","blocksHandlers","blocksHandlersRelations","shouldWaitForHandlerFailure","get","find","tag","undefined","shouldRecognizeSimultaneously","shouldRequireHandlerToWaitForFailure","shouldHandlerBeCancelledBy","_handler","_otherHandler$isButto","isNativeHandler","constructor","name","isActive","getState","State","ACTIVE","isButton","call","delete","reset","clear","getInstance","instance"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/react-native-gesture-handler/lib/module/web/tools/InteractionManager.ts"],"sourcesContent":["import type IGestureHandler from '../handlers/IGestureHandler';\nimport { State } from '../../State';\nimport { Config, Handler } from '../interfaces';\n\nexport default class InteractionManager {\n  private static instance: InteractionManager;\n  private readonly waitForRelations: Map<number, number[]> = new Map();\n  private readonly simultaneousRelations: Map<number, number[]> = new Map();\n  private readonly blocksHandlersRelations: Map<number, number[]> = new Map();\n\n  // Private becaues of singleton\n  // eslint-disable-next-line no-useless-constructor, @typescript-eslint/no-empty-function\n  private constructor() {}\n\n  public configureInteractions(handler: IGestureHandler, config: Config) {\n    this.dropRelationsForHandlerWithTag(handler.getTag());\n\n    if (config.waitFor) {\n      const waitFor: number[] = [];\n      config.waitFor.forEach((otherHandler: Handler): void => {\n        // New API reference\n        if (typeof otherHandler === 'number') {\n          waitFor.push(otherHandler);\n        } else {\n          // Old API reference\n          waitFor.push(otherHandler.handlerTag);\n        }\n      });\n\n      this.waitForRelations.set(handler.getTag(), waitFor);\n    }\n\n    if (config.simultaneousHandlers) {\n      const simultaneousHandlers: number[] = [];\n      config.simultaneousHandlers.forEach((otherHandler: Handler): void => {\n        if (typeof otherHandler === 'number') {\n          simultaneousHandlers.push(otherHandler);\n        } else {\n          simultaneousHandlers.push(otherHandler.handlerTag);\n        }\n      });\n\n      this.simultaneousRelations.set(handler.getTag(), simultaneousHandlers);\n    }\n\n    if (config.blocksHandlers) {\n      const blocksHandlers: number[] = [];\n      config.blocksHandlers.forEach((otherHandler: Handler): void => {\n        if (typeof otherHandler === 'number') {\n          blocksHandlers.push(otherHandler);\n        } else {\n          blocksHandlers.push(otherHandler.handlerTag);\n        }\n      });\n\n      this.blocksHandlersRelations.set(handler.getTag(), blocksHandlers);\n    }\n  }\n\n  public shouldWaitForHandlerFailure(\n    handler: IGestureHandler,\n    otherHandler: IGestureHandler\n  ): boolean {\n    const waitFor: number[] | undefined = this.waitForRelations.get(\n      handler.getTag()\n    );\n\n    return (\n      waitFor?.find((tag: number) => {\n        return tag === otherHandler.getTag();\n      }) !== undefined\n    );\n  }\n\n  public shouldRecognizeSimultaneously(\n    handler: IGestureHandler,\n    otherHandler: IGestureHandler\n  ): boolean {\n    const simultaneousHandlers: number[] | undefined =\n      this.simultaneousRelations.get(handler.getTag());\n\n    return (\n      simultaneousHandlers?.find((tag: number) => {\n        return tag === otherHandler.getTag();\n      }) !== undefined\n    );\n  }\n\n  public shouldRequireHandlerToWaitForFailure(\n    handler: IGestureHandler,\n    otherHandler: IGestureHandler\n  ): boolean {\n    const waitFor: number[] | undefined = this.blocksHandlersRelations.get(\n      handler.getTag()\n    );\n\n    return (\n      waitFor?.find((tag: number) => {\n        return tag === otherHandler.getTag();\n      }) !== undefined\n    );\n  }\n\n  public shouldHandlerBeCancelledBy(\n    _handler: IGestureHandler,\n    otherHandler: IGestureHandler\n  ): boolean {\n    // We check constructor name instead of using `instanceof` in order do avoid circular dependencies\n    const isNativeHandler =\n      otherHandler.constructor.name === 'NativeViewGestureHandler';\n    const isActive = otherHandler.getState() === State.ACTIVE;\n    const isButton = otherHandler.isButton?.() === true;\n\n    return isNativeHandler && isActive && !isButton;\n  }\n\n  public dropRelationsForHandlerWithTag(handlerTag: number): void {\n    this.waitForRelations.delete(handlerTag);\n    this.simultaneousRelations.delete(handlerTag);\n    this.blocksHandlersRelations.delete(handlerTag);\n  }\n\n  public reset() {\n    this.waitForRelations.clear();\n    this.simultaneousRelations.clear();\n    this.blocksHandlersRelations.clear();\n  }\n\n  public static getInstance(): InteractionManager {\n    if (!this.instance) {\n      this.instance = new InteractionManager();\n    }\n\n    return this.instance;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}