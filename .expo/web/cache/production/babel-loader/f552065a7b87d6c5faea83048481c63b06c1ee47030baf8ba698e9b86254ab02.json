{"ast":null,"code":"'use strict';Object.defineProperty(exports,\"__esModule\",{value:true});exports.ColorProperties=void 0;exports.RGBtoHSV=RGBtoHSV;exports.blue=void 0;exports.convertToRGBA=convertToRGBA;exports.hsvToColor=exports.green=void 0;exports.isColor=isColor;exports.normalizeColor=normalizeColor;exports.opacity=void 0;exports.processColor=processColor;exports.processColorsInProps=processColorsInProps;exports.red=void 0;exports.rgbaArrayToRGBAColor=rgbaArrayToRGBAColor;exports.rgbaColor=void 0;exports.toGammaSpace=toGammaSpace;exports.toLinearSpace=toLinearSpace;var _core=require(\"./core.js\");var _PlatformChecker=require(\"./PlatformChecker.js\");var NUMBER='[-+]?\\\\d*\\\\.?\\\\d+';var PERCENTAGE=NUMBER+'%';function call(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return'\\\\(\\\\s*('+args.join(')\\\\s*,?\\\\s*(')+')\\\\s*\\\\)';}function callWithSlashSeparator(){for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++){args[_key2]=arguments[_key2];}return'\\\\(\\\\s*('+args.slice(0,args.length-1).join(')\\\\s*,?\\\\s*(')+')\\\\s*/\\\\s*('+args[args.length-1]+')\\\\s*\\\\)';}function commaSeparatedCall(){for(var _len3=arguments.length,args=new Array(_len3),_key3=0;_key3<_len3;_key3++){args[_key3]=arguments[_key3];}return'\\\\(\\\\s*('+args.join(')\\\\s*,\\\\s*(')+')\\\\s*\\\\)';}var MATCHERS={rgb:new RegExp('rgb'+call(NUMBER,NUMBER,NUMBER)),rgba:new RegExp('rgba('+commaSeparatedCall(NUMBER,NUMBER,NUMBER,NUMBER)+'|'+callWithSlashSeparator(NUMBER,NUMBER,NUMBER,NUMBER)+')'),hsl:new RegExp('hsl'+call(NUMBER,PERCENTAGE,PERCENTAGE)),hsla:new RegExp('hsla('+commaSeparatedCall(NUMBER,PERCENTAGE,PERCENTAGE,NUMBER)+'|'+callWithSlashSeparator(NUMBER,PERCENTAGE,PERCENTAGE,NUMBER)+')'),hwb:new RegExp('hwb'+call(NUMBER,PERCENTAGE,PERCENTAGE)),hex3:/^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex4:/^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex6:/^#([0-9a-fA-F]{6})$/,hex8:/^#([0-9a-fA-F]{8})$/};function hue2rgb(p,q,t){'worklet';if(t<0){t+=1;}if(t>1){t-=1;}if(t<1/6){return p+(q-p)*6*t;}if(t<1/2){return q;}if(t<2/3){return p+(q-p)*(2/3-t)*6;}return p;}function hslToRgb(h,s,l){'worklet';var q=l<0.5?l*(1+s):l+s-l*s;var p=2*l-q;var r=hue2rgb(p,q,h+1/3);var g=hue2rgb(p,q,h);var b=hue2rgb(p,q,h-1/3);return Math.round(r*255)<<24|Math.round(g*255)<<16|Math.round(b*255)<<8;}function hwbToRgb(h,w,b){'worklet';if(w+b>=1){var gray=Math.round(w*255/(w+b));return gray<<24|gray<<16|gray<<8;}var red=hue2rgb(0,1,h+1/3)*(1-w-b)+w;var green=hue2rgb(0,1,h)*(1-w-b)+w;var blue=hue2rgb(0,1,h-1/3)*(1-w-b)+w;return Math.round(red*255)<<24|Math.round(green*255)<<16|Math.round(blue*255)<<8;}function parse255(str){'worklet';var int=Number.parseInt(str,10);if(int<0){return 0;}if(int>255){return 255;}return int;}function parse360(str){'worklet';var int=Number.parseFloat(str);return(int%360+360)%360/360;}function parse1(str){'worklet';var num=Number.parseFloat(str);if(num<0){return 0;}if(num>1){return 255;}return Math.round(num*255);}function parsePercentage(str){'worklet';var int=Number.parseFloat(str);if(int<0){return 0;}if(int>100){return 1;}return int/100;}var names=(0,_core.makeShareable)({transparent:0x00000000,aliceblue:0xf0f8ffff,antiquewhite:0xfaebd7ff,aqua:0x00ffffff,aquamarine:0x7fffd4ff,azure:0xf0ffffff,beige:0xf5f5dcff,bisque:0xffe4c4ff,black:0x000000ff,blanchedalmond:0xffebcdff,blue:0x0000ffff,blueviolet:0x8a2be2ff,brown:0xa52a2aff,burlywood:0xdeb887ff,burntsienna:0xea7e5dff,cadetblue:0x5f9ea0ff,chartreuse:0x7fff00ff,chocolate:0xd2691eff,coral:0xff7f50ff,cornflowerblue:0x6495edff,cornsilk:0xfff8dcff,crimson:0xdc143cff,cyan:0x00ffffff,darkblue:0x00008bff,darkcyan:0x008b8bff,darkgoldenrod:0xb8860bff,darkgray:0xa9a9a9ff,darkgreen:0x006400ff,darkgrey:0xa9a9a9ff,darkkhaki:0xbdb76bff,darkmagenta:0x8b008bff,darkolivegreen:0x556b2fff,darkorange:0xff8c00ff,darkorchid:0x9932ccff,darkred:0x8b0000ff,darksalmon:0xe9967aff,darkseagreen:0x8fbc8fff,darkslateblue:0x483d8bff,darkslategray:0x2f4f4fff,darkslategrey:0x2f4f4fff,darkturquoise:0x00ced1ff,darkviolet:0x9400d3ff,deeppink:0xff1493ff,deepskyblue:0x00bfffff,dimgray:0x696969ff,dimgrey:0x696969ff,dodgerblue:0x1e90ffff,firebrick:0xb22222ff,floralwhite:0xfffaf0ff,forestgreen:0x228b22ff,fuchsia:0xff00ffff,gainsboro:0xdcdcdcff,ghostwhite:0xf8f8ffff,gold:0xffd700ff,goldenrod:0xdaa520ff,gray:0x808080ff,green:0x008000ff,greenyellow:0xadff2fff,grey:0x808080ff,honeydew:0xf0fff0ff,hotpink:0xff69b4ff,indianred:0xcd5c5cff,indigo:0x4b0082ff,ivory:0xfffff0ff,khaki:0xf0e68cff,lavender:0xe6e6faff,lavenderblush:0xfff0f5ff,lawngreen:0x7cfc00ff,lemonchiffon:0xfffacdff,lightblue:0xadd8e6ff,lightcoral:0xf08080ff,lightcyan:0xe0ffffff,lightgoldenrodyellow:0xfafad2ff,lightgray:0xd3d3d3ff,lightgreen:0x90ee90ff,lightgrey:0xd3d3d3ff,lightpink:0xffb6c1ff,lightsalmon:0xffa07aff,lightseagreen:0x20b2aaff,lightskyblue:0x87cefaff,lightslategray:0x778899ff,lightslategrey:0x778899ff,lightsteelblue:0xb0c4deff,lightyellow:0xffffe0ff,lime:0x00ff00ff,limegreen:0x32cd32ff,linen:0xfaf0e6ff,magenta:0xff00ffff,maroon:0x800000ff,mediumaquamarine:0x66cdaaff,mediumblue:0x0000cdff,mediumorchid:0xba55d3ff,mediumpurple:0x9370dbff,mediumseagreen:0x3cb371ff,mediumslateblue:0x7b68eeff,mediumspringgreen:0x00fa9aff,mediumturquoise:0x48d1ccff,mediumvioletred:0xc71585ff,midnightblue:0x191970ff,mintcream:0xf5fffaff,mistyrose:0xffe4e1ff,moccasin:0xffe4b5ff,navajowhite:0xffdeadff,navy:0x000080ff,oldlace:0xfdf5e6ff,olive:0x808000ff,olivedrab:0x6b8e23ff,orange:0xffa500ff,orangered:0xff4500ff,orchid:0xda70d6ff,palegoldenrod:0xeee8aaff,palegreen:0x98fb98ff,paleturquoise:0xafeeeeff,palevioletred:0xdb7093ff,papayawhip:0xffefd5ff,peachpuff:0xffdab9ff,peru:0xcd853fff,pink:0xffc0cbff,plum:0xdda0ddff,powderblue:0xb0e0e6ff,purple:0x800080ff,rebeccapurple:0x663399ff,red:0xff0000ff,rosybrown:0xbc8f8fff,royalblue:0x4169e1ff,saddlebrown:0x8b4513ff,salmon:0xfa8072ff,sandybrown:0xf4a460ff,seagreen:0x2e8b57ff,seashell:0xfff5eeff,sienna:0xa0522dff,silver:0xc0c0c0ff,skyblue:0x87ceebff,slateblue:0x6a5acdff,slategray:0x708090ff,slategrey:0x708090ff,snow:0xfffafaff,springgreen:0x00ff7fff,steelblue:0x4682b4ff,tan:0xd2b48cff,teal:0x008080ff,thistle:0xd8bfd8ff,tomato:0xff6347ff,turquoise:0x40e0d0ff,violet:0xee82eeff,wheat:0xf5deb3ff,white:0xffffffff,whitesmoke:0xf5f5f5ff,yellow:0xffff00ff,yellowgreen:0x9acd32ff});var ColorProperties=exports.ColorProperties=(0,_core.makeShareable)(['backgroundColor','borderBottomColor','borderColor','borderLeftColor','borderRightColor','borderTopColor','borderStartColor','borderEndColor','borderBlockColor','borderBlockEndColor','borderBlockStartColor','color','outlineColor','shadowColor','textDecorationColor','tintColor','textShadowColor','overlayColor','fill','floodColor','lightingColor','stopColor','stroke']);function normalizeColor(color){'worklet';if(typeof color==='number'){if(color>>>0===color&&color>=0&&color<=0xffffffff){return color;}return null;}if(typeof color!=='string'){return null;}var match;if(match=MATCHERS.hex6.exec(color)){return Number.parseInt(match[1]+'ff',16)>>>0;}if(names[color]!==undefined){return names[color];}if(match=MATCHERS.rgb.exec(color)){return((parse255(match[1])<<24|parse255(match[2])<<16|parse255(match[3])<<8|0x000000ff)>>>0);}if(match=MATCHERS.rgba.exec(color)){if(match[6]!==undefined){return(parse255(match[6])<<24|parse255(match[7])<<16|parse255(match[8])<<8|parse1(match[9]))>>>0;}return(parse255(match[2])<<24|parse255(match[3])<<16|parse255(match[4])<<8|parse1(match[5]))>>>0;}if(match=MATCHERS.hex3.exec(color)){return Number.parseInt(match[1]+match[1]+match[2]+match[2]+match[3]+match[3]+'ff',16)>>>0;}if(match=MATCHERS.hex8.exec(color)){return Number.parseInt(match[1],16)>>>0;}if(match=MATCHERS.hex4.exec(color)){return Number.parseInt(match[1]+match[1]+match[2]+match[2]+match[3]+match[3]+match[4]+match[4],16)>>>0;}if(match=MATCHERS.hsl.exec(color)){return(hslToRgb(parse360(match[1]),parsePercentage(match[2]),parsePercentage(match[3]))|0x000000ff)>>>0;}if(match=MATCHERS.hsla.exec(color)){if(match[6]!==undefined){return(hslToRgb(parse360(match[6]),parsePercentage(match[7]),parsePercentage(match[8]))|parse1(match[9]))>>>0;}return(hslToRgb(parse360(match[2]),parsePercentage(match[3]),parsePercentage(match[4]))|parse1(match[5]))>>>0;}if(match=MATCHERS.hwb.exec(color)){return(hwbToRgb(parse360(match[1]),parsePercentage(match[2]),parsePercentage(match[3]))|0x000000ff)>>>0;}return null;}var opacity=exports.opacity=function opacity(c){'worklet';return(c>>24&255)/255;};var red=exports.red=function red(c){'worklet';return c>>16&255;};var green=exports.green=function green(c){'worklet';return c>>8&255;};var blue=exports.blue=function blue(c){'worklet';return c&255;};var rgbaColor=exports.rgbaColor=function rgbaColor(r,g,b){'worklet';var alpha=arguments.length>3&&arguments[3]!==undefined?arguments[3]:1;var safeAlpha=alpha<0.001?0:alpha;return`rgba(${r}, ${g}, ${b}, ${safeAlpha})`;};function RGBtoHSV(r,g,b){'worklet';var max=Math.max(r,g,b);var min=Math.min(r,g,b);var d=max-min;var s=max===0?0:d/max;var v=max/255;var h=0;switch(max){case min:break;case r:h=g-b+d*(g<b?6:0);h/=6*d;break;case g:h=b-r+d*2;h/=6*d;break;case b:h=r-g+d*4;h/=6*d;break;}return{h:h,s:s,v:v};}function HSVtoRGB(h,s,v){'worklet';var r,g,b;var i=Math.floor(h*6);var f=h*6-i;var p=v*(1-s);var q=v*(1-f*s);var t=v*(1-(1-f)*s);switch(i%6){case 0:r=v;g=t;b=p;break;case 1:r=q;g=v;b=p;break;case 2:r=p;g=v;b=t;break;case 3:r=p;g=q;b=v;break;case 4:r=t;g=p;b=v;break;case 5:r=v;g=p;b=q;break;}return{r:Math.round(r*255),g:Math.round(g*255),b:Math.round(b*255)};}var hsvToColor=exports.hsvToColor=function hsvToColor(h,s,v,a){'worklet';var _HSVtoRGB=HSVtoRGB(h,s,v),r=_HSVtoRGB.r,g=_HSVtoRGB.g,b=_HSVtoRGB.b;return rgbaColor(r,g,b,a);};function processColorInitially(color){'worklet';if(color===null||color===undefined||typeof color==='number'){return color;}var normalizedColor=normalizeColor(color);if(normalizedColor===null||normalizedColor===undefined){return undefined;}if(typeof normalizedColor!=='number'){return null;}normalizedColor=(normalizedColor<<24|normalizedColor>>>8)>>>0;return normalizedColor;}function isColor(value){'worklet';if(typeof value!=='string'){return false;}return processColorInitially(value)!=null;}var IS_ANDROID=(0,_PlatformChecker.isAndroid)();function processColor(color){'worklet';var normalizedColor=processColorInitially(color);if(normalizedColor===null||normalizedColor===undefined){return undefined;}if(typeof normalizedColor!=='number'){return null;}if(IS_ANDROID){normalizedColor=normalizedColor|0x0;}return normalizedColor;}function processColorsInProps(props){'worklet';for(var key in props){if(ColorProperties.includes(key)){props[key]=processColor(props[key]);}}}function convertToRGBA(color){'worklet';var processedColor=processColorInitially(color);var a=(processedColor>>>24)/255;var r=(processedColor<<8>>>24)/255;var g=(processedColor<<16>>>24)/255;var b=(processedColor<<24>>>24)/255;return[r,g,b,a];}function rgbaArrayToRGBAColor(RGBA){'worklet';var alpha=RGBA[3]<0.001?0:RGBA[3];return`rgba(${Math.round(RGBA[0]*255)}, ${Math.round(RGBA[1]*255)}, ${Math.round(RGBA[2]*255)}, ${alpha})`;}function toLinearSpace(RGBA){'worklet';var gamma=arguments.length>1&&arguments[1]!==undefined?arguments[1]:2.2;var res=[];for(var i=0;i<3;++i){res.push(Math.pow(RGBA[i],gamma));}res.push(RGBA[3]);return res;}function toGammaSpace(RGBA){'worklet';var gamma=arguments.length>1&&arguments[1]!==undefined?arguments[1]:2.2;var res=[];for(var i=0;i<3;++i){res.push(Math.pow(RGBA[i],1/gamma));}res.push(RGBA[3]);return res;}","map":{"version":3,"names":["Object","defineProperty","exports","value","ColorProperties","RGBtoHSV","blue","convertToRGBA","hsvToColor","green","isColor","normalizeColor","opacity","processColor","processColorsInProps","red","rgbaArrayToRGBAColor","rgbaColor","toGammaSpace","toLinearSpace","_core","require","_PlatformChecker","NUMBER","PERCENTAGE","call","_len","arguments","length","args","Array","_key","join","callWithSlashSeparator","_len2","_key2","slice","commaSeparatedCall","_len3","_key3","MATCHERS","rgb","RegExp","rgba","hsl","hsla","hwb","hex3","hex4","hex6","hex8","hue2rgb","p","q","t","hslToRgb","h","s","l","r","g","b","Math","round","hwbToRgb","w","gray","parse255","str","int","Number","parseInt","parse360","parseFloat","parse1","num","parsePercentage","names","makeShareable","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blueviolet","brown","burlywood","burntsienna","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color","match","exec","undefined","c","alpha","safeAlpha","max","min","d","v","HSVtoRGB","i","floor","f","a","_HSVtoRGB","processColorInitially","normalizedColor","IS_ANDROID","isAndroid","props","key","includes","processedColor","RGBA","gamma","res","push","pow"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/react-native-reanimated/src/Colors.ts"],"sourcesContent":["'use strict';\n/**\n * Copied from: react-native/Libraries/StyleSheet/normalizeColor.js\n * react-native/Libraries/StyleSheet/processColor.js\n * https://github.com/wcandillon/react-native-redash/blob/master/src/Colors.ts\n */\n\n/* eslint no-bitwise: 0 */\nimport type { StyleProps } from './commonTypes';\nimport { makeShareable } from './core';\nimport { isAndroid } from './PlatformChecker';\n\ninterface RGB {\n  r: number;\n  g: number;\n  b: number;\n}\n\ninterface HSV {\n  h: number;\n  s: number;\n  v: number;\n}\n\nconst NUMBER: string = '[-+]?\\\\d*\\\\.?\\\\d+';\nconst PERCENTAGE = NUMBER + '%';\n\nfunction call(...args: (RegExp | string)[]) {\n  return '\\\\(\\\\s*(' + args.join(')\\\\s*,?\\\\s*(') + ')\\\\s*\\\\)';\n}\n\nfunction callWithSlashSeparator(...args: (RegExp | string)[]) {\n  return (\n    '\\\\(\\\\s*(' +\n    args.slice(0, args.length - 1).join(')\\\\s*,?\\\\s*(') +\n    ')\\\\s*/\\\\s*(' +\n    args[args.length - 1] +\n    ')\\\\s*\\\\)'\n  );\n}\n\nfunction commaSeparatedCall(...args: (RegExp | string)[]) {\n  return '\\\\(\\\\s*(' + args.join(')\\\\s*,\\\\s*(') + ')\\\\s*\\\\)';\n}\n\nconst MATCHERS = {\n  rgb: new RegExp('rgb' + call(NUMBER, NUMBER, NUMBER)),\n  rgba: new RegExp(\n    'rgba(' +\n      commaSeparatedCall(NUMBER, NUMBER, NUMBER, NUMBER) +\n      '|' +\n      callWithSlashSeparator(NUMBER, NUMBER, NUMBER, NUMBER) +\n      ')'\n  ),\n  hsl: new RegExp('hsl' + call(NUMBER, PERCENTAGE, PERCENTAGE)),\n  hsla: new RegExp(\n    'hsla(' +\n      commaSeparatedCall(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER) +\n      '|' +\n      callWithSlashSeparator(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER) +\n      ')'\n  ),\n  hwb: new RegExp('hwb' + call(NUMBER, PERCENTAGE, PERCENTAGE)),\n  hex3: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n  hex4: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n  hex6: /^#([0-9a-fA-F]{6})$/,\n  hex8: /^#([0-9a-fA-F]{8})$/,\n};\n\nfunction hue2rgb(p: number, q: number, t: number): number {\n  'worklet';\n  if (t < 0) {\n    t += 1;\n  }\n  if (t > 1) {\n    t -= 1;\n  }\n  if (t < 1 / 6) {\n    return p + (q - p) * 6 * t;\n  }\n  if (t < 1 / 2) {\n    return q;\n  }\n  if (t < 2 / 3) {\n    return p + (q - p) * (2 / 3 - t) * 6;\n  }\n  return p;\n}\n\nfunction hslToRgb(h: number, s: number, l: number): number {\n  'worklet';\n  const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n  const p = 2 * l - q;\n  const r = hue2rgb(p, q, h + 1 / 3);\n  const g = hue2rgb(p, q, h);\n  const b = hue2rgb(p, q, h - 1 / 3);\n\n  return (\n    (Math.round(r * 255) << 24) |\n    (Math.round(g * 255) << 16) |\n    (Math.round(b * 255) << 8)\n  );\n}\n\nfunction hwbToRgb(h: number, w: number, b: number): number {\n  'worklet';\n  if (w + b >= 1) {\n    const gray = Math.round((w * 255) / (w + b));\n\n    return (gray << 24) | (gray << 16) | (gray << 8);\n  }\n\n  const red = hue2rgb(0, 1, h + 1 / 3) * (1 - w - b) + w;\n  const green = hue2rgb(0, 1, h) * (1 - w - b) + w;\n  const blue = hue2rgb(0, 1, h - 1 / 3) * (1 - w - b) + w;\n\n  return (\n    (Math.round(red * 255) << 24) |\n    (Math.round(green * 255) << 16) |\n    (Math.round(blue * 255) << 8)\n  );\n}\n\nfunction parse255(str: string): number {\n  'worklet';\n  const int = Number.parseInt(str, 10);\n  if (int < 0) {\n    return 0;\n  }\n  if (int > 255) {\n    return 255;\n  }\n  return int;\n}\n\nfunction parse360(str: string): number {\n  'worklet';\n  const int = Number.parseFloat(str);\n  return (((int % 360) + 360) % 360) / 360;\n}\n\nfunction parse1(str: string): number {\n  'worklet';\n  const num = Number.parseFloat(str);\n  if (num < 0) {\n    return 0;\n  }\n  if (num > 1) {\n    return 255;\n  }\n  return Math.round(num * 255);\n}\n\nfunction parsePercentage(str: string): number {\n  'worklet';\n  // parseFloat conveniently ignores the final %\n  const int = Number.parseFloat(str);\n  if (int < 0) {\n    return 0;\n  }\n  if (int > 100) {\n    return 1;\n  }\n  return int / 100;\n}\n\nconst names: Record<string, number> = makeShareable({\n  transparent: 0x00000000,\n\n  /* spell-checker: disable */\n  // http://www.w3.org/TR/css3-color/#svg-color\n  aliceblue: 0xf0f8ffff,\n  antiquewhite: 0xfaebd7ff,\n  aqua: 0x00ffffff,\n  aquamarine: 0x7fffd4ff,\n  azure: 0xf0ffffff,\n  beige: 0xf5f5dcff,\n  bisque: 0xffe4c4ff,\n  black: 0x000000ff,\n  blanchedalmond: 0xffebcdff,\n  blue: 0x0000ffff,\n  blueviolet: 0x8a2be2ff,\n  brown: 0xa52a2aff,\n  burlywood: 0xdeb887ff,\n  burntsienna: 0xea7e5dff,\n  cadetblue: 0x5f9ea0ff,\n  chartreuse: 0x7fff00ff,\n  chocolate: 0xd2691eff,\n  coral: 0xff7f50ff,\n  cornflowerblue: 0x6495edff,\n  cornsilk: 0xfff8dcff,\n  crimson: 0xdc143cff,\n  cyan: 0x00ffffff,\n  darkblue: 0x00008bff,\n  darkcyan: 0x008b8bff,\n  darkgoldenrod: 0xb8860bff,\n  darkgray: 0xa9a9a9ff,\n  darkgreen: 0x006400ff,\n  darkgrey: 0xa9a9a9ff,\n  darkkhaki: 0xbdb76bff,\n  darkmagenta: 0x8b008bff,\n  darkolivegreen: 0x556b2fff,\n  darkorange: 0xff8c00ff,\n  darkorchid: 0x9932ccff,\n  darkred: 0x8b0000ff,\n  darksalmon: 0xe9967aff,\n  darkseagreen: 0x8fbc8fff,\n  darkslateblue: 0x483d8bff,\n  darkslategray: 0x2f4f4fff,\n  darkslategrey: 0x2f4f4fff,\n  darkturquoise: 0x00ced1ff,\n  darkviolet: 0x9400d3ff,\n  deeppink: 0xff1493ff,\n  deepskyblue: 0x00bfffff,\n  dimgray: 0x696969ff,\n  dimgrey: 0x696969ff,\n  dodgerblue: 0x1e90ffff,\n  firebrick: 0xb22222ff,\n  floralwhite: 0xfffaf0ff,\n  forestgreen: 0x228b22ff,\n  fuchsia: 0xff00ffff,\n  gainsboro: 0xdcdcdcff,\n  ghostwhite: 0xf8f8ffff,\n  gold: 0xffd700ff,\n  goldenrod: 0xdaa520ff,\n  gray: 0x808080ff,\n  green: 0x008000ff,\n  greenyellow: 0xadff2fff,\n  grey: 0x808080ff,\n  honeydew: 0xf0fff0ff,\n  hotpink: 0xff69b4ff,\n  indianred: 0xcd5c5cff,\n  indigo: 0x4b0082ff,\n  ivory: 0xfffff0ff,\n  khaki: 0xf0e68cff,\n  lavender: 0xe6e6faff,\n  lavenderblush: 0xfff0f5ff,\n  lawngreen: 0x7cfc00ff,\n  lemonchiffon: 0xfffacdff,\n  lightblue: 0xadd8e6ff,\n  lightcoral: 0xf08080ff,\n  lightcyan: 0xe0ffffff,\n  lightgoldenrodyellow: 0xfafad2ff,\n  lightgray: 0xd3d3d3ff,\n  lightgreen: 0x90ee90ff,\n  lightgrey: 0xd3d3d3ff,\n  lightpink: 0xffb6c1ff,\n  lightsalmon: 0xffa07aff,\n  lightseagreen: 0x20b2aaff,\n  lightskyblue: 0x87cefaff,\n  lightslategray: 0x778899ff,\n  lightslategrey: 0x778899ff,\n  lightsteelblue: 0xb0c4deff,\n  lightyellow: 0xffffe0ff,\n  lime: 0x00ff00ff,\n  limegreen: 0x32cd32ff,\n  linen: 0xfaf0e6ff,\n  magenta: 0xff00ffff,\n  maroon: 0x800000ff,\n  mediumaquamarine: 0x66cdaaff,\n  mediumblue: 0x0000cdff,\n  mediumorchid: 0xba55d3ff,\n  mediumpurple: 0x9370dbff,\n  mediumseagreen: 0x3cb371ff,\n  mediumslateblue: 0x7b68eeff,\n  mediumspringgreen: 0x00fa9aff,\n  mediumturquoise: 0x48d1ccff,\n  mediumvioletred: 0xc71585ff,\n  midnightblue: 0x191970ff,\n  mintcream: 0xf5fffaff,\n  mistyrose: 0xffe4e1ff,\n  moccasin: 0xffe4b5ff,\n  navajowhite: 0xffdeadff,\n  navy: 0x000080ff,\n  oldlace: 0xfdf5e6ff,\n  olive: 0x808000ff,\n  olivedrab: 0x6b8e23ff,\n  orange: 0xffa500ff,\n  orangered: 0xff4500ff,\n  orchid: 0xda70d6ff,\n  palegoldenrod: 0xeee8aaff,\n  palegreen: 0x98fb98ff,\n  paleturquoise: 0xafeeeeff,\n  palevioletred: 0xdb7093ff,\n  papayawhip: 0xffefd5ff,\n  peachpuff: 0xffdab9ff,\n  peru: 0xcd853fff,\n  pink: 0xffc0cbff,\n  plum: 0xdda0ddff,\n  powderblue: 0xb0e0e6ff,\n  purple: 0x800080ff,\n  rebeccapurple: 0x663399ff,\n  red: 0xff0000ff,\n  rosybrown: 0xbc8f8fff,\n  royalblue: 0x4169e1ff,\n  saddlebrown: 0x8b4513ff,\n  salmon: 0xfa8072ff,\n  sandybrown: 0xf4a460ff,\n  seagreen: 0x2e8b57ff,\n  seashell: 0xfff5eeff,\n  sienna: 0xa0522dff,\n  silver: 0xc0c0c0ff,\n  skyblue: 0x87ceebff,\n  slateblue: 0x6a5acdff,\n  slategray: 0x708090ff,\n  slategrey: 0x708090ff,\n  snow: 0xfffafaff,\n  springgreen: 0x00ff7fff,\n  steelblue: 0x4682b4ff,\n  tan: 0xd2b48cff,\n  teal: 0x008080ff,\n  thistle: 0xd8bfd8ff,\n  tomato: 0xff6347ff,\n  turquoise: 0x40e0d0ff,\n  violet: 0xee82eeff,\n  wheat: 0xf5deb3ff,\n  white: 0xffffffff,\n  whitesmoke: 0xf5f5f5ff,\n  yellow: 0xffff00ff,\n  yellowgreen: 0x9acd32ff,\n  /* spell-checker: enable */\n});\n\n// copied from react-native/Libraries/Components/View/ReactNativeStyleAttributes\nexport const ColorProperties = makeShareable([\n  'backgroundColor',\n  'borderBottomColor',\n  'borderColor',\n  'borderLeftColor',\n  'borderRightColor',\n  'borderTopColor',\n  'borderStartColor',\n  'borderEndColor',\n  'borderBlockColor',\n  'borderBlockEndColor',\n  'borderBlockStartColor',\n  'color',\n  'outlineColor',\n  'shadowColor',\n  'textDecorationColor',\n  'tintColor',\n  'textShadowColor',\n  'overlayColor',\n  // SVG color properties\n  'fill',\n  'floodColor',\n  'lightingColor',\n  'stopColor',\n  'stroke',\n]);\n\n// // ts-prune-ignore-next Exported for the purpose of tests only\nexport function normalizeColor(color: unknown): number | null {\n  'worklet';\n\n  if (typeof color === 'number') {\n    if (color >>> 0 === color && color >= 0 && color <= 0xffffffff) {\n      return color;\n    }\n    return null;\n  }\n\n  if (typeof color !== 'string') {\n    return null;\n  }\n\n  let match: RegExpExecArray | null | undefined;\n\n  // Ordered based on occurrences on Facebook codebase\n  if ((match = MATCHERS.hex6.exec(color))) {\n    return Number.parseInt(match[1] + 'ff', 16) >>> 0;\n  }\n\n  if (names[color] !== undefined) {\n    return names[color];\n  }\n\n  if ((match = MATCHERS.rgb.exec(color))) {\n    return (\n      // b\n      ((parse255(match[1]) << 24) | // r\n        (parse255(match[2]) << 16) | // g\n        (parse255(match[3]) << 8) |\n        0x000000ff) >>> // a\n      0\n    );\n  }\n\n  if ((match = MATCHERS.rgba.exec(color))) {\n    // rgba(R G B / A) notation\n    if (match[6] !== undefined) {\n      return (\n        ((parse255(match[6]) << 24) | // r\n          (parse255(match[7]) << 16) | // g\n          (parse255(match[8]) << 8) | // b\n          parse1(match[9])) >>> // a\n        0\n      );\n    }\n\n    // rgba(R, G, B, A) notation\n    return (\n      ((parse255(match[2]) << 24) | // r\n        (parse255(match[3]) << 16) | // g\n        (parse255(match[4]) << 8) | // b\n        parse1(match[5])) >>> // a\n      0\n    );\n  }\n\n  if ((match = MATCHERS.hex3.exec(color))) {\n    return (\n      Number.parseInt(\n        match[1] +\n          match[1] + // r\n          match[2] +\n          match[2] + // g\n          match[3] +\n          match[3] + // b\n          'ff', // a\n        16\n      ) >>> 0\n    );\n  }\n\n  // https://drafts.csswg.org/css-color-4/#hex-notation\n  if ((match = MATCHERS.hex8.exec(color))) {\n    return Number.parseInt(match[1], 16) >>> 0;\n  }\n\n  if ((match = MATCHERS.hex4.exec(color))) {\n    return (\n      Number.parseInt(\n        match[1] +\n          match[1] + // r\n          match[2] +\n          match[2] + // g\n          match[3] +\n          match[3] + // b\n          match[4] +\n          match[4], // a\n        16\n      ) >>> 0\n    );\n  }\n\n  if ((match = MATCHERS.hsl.exec(color))) {\n    return (\n      (hslToRgb(\n        parse360(match[1]), // h\n        parsePercentage(match[2]), // s\n        parsePercentage(match[3]) // l\n      ) |\n        0x000000ff) >>> // a\n      0\n    );\n  }\n\n  if ((match = MATCHERS.hsla.exec(color))) {\n    // hsla(H S L / A) notation\n    if (match[6] !== undefined) {\n      return (\n        (hslToRgb(\n          parse360(match[6]), // h\n          parsePercentage(match[7]), // s\n          parsePercentage(match[8]) // l\n        ) |\n          parse1(match[9])) >>> // a\n        0\n      );\n    }\n\n    // hsla(H, S, L, A) notation\n    return (\n      (hslToRgb(\n        parse360(match[2]), // h\n        parsePercentage(match[3]), // s\n        parsePercentage(match[4]) // l\n      ) |\n        parse1(match[5])) >>> // a\n      0\n    );\n  }\n\n  if ((match = MATCHERS.hwb.exec(color))) {\n    return (\n      (hwbToRgb(\n        parse360(match[1]), // h\n        parsePercentage(match[2]), // w\n        parsePercentage(match[3]) // b\n      ) |\n        0x000000ff) >>> // a\n      0\n    );\n  }\n\n  return null;\n}\n\nexport const opacity = (c: number): number => {\n  'worklet';\n  return ((c >> 24) & 255) / 255;\n};\n\nexport const red = (c: number): number => {\n  'worklet';\n  return (c >> 16) & 255;\n};\n\nexport const green = (c: number): number => {\n  'worklet';\n  return (c >> 8) & 255;\n};\n\nexport const blue = (c: number): number => {\n  'worklet';\n  return c & 255;\n};\n\nexport const rgbaColor = (\n  r: number,\n  g: number,\n  b: number,\n  alpha = 1\n): number | string => {\n  'worklet';\n  // Replace tiny values like 1.234e-11 with 0:\n  const safeAlpha = alpha < 0.001 ? 0 : alpha;\n  return `rgba(${r}, ${g}, ${b}, ${safeAlpha})`;\n};\n\n/**\n * @param r - Red value (0-255)\n * @param g - Green value (0-255)\n * @param b - Blue value (0-255)\n * @returns `{h: hue (0-1), s: saturation (0-1), v: value (0-1)}`\n */\nexport function RGBtoHSV(r: number, g: number, b: number): HSV {\n  'worklet';\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const d = max - min;\n  const s = max === 0 ? 0 : d / max;\n  const v = max / 255;\n\n  let h = 0;\n\n  switch (max) {\n    case min:\n      break;\n    case r:\n      h = g - b + d * (g < b ? 6 : 0);\n      h /= 6 * d;\n      break;\n    case g:\n      h = b - r + d * 2;\n      h /= 6 * d;\n      break;\n    case b:\n      h = r - g + d * 4;\n      h /= 6 * d;\n      break;\n  }\n\n  return { h, s, v };\n}\n\n/**\n * @param h - Hue (0-1)\n * @param s - Saturation (0-1)\n * @param v - Value (0-1)\n * @returns `{r: red (0-255), g: green (0-255), b: blue (0-255)}`\n */\nfunction HSVtoRGB(h: number, s: number, v: number): RGB {\n  'worklet';\n  let r, g, b;\n\n  const i = Math.floor(h * 6);\n  const f = h * 6 - i;\n  const p = v * (1 - s);\n  const q = v * (1 - f * s);\n  const t = v * (1 - (1 - f) * s);\n  switch ((i % 6) as 0 | 1 | 2 | 3 | 4 | 5) {\n    case 0:\n      [r, g, b] = [v, t, p];\n      break;\n    case 1:\n      [r, g, b] = [q, v, p];\n      break;\n    case 2:\n      [r, g, b] = [p, v, t];\n      break;\n    case 3:\n      [r, g, b] = [p, q, v];\n      break;\n    case 4:\n      [r, g, b] = [t, p, v];\n      break;\n    case 5:\n      [r, g, b] = [v, p, q];\n      break;\n  }\n  return {\n    r: Math.round(r * 255),\n    g: Math.round(g * 255),\n    b: Math.round(b * 255),\n  };\n}\n\nexport const hsvToColor = (\n  h: number,\n  s: number,\n  v: number,\n  a: number\n): number | string => {\n  'worklet';\n  const { r, g, b } = HSVtoRGB(h, s, v);\n  return rgbaColor(r, g, b, a);\n};\n\nfunction processColorInitially(color: unknown): number | null | undefined {\n  'worklet';\n  if (color === null || color === undefined || typeof color === 'number') {\n    return color;\n  }\n\n  let normalizedColor = normalizeColor(color);\n\n  if (normalizedColor === null || normalizedColor === undefined) {\n    return undefined;\n  }\n\n  if (typeof normalizedColor !== 'number') {\n    return null;\n  }\n\n  normalizedColor = ((normalizedColor << 24) | (normalizedColor >>> 8)) >>> 0; // alpha rgb\n  return normalizedColor;\n}\n\nexport function isColor(value: unknown): boolean {\n  'worklet';\n  if (typeof value !== 'string') {\n    return false;\n  }\n  return processColorInitially(value) != null;\n}\n\nconst IS_ANDROID = isAndroid();\n\nexport function processColor(color: unknown): number | null | undefined {\n  'worklet';\n  let normalizedColor = processColorInitially(color);\n  if (normalizedColor === null || normalizedColor === undefined) {\n    return undefined;\n  }\n\n  if (typeof normalizedColor !== 'number') {\n    return null;\n  }\n\n  if (IS_ANDROID) {\n    // Android use 32 bit *signed* integer to represent the color\n    // We utilize the fact that bitwise operations in JS also operates on\n    // signed 32 bit integers, so that we can use those to convert from\n    // *unsigned* to *signed* 32bit int that way.\n    normalizedColor = normalizedColor | 0x0;\n  }\n\n  return normalizedColor;\n}\n\nexport function processColorsInProps(props: StyleProps) {\n  'worklet';\n  for (const key in props) {\n    if (ColorProperties.includes(key)) {\n      props[key] = processColor(props[key]);\n    }\n  }\n}\n\nexport type ParsedColorArray = [number, number, number, number];\n\nexport function convertToRGBA(color: unknown): ParsedColorArray {\n  'worklet';\n  const processedColor = processColorInitially(color)!; // alpha rgb;\n  const a = (processedColor >>> 24) / 255;\n  const r = ((processedColor << 8) >>> 24) / 255;\n  const g = ((processedColor << 16) >>> 24) / 255;\n  const b = ((processedColor << 24) >>> 24) / 255;\n  return [r, g, b, a];\n}\n\nexport function rgbaArrayToRGBAColor(RGBA: ParsedColorArray): string {\n  'worklet';\n  const alpha = RGBA[3] < 0.001 ? 0 : RGBA[3];\n  return `rgba(${Math.round(RGBA[0] * 255)}, ${Math.round(\n    RGBA[1] * 255\n  )}, ${Math.round(RGBA[2] * 255)}, ${alpha})`;\n}\n\nexport function toLinearSpace(\n  RGBA: ParsedColorArray,\n  gamma = 2.2\n): ParsedColorArray {\n  'worklet';\n  const res = [];\n  for (let i = 0; i < 3; ++i) {\n    res.push(Math.pow(RGBA[i], gamma));\n  }\n  res.push(RGBA[3]);\n  return res as ParsedColorArray;\n}\n\nexport function toGammaSpace(\n  RGBA: ParsedColorArray,\n  gamma = 2.2\n): ParsedColorArray {\n  'worklet';\n  const res = [];\n  for (let i = 0; i < 3; ++i) {\n    res.push(Math.pow(RGBA[i], 1 / gamma));\n  }\n  res.push(RGBA[3]);\n  return res as ParsedColorArray;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}