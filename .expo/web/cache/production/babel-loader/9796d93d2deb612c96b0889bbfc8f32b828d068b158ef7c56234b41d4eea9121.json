{"ast":null,"code":"'use strict';Object.defineProperty(exports,\"__esModule\",{value:true});exports.isAndroid=isAndroid;exports.isChromeDebugger=isChromeDebugger;exports.isFabric=isFabric;exports.isJest=isJest;exports.isWeb=isWeb;exports.isWindowAvailable=isWindowAvailable;exports.shouldBeUseWeb=shouldBeUseWeb;var _reactNative=require(\"react-native\");function isJest(){return!!process.env.JEST_WORKER_ID;}function isChromeDebugger(){return(!global.nativeCallSyncHook||!!global.__REMOTEDEV__)&&!global.RN$Bridgeless;}function isWeb(){return _reactNative.Platform.OS==='web';}function isAndroid(){return _reactNative.Platform.OS==='android';}function isWindows(){return _reactNative.Platform.OS==='windows';}function shouldBeUseWeb(){return isJest()||isChromeDebugger()||isWeb()||isWindows();}function isFabric(){return!!global._IS_FABRIC;}function isWindowAvailable(){return typeof window!=='undefined';}","map":{"version":3,"names":["Object","defineProperty","exports","value","isAndroid","isChromeDebugger","isFabric","isJest","isWeb","isWindowAvailable","shouldBeUseWeb","_reactNative","require","process","env","JEST_WORKER_ID","global","nativeCallSyncHook","__REMOTEDEV__","RN$Bridgeless","Platform","OS","isWindows","_IS_FABRIC","window"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/react-native-reanimated/src/PlatformChecker.ts"],"sourcesContent":["'use strict';\nimport { Platform } from 'react-native';\n\n// This type is necessary since some libraries tend to do a lib check\n// and this file causes type errors on `global` access.\ntype localGlobal = typeof global & Record<string, unknown>;\n\nexport function isJest(): boolean {\n  return !!process.env.JEST_WORKER_ID;\n}\n\n// `isChromeDebugger` also returns true in Jest environment, so `isJest()` check should always be performed first\nexport function isChromeDebugger(): boolean {\n  return (\n    (!(global as localGlobal).nativeCallSyncHook ||\n      !!(global as localGlobal).__REMOTEDEV__) &&\n    !(global as localGlobal).RN$Bridgeless\n  );\n}\n\nexport function isWeb(): boolean {\n  return Platform.OS === 'web';\n}\n\nexport function isAndroid(): boolean {\n  return Platform.OS === 'android';\n}\n\nfunction isWindows(): boolean {\n  return Platform.OS === 'windows';\n}\n\nexport function shouldBeUseWeb() {\n  return isJest() || isChromeDebugger() || isWeb() || isWindows();\n}\n\nexport function isFabric() {\n  return !!(global as localGlobal)._IS_FABRIC;\n}\n\nexport function isWindowAvailable() {\n  // the window object is unavailable when building the server portion of a site that uses SSG\n  // this function shouldn't be used to conditionally render components\n  // https://www.joshwcomeau.com/react/the-perils-of-rehydration/\n  // @ts-ignore Fallback if `window` is undefined.\n  return typeof window !== 'undefined';\n}\n"],"mappings":"AAAA,YAAY,CAAAA,MAAA,CAAAC,cAAA,CAAAC,OAAA,eAAAC,KAAA,QAAAD,OAAA,CAAAE,SAAA,CAAAA,SAAA,CAAAF,OAAA,CAAAG,gBAAA,CAAAA,gBAAA,CAAAH,OAAA,CAAAI,QAAA,CAAAA,QAAA,CAAAJ,OAAA,CAAAK,MAAA,CAAAA,MAAA,CAAAL,OAAA,CAAAM,KAAA,CAAAA,KAAA,CAAAN,OAAA,CAAAO,iBAAA,CAAAA,iBAAA,CAAAP,OAAA,CAAAQ,cAAA,CAAAA,cAAA,CACZ,IAAAC,YAAA,CAAAC,OAAA,iBAMO,QAAS,CAAAL,MAAMA,CAAA,CAAY,CAChC,MAAO,CAAC,CAACM,OAAO,CAACC,GAAG,CAACC,cAAc,CACrC,CAGO,QAAS,CAAAV,gBAAgBA,CAAA,CAAY,CAC1C,MACE,CAAC,CAAEW,MAAM,CAAiBC,kBAAkB,EAC1C,CAAC,CAAED,MAAM,CAAiBE,aAAa,GACzC,CAAEF,MAAM,CAAiBG,aAAa,CAE1C,CAEO,QAAS,CAAAX,KAAKA,CAAA,CAAY,CAC/B,MAAO,CAAAY,qBAAQ,CAACC,EAAE,GAAK,KAAK,CAC9B,CAEO,QAAS,CAAAjB,SAASA,CAAA,CAAY,CACnC,MAAO,CAAAgB,qBAAQ,CAACC,EAAE,GAAK,SAAS,CAClC,CAEA,QAAS,CAAAC,SAASA,CAAA,CAAY,CAC5B,MAAO,CAAAF,qBAAQ,CAACC,EAAE,GAAK,SAAS,CAClC,CAEO,QAAS,CAAAX,cAAcA,CAAA,CAAG,CAC/B,MAAO,CAAAH,MAAM,CAAC,CAAC,EAAIF,gBAAgB,CAAC,CAAC,EAAIG,KAAK,CAAC,CAAC,EAAIc,SAAS,CAAC,CAAC,CACjE,CAEO,QAAS,CAAAhB,QAAQA,CAAA,CAAG,CACzB,MAAO,CAAC,CAAEU,MAAM,CAAiBO,UAAU,CAC7C,CAEO,QAAS,CAAAd,iBAAiBA,CAAA,CAAG,CAKlC,MAAO,OAAO,CAAAe,MAAM,GAAK,WAAW,CACtC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}