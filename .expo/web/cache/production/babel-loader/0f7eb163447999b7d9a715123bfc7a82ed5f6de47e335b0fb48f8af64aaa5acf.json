{"ast":null,"code":"'use strict';Object.defineProperty(exports,\"__esModule\",{value:true});exports.useAnimatedScrollHandler=useAnimatedScrollHandler;var _useHandler2=require(\"./useHandler.js\");var _useEvent=require(\"./useEvent.js\");function useAnimatedScrollHandler(handlers,dependencies){var scrollHandlers=typeof handlers==='function'?{onScroll:handlers}:handlers;var _useHandler=(0,_useHandler2.useHandler)(scrollHandlers,dependencies),context=_useHandler.context,doDependenciesDiffer=_useHandler.doDependenciesDiffer;var subscribeForEvents=['onScroll'];if(scrollHandlers.onBeginDrag!==undefined){subscribeForEvents.push('onScrollBeginDrag');}if(scrollHandlers.onEndDrag!==undefined){subscribeForEvents.push('onScrollEndDrag');}if(scrollHandlers.onMomentumBegin!==undefined){subscribeForEvents.push('onMomentumScrollBegin');}if(scrollHandlers.onMomentumEnd!==undefined){subscribeForEvents.push('onMomentumScrollEnd');}return(0,_useEvent.useEvent)(function(event){'worklet';var onScroll=scrollHandlers.onScroll,onBeginDrag=scrollHandlers.onBeginDrag,onEndDrag=scrollHandlers.onEndDrag,onMomentumBegin=scrollHandlers.onMomentumBegin,onMomentumEnd=scrollHandlers.onMomentumEnd;if(onScroll&&event.eventName.endsWith('onScroll')){onScroll(event,context);}else if(onBeginDrag&&event.eventName.endsWith('onScrollBeginDrag')){onBeginDrag(event,context);}else if(onEndDrag&&event.eventName.endsWith('onScrollEndDrag')){onEndDrag(event,context);}else if(onMomentumBegin&&event.eventName.endsWith('onMomentumScrollBegin')){onMomentumBegin(event,context);}else if(onMomentumEnd&&event.eventName.endsWith('onMomentumScrollEnd')){onMomentumEnd(event,context);}},subscribeForEvents,doDependenciesDiffer);}","map":{"version":3,"names":["Object","defineProperty","exports","value","useAnimatedScrollHandler","_useHandler2","require","_useEvent","handlers","dependencies","scrollHandlers","onScroll","_useHandler","useHandler","context","doDependenciesDiffer","subscribeForEvents","onBeginDrag","undefined","push","onEndDrag","onMomentumBegin","onMomentumEnd","useEvent","event","eventName","endsWith"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/react-native-reanimated/src/hook/useAnimatedScrollHandler.ts"],"sourcesContent":["'use strict';\nimport type {\n  DependencyList,\n  RNNativeScrollEvent,\n  ReanimatedScrollEvent,\n} from './commonTypes';\nimport { useHandler } from './useHandler';\nimport type { EventHandlerInternal, EventHandlerProcessed } from './useEvent';\nimport { useEvent } from './useEvent';\n\nexport type ScrollHandler<\n  Context extends Record<string, unknown> = Record<string, unknown>,\n> = (event: ReanimatedScrollEvent, context: Context) => void;\nexport interface ScrollHandlers<Context extends Record<string, unknown>> {\n  onScroll?: ScrollHandler<Context>;\n  onBeginDrag?: ScrollHandler<Context>;\n  onEndDrag?: ScrollHandler<Context>;\n  onMomentumBegin?: ScrollHandler<Context>;\n  onMomentumEnd?: ScrollHandler<Context>;\n}\n\nexport type ScrollHandlerProcessed<\n  Context extends Record<string, unknown> = Record<string, unknown>,\n> = EventHandlerProcessed<RNNativeScrollEvent, Context>;\n\nexport type ScrollHandlerInternal = EventHandlerInternal<RNNativeScrollEvent>;\n\n/**\n * Lets you run callbacks on ScrollView events. Supports `onScroll`,\n * `onBeginDrag`, `onEndDrag`, `onMomentumBegin`, and `onMomentumEnd` events.\n *\n * These callbacks are automatically workletized and ran on the UI thread.\n *\n * @param handlers - An object containing event handlers.\n * @param dependencies - An optional array of dependencies. Only relevant when\n *   using Reanimated without the Babel plugin on the Web.\n * @returns An object you need to pass to `onScroll` prop on the\n *   `Animated.ScrollView` component.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/scroll/useAnimatedScrollHandler\n */\n// @ts-expect-error This overload is required by our API.\nexport function useAnimatedScrollHandler<\n  Context extends Record<string, unknown>,\n>(\n  handlers: ScrollHandler<Context> | ScrollHandlers<Context>,\n  dependencies?: DependencyList\n): ScrollHandlerProcessed<Context>;\n\nexport function useAnimatedScrollHandler<\n  Context extends Record<string, unknown>,\n>(\n  handlers: ScrollHandlers<Context> | ScrollHandler<Context>,\n  dependencies?: DependencyList\n) {\n  // case when handlers is a function\n  const scrollHandlers: ScrollHandlers<Context> =\n    typeof handlers === 'function' ? { onScroll: handlers } : handlers;\n  const { context, doDependenciesDiffer } = useHandler<\n    RNNativeScrollEvent,\n    Context\n  >(scrollHandlers as Record<string, ScrollHandler<Context>>, dependencies);\n\n  // build event subscription array\n  const subscribeForEvents = ['onScroll'];\n  if (scrollHandlers.onBeginDrag !== undefined) {\n    subscribeForEvents.push('onScrollBeginDrag');\n  }\n  if (scrollHandlers.onEndDrag !== undefined) {\n    subscribeForEvents.push('onScrollEndDrag');\n  }\n  if (scrollHandlers.onMomentumBegin !== undefined) {\n    subscribeForEvents.push('onMomentumScrollBegin');\n  }\n  if (scrollHandlers.onMomentumEnd !== undefined) {\n    subscribeForEvents.push('onMomentumScrollEnd');\n  }\n\n  return useEvent<RNNativeScrollEvent, Context>(\n    (event: ReanimatedScrollEvent) => {\n      'worklet';\n      const {\n        onScroll,\n        onBeginDrag,\n        onEndDrag,\n        onMomentumBegin,\n        onMomentumEnd,\n      } = scrollHandlers;\n      if (onScroll && event.eventName.endsWith('onScroll')) {\n        onScroll(event, context);\n      } else if (onBeginDrag && event.eventName.endsWith('onScrollBeginDrag')) {\n        onBeginDrag(event, context);\n      } else if (onEndDrag && event.eventName.endsWith('onScrollEndDrag')) {\n        onEndDrag(event, context);\n      } else if (\n        onMomentumBegin &&\n        event.eventName.endsWith('onMomentumScrollBegin')\n      ) {\n        onMomentumBegin(event, context);\n      } else if (\n        onMomentumEnd &&\n        event.eventName.endsWith('onMomentumScrollEnd')\n      ) {\n        onMomentumEnd(event, context);\n      }\n    },\n    subscribeForEvents,\n    doDependenciesDiffer\n    // Read https://github.com/software-mansion/react-native-reanimated/pull/5056\n    // for more information about this cast.\n  ) as unknown as ScrollHandlerInternal;\n}\n"],"mappings":"AAAA,YAAY,CAAAA,MAAA,CAAAC,cAAA,CAAAC,OAAA,eAAAC,KAAA,QAAAD,OAAA,CAAAE,wBAAA,CAAAA,wBAAA,CAMZ,IAAAC,YAAA,CAAAC,OAAA,oBAEA,IAAAC,SAAA,CAAAD,OAAA,kBAwCO,QAAS,CAAAF,wBAAwBA,CAGtCI,QAA0D,CAC1DC,YAA6B,CAC7B,CAEA,GAAM,CAAAC,cAAuC,CAC3C,MAAO,CAAAF,QAAQ,GAAK,UAAU,CAAG,CAAEG,QAAQ,CAAEH,QAAS,CAAC,CAAGA,QAAQ,CACpE,IAAAI,WAAA,CAA0C,GAAAC,uBAAU,EAGlDH,cAAc,CAA4CD,YAAY,CAAC,CAHjEK,OAAO,CAAAF,WAAA,CAAPE,OAAO,CAAEC,oBAAA,CAAAH,WAAA,CAAAG,oBAAA,CAMjB,GAAM,CAAAC,kBAAkB,CAAG,CAAC,UAAU,CAAC,CACvC,GAAIN,cAAc,CAACO,WAAW,GAAKC,SAAS,CAAE,CAC5CF,kBAAkB,CAACG,IAAI,CAAC,mBAAmB,CAAC,CAC9C,CACA,GAAIT,cAAc,CAACU,SAAS,GAAKF,SAAS,CAAE,CAC1CF,kBAAkB,CAACG,IAAI,CAAC,iBAAiB,CAAC,CAC5C,CACA,GAAIT,cAAc,CAACW,eAAe,GAAKH,SAAS,CAAE,CAChDF,kBAAkB,CAACG,IAAI,CAAC,uBAAuB,CAAC,CAClD,CACA,GAAIT,cAAc,CAACY,aAAa,GAAKJ,SAAS,CAAE,CAC9CF,kBAAkB,CAACG,IAAI,CAAC,qBAAqB,CAAC,CAChD,CAEA,MAAO,GAAAI,kBAAQ,EACZ,SAAAC,KAA4B,CAAK,CAChC,SAAS,CACT,GACE,CAAAb,QAAQ,CAKND,cAAc,CALhBC,QAAQ,CACRM,WAAW,CAITP,cAAc,CAJhBO,WAAW,CACXG,SAAS,CAGPV,cAAc,CAHhBU,SAAS,CACTC,eAAe,CAEbX,cAAc,CAFhBW,eAAe,CACfC,aAAA,CACEZ,cAAc,CADhBY,aAAA,CAEF,GAAIX,QAAQ,EAAIa,KAAK,CAACC,SAAS,CAACC,QAAQ,CAAC,UAAU,CAAC,CAAE,CACpDf,QAAQ,CAACa,KAAK,CAAEV,OAAO,CAAC,CAC1B,CAAC,IAAM,IAAIG,WAAW,EAAIO,KAAK,CAACC,SAAS,CAACC,QAAQ,CAAC,mBAAmB,CAAC,CAAE,CACvET,WAAW,CAACO,KAAK,CAAEV,OAAO,CAAC,CAC7B,CAAC,IAAM,IAAIM,SAAS,EAAII,KAAK,CAACC,SAAS,CAACC,QAAQ,CAAC,iBAAiB,CAAC,CAAE,CACnEN,SAAS,CAACI,KAAK,CAAEV,OAAO,CAAC,CAC3B,CAAC,IAAM,IACLO,eAAe,EACfG,KAAK,CAACC,SAAS,CAACC,QAAQ,CAAC,uBAAuB,CAAC,CACjD,CACAL,eAAe,CAACG,KAAK,CAAEV,OAAO,CAAC,CACjC,CAAC,IAAM,IACLQ,aAAa,EACbE,KAAK,CAACC,SAAS,CAACC,QAAQ,CAAC,qBAAqB,CAAC,CAC/C,CACAJ,aAAa,CAACE,KAAK,CAAEV,OAAO,CAAC,CAC/B,CACF,CAAC,CACDE,kBAAkB,CAClBD,oBAGF,CAAC,CACH","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}