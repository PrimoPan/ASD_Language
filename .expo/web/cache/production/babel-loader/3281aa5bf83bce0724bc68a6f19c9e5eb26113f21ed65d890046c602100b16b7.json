{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;require(\"react-native-gesture-handler\");var _react=_interopRequireDefault(require(\"react\"));var _native=require(\"@react-navigation/native\");var _nativeStack=require(\"@react-navigation/native-stack\");var _Opening=_interopRequireDefault(require(\"./SourceCode/Opening/Opening\"));var _Login=_interopRequireDefault(require(\"./SourceCode/Login/Login\"));var _index=_interopRequireDefault(require(\"./SourceCode/Createchildren/index.jsx\"));var _DisplayStoreData=_interopRequireDefault(require(\"./SourceCode/DisplayStoreData\"));var _GptTest=_interopRequireDefault(require(\"./SourceCode/Components/GptTest\"));var _ImageGenerator=_interopRequireDefault(require(\"./SourceCode/Components/ImageGenerator\"));var _LearningMode=_interopRequireDefault(require(\"./SourceCode/LearningMode/LearningMode\"));var _EnvironmentChoose=_interopRequireDefault(require(\"./SourceCode/EnvironmentChoose\"));var _GptLearning=_interopRequireDefault(require(\"./SourceCode/GptLearning\"));var _store=_interopRequireDefault(require(\"./SourceCode/store/store\"));var _jsxRuntime=require(\"react/jsx-runtime\");var Stack=(0,_nativeStack.createNativeStackNavigator)();var App=function App(){var _useStore=(0,_store.default)(),user=_useStore.user;return(0,_jsxRuntime.jsx)(_native.NavigationContainer,{children:(0,_jsxRuntime.jsxs)(Stack.Navigator,{initialRouteName:user!=null&&user.username?\"Login\":\"Opening\",screenOptions:{headerShown:false},children:[(0,_jsxRuntime.jsx)(Stack.Screen,{name:\"Opening\",component:_Opening.default}),(0,_jsxRuntime.jsx)(Stack.Screen,{name:\"Login\",component:_Login.default}),(0,_jsxRuntime.jsx)(Stack.Screen,{name:\"CreateChildren\",component:_index.default}),(0,_jsxRuntime.jsx)(Stack.Screen,{name:\"GptTest\",component:_GptTest.default}),(0,_jsxRuntime.jsx)(Stack.Screen,{name:\"ImageGenerator\",component:_ImageGenerator.default}),(0,_jsxRuntime.jsx)(Stack.Screen,{name:\"LearningMode\",component:_LearningMode.default}),(0,_jsxRuntime.jsx)(Stack.Screen,{name:\"EnvironmentChoose\",component:_EnvironmentChoose.default}),(0,_jsxRuntime.jsx)(Stack.Screen,{name:\"GptLearning\",component:_GptLearning.default}),(0,_jsxRuntime.jsx)(Stack.Screen,{name:\"DisplayStoreData\",component:_DisplayStoreData.default})]})});};var _default=exports.default=App;","map":{"version":3,"names":["require","_react","_interopRequireDefault","_native","_nativeStack","_Opening","_Login","_index","_DisplayStoreData","_GptTest","_ImageGenerator","_LearningMode","_EnvironmentChoose","_GptLearning","_store","_jsxRuntime","Stack","createNativeStackNavigator","App","_useStore","useStore","user","jsx","NavigationContainer","children","jsxs","Navigator","initialRouteName","username","screenOptions","headerShown","Screen","name","component","Opening","Login","CreateChildren","GptTest","ImageGenerator","LearningMode","EnvironmentChoose","GptLearning","DisplayStoreData","_default","exports","default"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/App.tsx"],"sourcesContent":["import 'react-native-gesture-handler'; // 确保在其他任何导入之前导入这个\n\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { View, Text } from 'react-native';\nimport Opening from './SourceCode/Opening/Opening';\nimport Login from './SourceCode/Login/Login';\nimport CreateChildren from './SourceCode/Createchildren/index.jsx';  // 引入 CreateChildren 组件\nimport DisplayStoreData from \"./SourceCode/DisplayStoreData\";\nimport GptTest from \"./SourceCode/Components/GptTest\";\nimport ImageGenerator from \"./SourceCode/Components/ImageGenerator\"\nimport LearningMode from \"./SourceCode/LearningMode/LearningMode\";\nimport EnvironmentChoose from \"./SourceCode/EnvironmentChoose\";\nimport GptLearning from \"./SourceCode/GptLearning\";\nimport useStore from './SourceCode/store/store'; // 引入 zustand store\n\nconst Stack = createNativeStackNavigator();\n\nconst App = () => {\n    const { user } = useStore(); // 从zustand获取user状态\n\n    return (\n        <NavigationContainer>\n            <Stack.Navigator initialRouteName={user?.username ? \"Login\" : \"Opening\"} screenOptions={{ headerShown: false }}>\n                <Stack.Screen name=\"Opening\" component={Opening} />\n                <Stack.Screen name=\"Login\" component={Login} />\n                <Stack.Screen name=\"CreateChildren\" component={CreateChildren} />\n                <Stack.Screen name=\"GptTest\" component={GptTest}/>\n                <Stack.Screen name=\"ImageGenerator\" component={ImageGenerator}/>\n                <Stack.Screen name='LearningMode' component={LearningMode}/>\n                <Stack.Screen name='EnvironmentChoose' component={EnvironmentChoose}/>\n                <Stack.Screen name='GptLearning' component={GptLearning}/>\n                <Stack.Screen name='DisplayStoreData' component={DisplayStoreData}/>\n            </Stack.Navigator>\n        </NavigationContainer>\n    );\n};\n\nexport default App;\n"],"mappings":"mKAAAA,OAAA,iCAEA,IAAAC,MAAA,CAAAC,sBAAA,CAAAF,OAAA,WACA,IAAAG,OAAA,CAAAH,OAAA,6BACA,IAAAI,YAAA,CAAAJ,OAAA,mCAEA,IAAAK,QAAA,CAAAH,sBAAA,CAAAF,OAAA,kCACA,IAAAM,MAAA,CAAAJ,sBAAA,CAAAF,OAAA,8BACA,IAAAO,MAAA,CAAAL,sBAAA,CAAAF,OAAA,2CACA,IAAAQ,iBAAA,CAAAN,sBAAA,CAAAF,OAAA,mCACA,IAAAS,QAAA,CAAAP,sBAAA,CAAAF,OAAA,qCACA,IAAAU,eAAA,CAAAR,sBAAA,CAAAF,OAAA,4CACA,IAAAW,aAAA,CAAAT,sBAAA,CAAAF,OAAA,4CACA,IAAAY,kBAAA,CAAAV,sBAAA,CAAAF,OAAA,oCACA,IAAAa,YAAA,CAAAX,sBAAA,CAAAF,OAAA,8BACA,IAAAc,MAAA,CAAAZ,sBAAA,CAAAF,OAAA,8BAAgD,IAAAe,WAAA,CAAAf,OAAA,sBAEhD,GAAM,CAAAgB,KAAK,CAAG,GAAAC,uCAA0B,EAAC,CAAC,CAE1C,GAAM,CAAAC,GAAG,CAAG,QAAN,CAAAA,GAAGA,CAAA,CAAS,CACd,IAAAC,SAAA,CAAiB,GAAAC,cAAQ,EAAC,CAAC,CAAnBC,IAAI,CAAAF,SAAA,CAAJE,IAAI,CAEZ,MACI,GAAAN,WAAA,CAAAO,GAAA,EAACnB,OAAA,CAAAoB,mBAAmB,EAAAC,QAAA,CAChB,GAAAT,WAAA,CAAAU,IAAA,EAACT,KAAK,CAACU,SAAS,EAACC,gBAAgB,CAAEN,IAAI,QAAJA,IAAI,CAAEO,QAAQ,CAAG,OAAO,CAAG,SAAU,CAACC,aAAa,CAAE,CAAEC,WAAW,CAAE,KAAM,CAAE,CAAAN,QAAA,EAC3G,GAAAT,WAAA,CAAAO,GAAA,EAACN,KAAK,CAACe,MAAM,EAACC,IAAI,CAAC,SAAS,CAACC,SAAS,CAAEC,gBAAQ,CAAE,CAAC,CACnD,GAAAnB,WAAA,CAAAO,GAAA,EAACN,KAAK,CAACe,MAAM,EAACC,IAAI,CAAC,OAAO,CAACC,SAAS,CAAEE,cAAM,CAAE,CAAC,CAC/C,GAAApB,WAAA,CAAAO,GAAA,EAACN,KAAK,CAACe,MAAM,EAACC,IAAI,CAAC,gBAAgB,CAACC,SAAS,CAAEG,cAAe,CAAE,CAAC,CACjE,GAAArB,WAAA,CAAAO,GAAA,EAACN,KAAK,CAACe,MAAM,EAACC,IAAI,CAAC,SAAS,CAACC,SAAS,CAAEI,gBAAQ,CAAC,CAAC,CAClD,GAAAtB,WAAA,CAAAO,GAAA,EAACN,KAAK,CAACe,MAAM,EAACC,IAAI,CAAC,gBAAgB,CAACC,SAAS,CAAEK,uBAAe,CAAC,CAAC,CAChE,GAAAvB,WAAA,CAAAO,GAAA,EAACN,KAAK,CAACe,MAAM,EAACC,IAAI,CAAC,cAAc,CAACC,SAAS,CAAEM,qBAAa,CAAC,CAAC,CAC5D,GAAAxB,WAAA,CAAAO,GAAA,EAACN,KAAK,CAACe,MAAM,EAACC,IAAI,CAAC,mBAAmB,CAACC,SAAS,CAAEO,0BAAkB,CAAC,CAAC,CACtE,GAAAzB,WAAA,CAAAO,GAAA,EAACN,KAAK,CAACe,MAAM,EAACC,IAAI,CAAC,aAAa,CAACC,SAAS,CAAEQ,oBAAY,CAAC,CAAC,CAC1D,GAAA1B,WAAA,CAAAO,GAAA,EAACN,KAAK,CAACe,MAAM,EAACC,IAAI,CAAC,kBAAkB,CAACC,SAAS,CAAES,yBAAiB,CAAC,CAAC,EACvD,CAAC,CACD,CAAC,CAE9B,CAAC,CAAC,IAAAC,QAAA,CAAAC,OAAA,CAAAC,OAAA,CAEa3B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}