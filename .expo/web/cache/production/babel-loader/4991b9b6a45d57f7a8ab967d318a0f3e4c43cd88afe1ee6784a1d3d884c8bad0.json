{"ast":null,"code":"'use strict';var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _PlatformChecker=require(\"../PlatformChecker.js\");var _commonTypes=require(\"../commonTypes.js\");var _mockedRequestAnimationFrame=require(\"../mockedRequestAnimationFrame.js\");var _index=require(\"../logger/index.js\");var _errors=require(\"../errors.js\");var requestAnimationFrameImpl=(0,_PlatformChecker.isJest)()||!globalThis.requestAnimationFrame?_mockedRequestAnimationFrame.mockedRequestAnimationFrame:globalThis.requestAnimationFrame;var JSReanimated=exports.default=function(){function JSReanimated(){var _this=this;(0,_classCallCheck2.default)(this,JSReanimated);this.nextSensorId=0;this.sensors=new Map();this.platform=undefined;this.getSensorCallback=function(sensor,sensorType,eventHandler){switch(sensorType){case _commonTypes.SensorType.ACCELEROMETER:case _commonTypes.SensorType.GRAVITY:return function(){var x=sensor.x,y=sensor.y,z=sensor.z;if(_this.platform===Platform.WEB_ANDROID){var _ref=[-x,-y,-z];x=_ref[0];y=_ref[1];z=_ref[2];}eventHandler({x:x,y:y,z:z,interfaceOrientation:0});};case _commonTypes.SensorType.GYROSCOPE:case _commonTypes.SensorType.MAGNETIC_FIELD:return function(){var x=sensor.x,y=sensor.y,z=sensor.z;eventHandler({x:x,y:y,z:z,interfaceOrientation:0});};case _commonTypes.SensorType.ROTATION:return function(){var _sensor$quaternion=(0,_slicedToArray2.default)(sensor.quaternion,4),qw=_sensor$quaternion[0],qx=_sensor$quaternion[1],qy=_sensor$quaternion[2],qz=_sensor$quaternion[3];if(_this.platform===Platform.WEB_ANDROID){var _ref2=[qz,-qy];qy=_ref2[0];qz=_ref2[1];}var yaw=-Math.atan2(2.0*(qy*qz+qw*qx),qw*qw-qx*qx-qy*qy+qz*qz);var pitch=Math.sin(-2.0*(qx*qz-qw*qy));var roll=-Math.atan2(2.0*(qx*qy+qw*qz),qw*qw+qx*qx-qy*qy-qz*qz);eventHandler({qw:qw,qx:qx,qy:qy,qz:qz,yaw:yaw,pitch:pitch,roll:roll,interfaceOrientation:0});};}};}return(0,_createClass2.default)(JSReanimated,[{key:\"makeShareableClone\",value:function makeShareableClone(){throw new _errors.ReanimatedError('makeShareableClone should never be called in JSReanimated.');}},{key:\"scheduleOnUI\",value:function scheduleOnUI(worklet){requestAnimationFrameImpl(worklet);}},{key:\"createWorkletRuntime\",value:function createWorkletRuntime(_name,_initializer){throw new _errors.ReanimatedError('createWorkletRuntime is not available in JSReanimated.');}},{key:\"scheduleOnRuntime\",value:function scheduleOnRuntime(){throw new _errors.ReanimatedError('scheduleOnRuntime is not available in JSReanimated.');}},{key:\"registerEventHandler\",value:function registerEventHandler(_eventHandler,_eventName,_emitterReactTag){throw new _errors.ReanimatedError('registerEventHandler is not available in JSReanimated.');}},{key:\"unregisterEventHandler\",value:function unregisterEventHandler(_){throw new _errors.ReanimatedError('unregisterEventHandler is not available in JSReanimated.');}},{key:\"enableLayoutAnimations\",value:function enableLayoutAnimations(){if((0,_PlatformChecker.isWeb)()){_index.logger.warn('Layout Animations are not supported on web yet.');}else if((0,_PlatformChecker.isJest)()){_index.logger.warn('Layout Animations are no-ops when using Jest.');}else if((0,_PlatformChecker.isChromeDebugger)()){_index.logger.warn('Layout Animations are no-ops when using Chrome Debugger.');}else{_index.logger.warn('Layout Animations are not supported on this configuration.');}}},{key:\"configureLayoutAnimationBatch\",value:function configureLayoutAnimationBatch(){}},{key:\"setShouldAnimateExitingForTag\",value:function setShouldAnimateExitingForTag(){}},{key:\"registerSensor\",value:function registerSensor(sensorType,interval,_iosReferenceFrame,eventHandler){if(!(0,_PlatformChecker.isWindowAvailable)()){return-1;}if(this.platform===undefined){this.detectPlatform();}if(!(this.getSensorName(sensorType)in window)){_index.logger.warn('Sensor is not available.'+((0,_PlatformChecker.isWeb)()&&location.protocol!=='https:'?' Make sure you use secure origin with `npx expo start --web --https`.':'')+(this.platform===Platform.WEB_IOS?' For iOS web, you will also have to also grant permission in the browser: https://dev.to/li/how-to-requestpermission-for-devicemotion-and-deviceorientation-events-in-ios-13-46g2.':''));return-1;}if(this.platform===undefined){this.detectPlatform();}var sensor=this.initializeSensor(sensorType,interval);sensor.addEventListener('reading',this.getSensorCallback(sensor,sensorType,eventHandler));sensor.start();this.sensors.set(this.nextSensorId,sensor);return this.nextSensorId++;}},{key:\"unregisterSensor\",value:function unregisterSensor(id){var sensor=this.sensors.get(id);if(sensor!==undefined){sensor.stop();this.sensors.delete(id);}}},{key:\"subscribeForKeyboardEvents\",value:function subscribeForKeyboardEvents(_){if((0,_PlatformChecker.isWeb)()){_index.logger.warn('useAnimatedKeyboard is not available on web yet.');}else if((0,_PlatformChecker.isJest)()){_index.logger.warn('useAnimatedKeyboard is not available when using Jest.');}else if((0,_PlatformChecker.isChromeDebugger)()){_index.logger.warn('useAnimatedKeyboard is not available when using Chrome Debugger.');}else{_index.logger.warn('useAnimatedKeyboard is not available on this configuration.');}return-1;}},{key:\"unsubscribeFromKeyboardEvents\",value:function unsubscribeFromKeyboardEvents(_){}},{key:\"initializeSensor\",value:function initializeSensor(sensorType,interval){var config=interval<=0?{referenceFrame:'device'}:{frequency:1000/interval};switch(sensorType){case _commonTypes.SensorType.ACCELEROMETER:return new window.Accelerometer(config);case _commonTypes.SensorType.GYROSCOPE:return new window.Gyroscope(config);case _commonTypes.SensorType.GRAVITY:return new window.GravitySensor(config);case _commonTypes.SensorType.MAGNETIC_FIELD:return new window.Magnetometer(config);case _commonTypes.SensorType.ROTATION:return new window.AbsoluteOrientationSensor(config);}}},{key:\"getSensorName\",value:function getSensorName(sensorType){switch(sensorType){case _commonTypes.SensorType.ACCELEROMETER:return'Accelerometer';case _commonTypes.SensorType.GRAVITY:return'GravitySensor';case _commonTypes.SensorType.GYROSCOPE:return'Gyroscope';case _commonTypes.SensorType.MAGNETIC_FIELD:return'Magnetometer';case _commonTypes.SensorType.ROTATION:return'AbsoluteOrientationSensor';}}},{key:\"detectPlatform\",value:function detectPlatform(){var userAgent=navigator.userAgent||navigator.vendor||window.opera;if(userAgent===undefined){this.platform=Platform.UNKNOWN;}else if(/iPad|iPhone|iPod/.test(userAgent)){this.platform=Platform.WEB_IOS;}else if(/android/i.test(userAgent)){this.platform=Platform.WEB_ANDROID;}else{this.platform=Platform.WEB;}}},{key:\"getViewProp\",value:function getViewProp(_viewTag,_propName,_component,_callback){throw new _errors.ReanimatedError('getViewProp is not available in JSReanimated.');}},{key:\"configureProps\",value:function configureProps(){throw new _errors.ReanimatedError('configureProps is not available in JSReanimated.');}},{key:\"executeOnUIRuntimeSync\",value:function executeOnUIRuntimeSync(_shareable){throw new _errors.ReanimatedError('`executeOnUIRuntimeSync` is not available in JSReanimated.');}}]);}();var Platform=function(Platform){Platform[\"WEB_IOS\"]=\"web iOS\";Platform[\"WEB_ANDROID\"]=\"web Android\";Platform[\"WEB\"]=\"web\";Platform[\"UNKNOWN\"]=\"unknown\";return Platform;}(Platform||{});","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_slicedToArray2","_classCallCheck2","_createClass2","_PlatformChecker","_commonTypes","_mockedRequestAnimationFrame","_index","_errors","requestAnimationFrameImpl","isJest","globalThis","requestAnimationFrame","mockedRequestAnimationFrame","JSReanimated","_this","nextSensorId","sensors","Map","platform","undefined","getSensorCallback","sensor","sensorType","eventHandler","SensorType","ACCELEROMETER","GRAVITY","x","y","z","Platform","WEB_ANDROID","_ref","interfaceOrientation","GYROSCOPE","MAGNETIC_FIELD","ROTATION","_sensor$quaternion","quaternion","qw","qx","qy","qz","_ref2","yaw","Math","atan2","pitch","sin","roll","key","makeShareableClone","ReanimatedError","scheduleOnUI","worklet","createWorkletRuntime","_name","_initializer","scheduleOnRuntime","registerEventHandler","_eventHandler","_eventName","_emitterReactTag","unregisterEventHandler","_","enableLayoutAnimations","isWeb","logger","warn","isChromeDebugger","configureLayoutAnimationBatch","setShouldAnimateExitingForTag","registerSensor","interval","_iosReferenceFrame","isWindowAvailable","detectPlatform","getSensorName","window","location","protocol","WEB_IOS","initializeSensor","addEventListener","start","set","unregisterSensor","id","get","stop","delete","subscribeForKeyboardEvents","unsubscribeFromKeyboardEvents","config","referenceFrame","frequency","Accelerometer","Gyroscope","GravitySensor","Magnetometer","AbsoluteOrientationSensor","userAgent","navigator","vendor","opera","UNKNOWN","test","WEB","getViewProp","_viewTag","_propName","_component","_callback","configureProps","executeOnUIRuntimeSync","_shareable"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/react-native-reanimated/src/js-reanimated/JSReanimated.ts"],"sourcesContent":["'use strict';\nimport {\n  isChromeDebugger,\n  isJest,\n  isWeb,\n  isWindowAvailable,\n} from '../PlatformChecker';\nimport type { ShareableRef, Value3D, ValueRotation } from '../commonTypes';\nimport { SensorType } from '../commonTypes';\nimport type { WebSensor } from './WebSensor';\nimport { mockedRequestAnimationFrame } from '../mockedRequestAnimationFrame';\nimport type { WorkletRuntime } from '../runtimes';\nimport { logger } from '../logger';\nimport { ReanimatedError } from '../errors';\n\n// In Node.js environments (like when static rendering with Expo Router)\n// requestAnimationFrame is unavailable, so we use our mock.\n// It also has to be mocked for Jest purposes (see `initializeUIRuntime`).\nconst requestAnimationFrameImpl =\n  isJest() || !globalThis.requestAnimationFrame\n    ? mockedRequestAnimationFrame\n    : globalThis.requestAnimationFrame;\n\nexport default class JSReanimated {\n  nextSensorId = 0;\n  sensors = new Map<number, WebSensor>();\n  platform?: Platform = undefined;\n\n  makeShareableClone<T>(): ShareableRef<T> {\n    throw new ReanimatedError(\n      'makeShareableClone should never be called in JSReanimated.'\n    );\n  }\n\n  scheduleOnUI<T>(worklet: ShareableRef<T>) {\n    // @ts-ignore web implementation has still not been updated after the rewrite, this will be addressed once the web implementation updates are ready\n    requestAnimationFrameImpl(worklet);\n  }\n\n  createWorkletRuntime(\n    _name: string,\n    _initializer: ShareableRef<() => void>\n  ): WorkletRuntime {\n    throw new ReanimatedError(\n      'createWorkletRuntime is not available in JSReanimated.'\n    );\n  }\n\n  scheduleOnRuntime() {\n    throw new ReanimatedError(\n      'scheduleOnRuntime is not available in JSReanimated.'\n    );\n  }\n\n  registerEventHandler<T>(\n    _eventHandler: ShareableRef<T>,\n    _eventName: string,\n    _emitterReactTag: number\n  ): number {\n    throw new ReanimatedError(\n      'registerEventHandler is not available in JSReanimated.'\n    );\n  }\n\n  unregisterEventHandler(_: number): void {\n    throw new ReanimatedError(\n      'unregisterEventHandler is not available in JSReanimated.'\n    );\n  }\n\n  enableLayoutAnimations() {\n    if (isWeb()) {\n      logger.warn('Layout Animations are not supported on web yet.');\n    } else if (isJest()) {\n      logger.warn('Layout Animations are no-ops when using Jest.');\n    } else if (isChromeDebugger()) {\n      logger.warn('Layout Animations are no-ops when using Chrome Debugger.');\n    } else {\n      logger.warn('Layout Animations are not supported on this configuration.');\n    }\n  }\n\n  configureLayoutAnimationBatch() {\n    // no-op\n  }\n\n  setShouldAnimateExitingForTag() {\n    // no-op\n  }\n\n  registerSensor(\n    sensorType: SensorType,\n    interval: number,\n    _iosReferenceFrame: number,\n    eventHandler: ShareableRef<(data: Value3D | ValueRotation) => void>\n  ): number {\n    if (!isWindowAvailable()) {\n      // the window object is unavailable when building the server portion of a site that uses SSG\n      // this check is here to ensure that the server build won't fail\n      return -1;\n    }\n\n    if (this.platform === undefined) {\n      this.detectPlatform();\n    }\n\n    if (!(this.getSensorName(sensorType) in window)) {\n      // https://w3c.github.io/sensors/#secure-context\n      logger.warn(\n        'Sensor is not available.' +\n          (isWeb() && location.protocol !== 'https:'\n            ? ' Make sure you use secure origin with `npx expo start --web --https`.'\n            : '') +\n          (this.platform === Platform.WEB_IOS\n            ? ' For iOS web, you will also have to also grant permission in the browser: https://dev.to/li/how-to-requestpermission-for-devicemotion-and-deviceorientation-events-in-ios-13-46g2.'\n            : '')\n      );\n      return -1;\n    }\n\n    if (this.platform === undefined) {\n      this.detectPlatform();\n    }\n\n    const sensor: WebSensor = this.initializeSensor(sensorType, interval);\n    sensor.addEventListener(\n      'reading',\n      this.getSensorCallback(sensor, sensorType, eventHandler)\n    );\n    sensor.start();\n\n    this.sensors.set(this.nextSensorId, sensor);\n    return this.nextSensorId++;\n  }\n\n  getSensorCallback = (\n    sensor: WebSensor,\n    sensorType: SensorType,\n    eventHandler: ShareableRef<(data: Value3D | ValueRotation) => void>\n  ) => {\n    switch (sensorType) {\n      case SensorType.ACCELEROMETER:\n      case SensorType.GRAVITY:\n        return () => {\n          let { x, y, z } = sensor;\n\n          // Web Android sensors have a different coordinate system than iOS\n          if (this.platform === Platform.WEB_ANDROID) {\n            [x, y, z] = [-x, -y, -z];\n          }\n          // TODO TYPESCRIPT on web ShareableRef is the value itself so we call it directly\n          (eventHandler as any)({ x, y, z, interfaceOrientation: 0 });\n        };\n      case SensorType.GYROSCOPE:\n      case SensorType.MAGNETIC_FIELD:\n        return () => {\n          const { x, y, z } = sensor;\n          // TODO TYPESCRIPT on web ShareableRef is the value itself so we call it directly\n          (eventHandler as any)({ x, y, z, interfaceOrientation: 0 });\n        };\n      case SensorType.ROTATION:\n        return () => {\n          let [qw, qx, qy, qz] = sensor.quaternion;\n\n          // Android sensors have a different coordinate system than iOS\n          if (this.platform === Platform.WEB_ANDROID) {\n            [qy, qz] = [qz, -qy];\n          }\n\n          // reference: https://stackoverflow.com/questions/5782658/extracting-yaw-from-a-quaternion\n          const yaw = -Math.atan2(\n            2.0 * (qy * qz + qw * qx),\n            qw * qw - qx * qx - qy * qy + qz * qz\n          );\n          const pitch = Math.sin(-2.0 * (qx * qz - qw * qy));\n          const roll = -Math.atan2(\n            2.0 * (qx * qy + qw * qz),\n            qw * qw + qx * qx - qy * qy - qz * qz\n          );\n          // TODO TYPESCRIPT on web ShareableRef is the value itself so we call it directly\n          (eventHandler as any)({\n            qw,\n            qx,\n            qy,\n            qz,\n            yaw,\n            pitch,\n            roll,\n            interfaceOrientation: 0,\n          });\n        };\n    }\n  };\n\n  unregisterSensor(id: number): void {\n    const sensor: WebSensor | undefined = this.sensors.get(id);\n    if (sensor !== undefined) {\n      sensor.stop();\n      this.sensors.delete(id);\n    }\n  }\n\n  subscribeForKeyboardEvents(_: ShareableRef<number>): number {\n    if (isWeb()) {\n      logger.warn('useAnimatedKeyboard is not available on web yet.');\n    } else if (isJest()) {\n      logger.warn('useAnimatedKeyboard is not available when using Jest.');\n    } else if (isChromeDebugger()) {\n      logger.warn(\n        'useAnimatedKeyboard is not available when using Chrome Debugger.'\n      );\n    } else {\n      logger.warn(\n        'useAnimatedKeyboard is not available on this configuration.'\n      );\n    }\n    return -1;\n  }\n\n  unsubscribeFromKeyboardEvents(_: number): void {\n    // noop\n  }\n\n  initializeSensor(sensorType: SensorType, interval: number): WebSensor {\n    const config =\n      interval <= 0\n        ? { referenceFrame: 'device' }\n        : { frequency: 1000 / interval };\n    switch (sensorType) {\n      case SensorType.ACCELEROMETER:\n        return new window.Accelerometer(config);\n      case SensorType.GYROSCOPE:\n        return new window.Gyroscope(config);\n      case SensorType.GRAVITY:\n        return new window.GravitySensor(config);\n      case SensorType.MAGNETIC_FIELD:\n        return new window.Magnetometer(config);\n      case SensorType.ROTATION:\n        return new window.AbsoluteOrientationSensor(config);\n    }\n  }\n\n  getSensorName(sensorType: SensorType): string {\n    switch (sensorType) {\n      case SensorType.ACCELEROMETER:\n        return 'Accelerometer';\n      case SensorType.GRAVITY:\n        return 'GravitySensor';\n      case SensorType.GYROSCOPE:\n        return 'Gyroscope';\n      case SensorType.MAGNETIC_FIELD:\n        return 'Magnetometer';\n      case SensorType.ROTATION:\n        return 'AbsoluteOrientationSensor';\n    }\n  }\n\n  detectPlatform() {\n    const userAgent = navigator.userAgent || navigator.vendor || window.opera;\n    if (userAgent === undefined) {\n      this.platform = Platform.UNKNOWN;\n    } else if (/iPad|iPhone|iPod/.test(userAgent)) {\n      this.platform = Platform.WEB_IOS;\n    } else if (/android/i.test(userAgent)) {\n      this.platform = Platform.WEB_ANDROID;\n    } else {\n      this.platform = Platform.WEB;\n    }\n  }\n\n  getViewProp<T>(\n    _viewTag: number,\n    _propName: string,\n    _component?: React.Component,\n    _callback?: (result: T) => void\n  ): Promise<T> {\n    throw new ReanimatedError('getViewProp is not available in JSReanimated.');\n  }\n\n  configureProps() {\n    throw new ReanimatedError(\n      'configureProps is not available in JSReanimated.'\n    );\n  }\n\n  executeOnUIRuntimeSync<T, R>(_shareable: ShareableRef<T>): R {\n    throw new ReanimatedError(\n      '`executeOnUIRuntimeSync` is not available in JSReanimated.'\n    );\n  }\n}\n\nenum Platform {\n  WEB_IOS = 'web iOS',\n  WEB_ANDROID = 'web Android',\n  WEB = 'web',\n  UNKNOWN = 'unknown',\n}\n\ndeclare global {\n  interface Navigator {\n    userAgent: string;\n    vendor: string;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}