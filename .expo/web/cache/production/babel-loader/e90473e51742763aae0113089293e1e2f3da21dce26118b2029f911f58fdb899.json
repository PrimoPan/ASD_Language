{"ast":null,"code":"'use strict';Object.defineProperty(exports,\"__esModule\",{value:true});exports.adaptViewConfig=adaptViewConfig;exports.addWhitelistedNativeProps=addWhitelistedNativeProps;exports.addWhitelistedUIProps=addWhitelistedUIProps;exports.configureProps=configureProps;exports.configureReanimatedLogger=configureReanimatedLogger;var _propsAllowlists=require(\"./propsAllowlists.js\");var _core=require(\"./core.js\");var _errors=require(\"./errors.js\");var _index=require(\"./logger/index.js\");var _PlatformChecker=require(\"./PlatformChecker.js\");var SHOULD_BE_USE_WEB=(0,_PlatformChecker.shouldBeUseWeb)();function assertNoOverlapInLists(){for(var key in _propsAllowlists.PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST){if(key in _propsAllowlists.PropsAllowlists.UI_THREAD_PROPS_WHITELIST){throw new _errors.ReanimatedError(`Property \\`${key}\\` was whitelisted both as UI and native prop. Please remove it from one of the lists.`);}}}function configureProps(){assertNoOverlapInLists();(0,_core.jsiConfigureProps)(Object.keys(_propsAllowlists.PropsAllowlists.UI_THREAD_PROPS_WHITELIST),Object.keys(_propsAllowlists.PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST));}function addWhitelistedNativeProps(props){var oldSize=Object.keys(_propsAllowlists.PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST).length;_propsAllowlists.PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST=Object.assign({},_propsAllowlists.PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST,props);if(oldSize!==Object.keys(_propsAllowlists.PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST).length){configureProps();}}function addWhitelistedUIProps(props){var oldSize=Object.keys(_propsAllowlists.PropsAllowlists.UI_THREAD_PROPS_WHITELIST).length;_propsAllowlists.PropsAllowlists.UI_THREAD_PROPS_WHITELIST=Object.assign({},_propsAllowlists.PropsAllowlists.UI_THREAD_PROPS_WHITELIST,props);if(oldSize!==Object.keys(_propsAllowlists.PropsAllowlists.UI_THREAD_PROPS_WHITELIST).length){configureProps();}}function configureReanimatedLogger(config){(0,_index.updateLoggerConfig)(config);if(!SHOULD_BE_USE_WEB){(0,_core.executeOnUIRuntimeSync)(_index.updateLoggerConfig)(config);}}var PROCESSED_VIEW_NAMES=new Set();function adaptViewConfig(viewConfig){var viewName=viewConfig.uiViewClassName;var props=viewConfig.validAttributes;if(!PROCESSED_VIEW_NAMES.has(viewName)){var propsToAdd={};Object.keys(props).forEach(function(key){if(!(key in _propsAllowlists.PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST)&&!(key in _propsAllowlists.PropsAllowlists.UI_THREAD_PROPS_WHITELIST)){propsToAdd[key]=true;}});addWhitelistedUIProps(propsToAdd);PROCESSED_VIEW_NAMES.add(viewName);}}configureProps();","map":{"version":3,"names":["Object","defineProperty","exports","value","adaptViewConfig","addWhitelistedNativeProps","addWhitelistedUIProps","configureProps","configureReanimatedLogger","_propsAllowlists","require","_core","_errors","_index","_PlatformChecker","SHOULD_BE_USE_WEB","shouldBeUseWeb","assertNoOverlapInLists","key","PropsAllowlists","NATIVE_THREAD_PROPS_WHITELIST","UI_THREAD_PROPS_WHITELIST","ReanimatedError","jsiConfigureProps","keys","props","oldSize","length","assign","config","updateLoggerConfig","executeOnUIRuntimeSync","PROCESSED_VIEW_NAMES","Set","viewConfig","viewName","uiViewClassName","validAttributes","has","propsToAdd","forEach","add"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/react-native-reanimated/src/ConfigHelper.ts"],"sourcesContent":["'use strict';\nimport { PropsAllowlists } from './propsAllowlists';\nimport { executeOnUIRuntimeSync, jsiConfigureProps } from './core';\nimport { ReanimatedError } from './errors';\nimport { updateLoggerConfig } from './logger';\nimport type { LoggerConfig } from './logger';\nimport { shouldBeUseWeb } from './PlatformChecker';\n\nconst SHOULD_BE_USE_WEB = shouldBeUseWeb();\n\nfunction assertNoOverlapInLists() {\n  for (const key in PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST) {\n    if (key in PropsAllowlists.UI_THREAD_PROPS_WHITELIST) {\n      throw new ReanimatedError(\n        `Property \\`${key}\\` was whitelisted both as UI and native prop. Please remove it from one of the lists.`\n      );\n    }\n  }\n}\n\nexport function configureProps(): void {\n  assertNoOverlapInLists();\n  jsiConfigureProps(\n    Object.keys(PropsAllowlists.UI_THREAD_PROPS_WHITELIST),\n    Object.keys(PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST)\n  );\n}\n\nexport function addWhitelistedNativeProps(\n  props: Record<string, boolean>\n): void {\n  const oldSize = Object.keys(\n    PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST\n  ).length;\n  PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST = {\n    ...PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST,\n    ...props,\n  };\n  if (\n    oldSize !==\n    Object.keys(PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST).length\n  ) {\n    configureProps();\n  }\n}\n\nexport function addWhitelistedUIProps(props: Record<string, boolean>): void {\n  const oldSize = Object.keys(PropsAllowlists.UI_THREAD_PROPS_WHITELIST).length;\n  PropsAllowlists.UI_THREAD_PROPS_WHITELIST = {\n    ...PropsAllowlists.UI_THREAD_PROPS_WHITELIST,\n    ...props,\n  };\n  if (\n    oldSize !== Object.keys(PropsAllowlists.UI_THREAD_PROPS_WHITELIST).length\n  ) {\n    configureProps();\n  }\n}\n\n/**\n * Updates Reanimated logger config with the user-provided configuration. Will\n * affect Reanimated code executed after call to this function so it should be\n * called before any Reanimated code is executed to take effect. Each call to\n * this function will override the previous configuration (it's recommended to\n * call it only once).\n *\n * @param config - The new logger configuration to apply.\n */\nexport function configureReanimatedLogger(config: LoggerConfig) {\n  // Update the configuration object in the React runtime\n  updateLoggerConfig(config);\n  // Register the updated configuration in the UI runtime\n  if (!SHOULD_BE_USE_WEB) {\n    executeOnUIRuntimeSync(updateLoggerConfig)(config);\n  }\n}\n\nconst PROCESSED_VIEW_NAMES = new Set();\n\nexport interface ViewConfig {\n  uiViewClassName: string;\n  validAttributes: Record<string, unknown>;\n}\n/**\n * Updates UI props whitelist for given view host instance this will work just\n * once for every view name\n */\n\nexport function adaptViewConfig(viewConfig: ViewConfig): void {\n  const viewName = viewConfig.uiViewClassName;\n  const props = viewConfig.validAttributes;\n\n  // update whitelist of UI props for this view name only once\n  if (!PROCESSED_VIEW_NAMES.has(viewName)) {\n    const propsToAdd: Record<string, boolean> = {};\n    Object.keys(props).forEach((key) => {\n      // we don't want to add native props as they affect layout\n      // we also skip props which repeat here\n      if (\n        !(key in PropsAllowlists.NATIVE_THREAD_PROPS_WHITELIST) &&\n        !(key in PropsAllowlists.UI_THREAD_PROPS_WHITELIST)\n      ) {\n        propsToAdd[key] = true;\n      }\n    });\n    addWhitelistedUIProps(propsToAdd);\n\n    PROCESSED_VIEW_NAMES.add(viewName);\n  }\n}\n\nconfigureProps();\n"],"mappings":"AAAA,YAAY,CAAAA,MAAA,CAAAC,cAAA,CAAAC,OAAA,eAAAC,KAAA,QAAAD,OAAA,CAAAE,eAAA,CAAAA,eAAA,CAAAF,OAAA,CAAAG,yBAAA,CAAAA,yBAAA,CAAAH,OAAA,CAAAI,qBAAA,CAAAA,qBAAA,CAAAJ,OAAA,CAAAK,cAAA,CAAAA,cAAA,CAAAL,OAAA,CAAAM,yBAAA,CAAAA,yBAAA,CACZ,IAAAC,gBAAA,CAAAC,OAAA,yBACA,IAAAC,KAAA,CAAAD,OAAA,cACA,IAAAE,OAAA,CAAAF,OAAA,gBACA,IAAAG,MAAA,CAAAH,OAAA,sBAEA,IAAAI,gBAAA,CAAAJ,OAAA,yBAEA,GAAM,CAAAK,iBAAiB,CAAG,GAAAC,+BAAc,EAAC,CAAC,CAE1C,QAAS,CAAAC,sBAAsBA,CAAA,CAAG,CAChC,IAAK,GAAM,CAAAC,GAAG,GAAI,CAAAC,gCAAe,CAACC,6BAA6B,CAAE,CAC/D,GAAIF,GAAG,GAAI,CAAAC,gCAAe,CAACE,yBAAyB,CAAE,CACpD,KAAM,IAAI,CAAAC,uBAAe,CACvB,cAAcJ,GAAG,wFACnB,CAAC,CACH,CACF,CACF,CAEO,QAAS,CAAAX,cAAcA,CAAA,CAAS,CACrCU,sBAAsB,CAAC,CAAC,CACxB,GAAAM,uBAAiB,EACfvB,MAAM,CAACwB,IAAI,CAACL,gCAAe,CAACE,yBAAyB,CAAC,CACtDrB,MAAM,CAACwB,IAAI,CAACL,gCAAe,CAACC,6BAA6B,CAC3D,CAAC,CACH,CAEO,QAAS,CAAAf,yBAAyBA,CACvCoB,KAA8B,CACxB,CACN,GAAM,CAAAC,OAAO,CAAG1B,MAAM,CAACwB,IAAI,CACzBL,gCAAe,CAACC,6BAClB,CAAC,CAACO,MAAM,CACRR,gCAAe,CAACC,6BAA6B,CAAApB,MAAA,CAAA4B,MAAA,IACxCT,gCAAe,CAACC,6BAA6B,CAC7CK,KAAA,CACJ,CACD,GACEC,OAAO,GACP1B,MAAM,CAACwB,IAAI,CAACL,gCAAe,CAACC,6BAA6B,CAAC,CAACO,MAAM,CACjE,CACApB,cAAc,CAAC,CAAC,CAClB,CACF,CAEO,QAAS,CAAAD,qBAAqBA,CAACmB,KAA8B,CAAQ,CAC1E,GAAM,CAAAC,OAAO,CAAG1B,MAAM,CAACwB,IAAI,CAACL,gCAAe,CAACE,yBAAyB,CAAC,CAACM,MAAM,CAC7ER,gCAAe,CAACE,yBAAyB,CAAArB,MAAA,CAAA4B,MAAA,IACpCT,gCAAe,CAACE,yBAAyB,CACzCI,KAAA,CACJ,CACD,GACEC,OAAO,GAAK1B,MAAM,CAACwB,IAAI,CAACL,gCAAe,CAACE,yBAAyB,CAAC,CAACM,MAAM,CACzE,CACApB,cAAc,CAAC,CAAC,CAClB,CACF,CAWO,QAAS,CAAAC,yBAAyBA,CAACqB,MAAoB,CAAE,CAE9D,GAAAC,yBAAkB,EAACD,MAAM,CAAC,CAE1B,GAAI,CAACd,iBAAiB,CAAE,CACtB,GAAAgB,4BAAsB,EAACD,yBAAkB,CAAC,CAACD,MAAM,CAAC,CACpD,CACF,CAEA,GAAM,CAAAG,oBAAoB,CAAG,GAAI,CAAAC,GAAG,CAAC,CAAC,CAW/B,QAAS,CAAA7B,eAAeA,CAAC8B,UAAsB,CAAQ,CAC5D,GAAM,CAAAC,QAAQ,CAAGD,UAAU,CAACE,eAAe,CAC3C,GAAM,CAAAX,KAAK,CAAGS,UAAU,CAACG,eAAe,CAGxC,GAAI,CAACL,oBAAoB,CAACM,GAAG,CAACH,QAAQ,CAAC,CAAE,CACvC,GAAM,CAAAI,UAAmC,CAAG,CAAC,CAAC,CAC9CvC,MAAM,CAACwB,IAAI,CAACC,KAAK,CAAC,CAACe,OAAO,CAAE,SAAAtB,GAAG,CAAK,CAGlC,GACE,EAAEA,GAAG,GAAI,CAAAC,gCAAe,CAACC,6BAA6B,CAAC,EACvD,EAAEF,GAAG,GAAI,CAAAC,gCAAe,CAACE,yBAAyB,CAAC,CACnD,CACAkB,UAAU,CAACrB,GAAG,CAAC,CAAG,IAAI,CACxB,CACF,CAAC,CAAC,CACFZ,qBAAqB,CAACiC,UAAU,CAAC,CAEjCP,oBAAoB,CAACS,GAAG,CAACN,QAAQ,CAAC,CACpC,CACF,CAEA5B,cAAc,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}