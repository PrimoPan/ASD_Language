{"ast":null,"code":"'use strict';Object.defineProperty(exports,\"__esModule\",{value:true});exports.ReducedMotionConfig=ReducedMotionConfig;var _react=require(\"react\");var _commonTypes=require(\"../commonTypes.js\");var _ReducedMotion=require(\"../ReducedMotion.js\");var _index=require(\"../logger/index.js\");function ReducedMotionConfig(_ref){var mode=_ref.mode;(0,_react.useEffect)(function(){if(!__DEV__){return;}_index.logger.warn(`Reduced motion setting is overwritten with mode '${mode}'.`);},[]);(0,_react.useEffect)(function(){var wasEnabled=_ReducedMotion.ReducedMotionManager.jsValue;switch(mode){case _commonTypes.ReduceMotion.System:_ReducedMotion.ReducedMotionManager.setEnabled((0,_ReducedMotion.isReducedMotionEnabledInSystem)());break;case _commonTypes.ReduceMotion.Always:_ReducedMotion.ReducedMotionManager.setEnabled(true);break;case _commonTypes.ReduceMotion.Never:_ReducedMotion.ReducedMotionManager.setEnabled(false);break;}return function(){_ReducedMotion.ReducedMotionManager.setEnabled(wasEnabled);};},[mode]);return null;}","map":{"version":3,"names":["Object","defineProperty","exports","value","ReducedMotionConfig","_react","require","_commonTypes","_ReducedMotion","_index","_ref","mode","useEffect","__DEV__","logger","warn","wasEnabled","ReducedMotionManager","jsValue","ReduceMotion","System","setEnabled","isReducedMotionEnabledInSystem","Always","Never"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/react-native-reanimated/src/component/ReducedMotionConfig.tsx"],"sourcesContent":["'use strict';\nimport { useEffect } from 'react';\nimport { ReduceMotion } from '../commonTypes';\nimport {\n  ReducedMotionManager,\n  isReducedMotionEnabledInSystem,\n} from '../ReducedMotion';\nimport { logger } from '../logger';\n\n/**\n * A component that lets you overwrite default reduce motion behavior globally\n * in your application.\n *\n * @param mode - Determines default reduce motion behavior globally in your\n *   application. Configured with {@link ReduceMotion} enum.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/components/ReducedMotionConfig\n */\nexport function ReducedMotionConfig({ mode }: { mode: ReduceMotion }) {\n  useEffect(() => {\n    if (!__DEV__) {\n      return;\n    }\n    logger.warn(`Reduced motion setting is overwritten with mode '${mode}'.`);\n  }, []);\n\n  useEffect(() => {\n    const wasEnabled = ReducedMotionManager.jsValue;\n    switch (mode) {\n      case ReduceMotion.System:\n        ReducedMotionManager.setEnabled(isReducedMotionEnabledInSystem());\n        break;\n      case ReduceMotion.Always:\n        ReducedMotionManager.setEnabled(true);\n        break;\n      case ReduceMotion.Never:\n        ReducedMotionManager.setEnabled(false);\n        break;\n    }\n    return () => {\n      ReducedMotionManager.setEnabled(wasEnabled);\n    };\n  }, [mode]);\n\n  return null;\n}\n"],"mappings":"AAAA,YAAY,CAAAA,MAAA,CAAAC,cAAA,CAAAC,OAAA,eAAAC,KAAA,QAAAD,OAAA,CAAAE,mBAAA,CAAAA,mBAAA,CACZ,IAAAC,MAAA,CAAAC,OAAA,UACA,IAAAC,YAAA,CAAAD,OAAA,sBACA,IAAAE,cAAA,CAAAF,OAAA,wBAIA,IAAAG,MAAA,CAAAH,OAAA,uBAUO,QAAS,CAAAF,mBAAmBA,CAAAM,IAAA,CAAmC,IAAhC,CAAAC,IAAA,CAAAD,IAAA,CAAAC,IAAA,CACpC,GAAAC,gBAAS,EAAC,UAAM,CACd,GAAI,CAACC,OAAO,CAAE,CACZ,OACF,CACAC,aAAM,CAACC,IAAI,CAAC,oDAAoDJ,IAAI,IAAI,CAAC,CAC3E,CAAC,CAAE,EAAE,CAAC,CAEN,GAAAC,gBAAS,EAAC,UAAM,CACd,GAAM,CAAAI,UAAU,CAAGC,mCAAoB,CAACC,OAAO,CAC/C,OAAQP,IAAI,EACV,IAAK,CAAAQ,yBAAY,CAACC,MAAM,CACtBH,mCAAoB,CAACI,UAAU,CAAC,GAAAC,6CAA8B,EAAC,CAAC,CAAC,CACjE,MACF,IAAK,CAAAH,yBAAY,CAACI,MAAM,CACtBN,mCAAoB,CAACI,UAAU,CAAC,IAAI,CAAC,CACrC,MACF,IAAK,CAAAF,yBAAY,CAACK,KAAK,CACrBP,mCAAoB,CAACI,UAAU,CAAC,KAAK,CAAC,CACtC,MACJ,CACA,MAAO,WAAM,CACXJ,mCAAoB,CAACI,UAAU,CAACL,UAAU,CAAC,CAC7C,CAAC,CACH,CAAC,CAAE,CAACL,IAAI,CAAC,CAAC,CAEV,MAAO,KAAI,CACb","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}