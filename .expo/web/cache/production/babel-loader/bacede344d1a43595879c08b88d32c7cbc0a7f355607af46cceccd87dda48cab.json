{"ast":null,"code":"\"use strict\";var _objectWithoutProperties=require(\"@babel/runtime/helpers/objectWithoutProperties\");var _excluded=[\"key\",\"routeNames\"];Object.defineProperty(exports,\"__esModule\",{value:true});exports.BaseNavigationContainer=void 0;var _routers=require(\"@react-navigation/routers\");var React=_interopRequireWildcard(require(\"react\"));var _useLatestCallback=_interopRequireDefault(require(\"use-latest-callback\"));var _checkDuplicateRouteNames=require(\"./checkDuplicateRouteNames.js\");var _checkSerializable=require(\"./checkSerializable.js\");var _createNavigationContainerRef=require(\"./createNavigationContainerRef.js\");var _DeprecatedNavigationInChildContext=require(\"./DeprecatedNavigationInChildContext.js\");var _EnsureSingleNavigator=require(\"./EnsureSingleNavigator.js\");var _findFocusedRoute=require(\"./findFocusedRoute.js\");var _NavigationBuilderContext=require(\"./NavigationBuilderContext.js\");var _NavigationContainerRefContext=require(\"./NavigationContainerRefContext.js\");var _NavigationIndependentTreeContext=require(\"./NavigationIndependentTreeContext.js\");var _NavigationStateContext=require(\"./NavigationStateContext.js\");var _ThemeProvider=require(\"./theming/ThemeProvider.js\");var _UnhandledActionContext=require(\"./UnhandledActionContext.js\");var _useChildListeners=require(\"./useChildListeners.js\");var _useEventEmitter=require(\"./useEventEmitter.js\");var _useKeyedChildListeners=require(\"./useKeyedChildListeners.js\");var _useNavigationIndependentTree=require(\"./useNavigationIndependentTree.js\");var _useOptionsGetters=require(\"./useOptionsGetters.js\");var _useSyncState=require(\"./useSyncState.js\");var _jsxRuntime=require(\"react/jsx-runtime\");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e};}function _getRequireWildcardCache(e){if(\"function\"!=typeof WeakMap)return null;var r=new WeakMap(),t=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r;})(e);}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if(\"default\"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u];}return n.default=e,t&&t.set(e,n),n;}var serializableWarnings=[];var duplicateNameWarnings=[];var _getPartialState=function getPartialState(state){if(state===undefined){return;}var key=state.key,routeNames=state.routeNames,partialState=_objectWithoutProperties(state,_excluded);return Object.assign({},partialState,{stale:true,routes:state.routes.map(function(route){if(route.state===undefined){return route;}return Object.assign({},route,{state:_getPartialState(route.state)});})});};var BaseNavigationContainer=exports.BaseNavigationContainer=React.forwardRef(function BaseNavigationContainer(_ref,ref){var initialState=_ref.initialState,onStateChange=_ref.onStateChange,onReady=_ref.onReady,onUnhandledAction=_ref.onUnhandledAction,_ref$navigationInChil=_ref.navigationInChildEnabled,navigationInChildEnabled=_ref$navigationInChil===void 0?false:_ref$navigationInChil,theme=_ref.theme,children=_ref.children;var parent=React.useContext(_NavigationStateContext.NavigationStateContext);var independent=(0,_useNavigationIndependentTree.useNavigationIndependentTree)();if(!parent.isDefault&&!independent){throw new Error(\"Looks like you have nested a 'NavigationContainer' inside another. Normally you need only one container at the root of the app, so this was probably an error. If this was intentional, wrap the container in 'NavigationIndependentTree' explicitly. Note that this will make the child navigators disconnected from the parent and you won't be able to navigate between them.\");}var _ref2=(0,_useSyncState.useSyncState)(function(){return _getPartialState(initialState==null?undefined:initialState);}),state=_ref2.state,getState=_ref2.getState,setState=_ref2.setState,scheduleUpdate=_ref2.scheduleUpdate,flushUpdates=_ref2.flushUpdates;var isFirstMountRef=React.useRef(true);var navigatorKeyRef=React.useRef();var getKey=React.useCallback(function(){return navigatorKeyRef.current;},[]);var setKey=React.useCallback(function(key){navigatorKeyRef.current=key;},[]);var _ref3=(0,_useChildListeners.useChildListeners)(),listeners=_ref3.listeners,addListener=_ref3.addListener;var _ref4=(0,_useKeyedChildListeners.useKeyedChildListeners)(),keyedListeners=_ref4.keyedListeners,addKeyedListener=_ref4.addKeyedListener;var dispatch=(0,_useLatestCallback.default)(function(action){if(listeners.focus[0]==null){console.error(_createNavigationContainerRef.NOT_INITIALIZED_ERROR);}else{listeners.focus[0](function(navigation){return navigation.dispatch(action);});}});var canGoBack=(0,_useLatestCallback.default)(function(){if(listeners.focus[0]==null){return false;}var _listeners$focus$=listeners.focus[0](function(navigation){return navigation.canGoBack();}),result=_listeners$focus$.result,handled=_listeners$focus$.handled;if(handled){return result;}else{return false;}});var resetRoot=(0,_useLatestCallback.default)(function(state){var _state$key;var target=(_state$key=state==null?void 0:state.key)!=null?_state$key:keyedListeners.getState.root==null?void 0:keyedListeners.getState.root().key;if(target==null){console.error(_createNavigationContainerRef.NOT_INITIALIZED_ERROR);}else{listeners.focus[0](function(navigation){return navigation.dispatch(Object.assign({},_routers.CommonActions.reset(state),{target:target}));});}});var getRootState=(0,_useLatestCallback.default)(function(){return keyedListeners.getState.root==null?void 0:keyedListeners.getState.root();});var getCurrentRoute=(0,_useLatestCallback.default)(function(){var state=getRootState();if(state==null){return undefined;}var route=(0,_findFocusedRoute.findFocusedRoute)(state);return route;});var isReady=(0,_useLatestCallback.default)(function(){return listeners.focus[0]!=null;});var emitter=(0,_useEventEmitter.useEventEmitter)();var _ref5=(0,_useOptionsGetters.useOptionsGetters)({}),addOptionsGetter=_ref5.addOptionsGetter,getCurrentOptions=_ref5.getCurrentOptions;var navigation=React.useMemo(function(){return Object.assign({},Object.keys(_routers.CommonActions).reduce(function(acc,name){acc[name]=function(){var _routers$CommonAction;return(dispatch((_routers$CommonAction=_routers.CommonActions)[name].apply(_routers$CommonAction,arguments)));};return acc;},{}),emitter.create('root'),{dispatch:dispatch,resetRoot:resetRoot,isFocused:function isFocused(){return true;},canGoBack:canGoBack,getParent:function getParent(){return undefined;},getState:getState,getRootState:getRootState,getCurrentRoute:getCurrentRoute,getCurrentOptions:getCurrentOptions,isReady:isReady,setOptions:function setOptions(){throw new Error('Cannot call setOptions outside a screen');}});},[canGoBack,dispatch,emitter,getCurrentOptions,getCurrentRoute,getRootState,getState,isReady,resetRoot]);React.useImperativeHandle(ref,function(){return navigation;},[navigation]);var onDispatchAction=(0,_useLatestCallback.default)(function(action,noop){emitter.emit({type:'__unsafe_action__',data:{action:action,noop:noop,stack:stackRef.current}});});var lastEmittedOptionsRef=React.useRef();var onOptionsChange=(0,_useLatestCallback.default)(function(options){if(lastEmittedOptionsRef.current===options){return;}lastEmittedOptionsRef.current=options;emitter.emit({type:'options',data:{options:options}});});var stackRef=React.useRef();var builderContext=React.useMemo(function(){return{addListener:addListener,addKeyedListener:addKeyedListener,onDispatchAction:onDispatchAction,onOptionsChange:onOptionsChange,scheduleUpdate:scheduleUpdate,flushUpdates:flushUpdates,stackRef:stackRef};},[addListener,addKeyedListener,onDispatchAction,onOptionsChange,scheduleUpdate,flushUpdates]);var isInitialRef=React.useRef(true);var getIsInitial=React.useCallback(function(){return isInitialRef.current;},[]);var context=React.useMemo(function(){return{state:state,getState:getState,setState:setState,getKey:getKey,setKey:setKey,getIsInitial:getIsInitial,addOptionsGetter:addOptionsGetter};},[state,getState,setState,getKey,setKey,getIsInitial,addOptionsGetter]);var onReadyRef=React.useRef(onReady);var onStateChangeRef=React.useRef(onStateChange);React.useEffect(function(){isInitialRef.current=false;onStateChangeRef.current=onStateChange;onReadyRef.current=onReady;});var onReadyCalledRef=React.useRef(false);React.useEffect(function(){if(!onReadyCalledRef.current&&isReady()){onReadyCalledRef.current=true;onReadyRef.current==null||onReadyRef.current();}},[state,isReady]);React.useEffect(function(){var hydratedState=getRootState();if(process.env.NODE_ENV!=='production'){if(hydratedState!==undefined){var serializableResult=(0,_checkSerializable.checkSerializable)(hydratedState);if(!serializableResult.serializable){var location=serializableResult.location,reason=serializableResult.reason;var path='';var pointer=hydratedState;var params=false;for(var i=0;i<location.length;i++){var curr=location[i];var prev=location[i-1];pointer=pointer[curr];if(!params&&curr==='state'){continue;}else if(!params&&curr==='routes'){if(path){path+=' > ';}}else if(!params&&typeof curr==='number'&&prev==='routes'){var _pointer;path+=(_pointer=pointer)==null?void 0:_pointer.name;}else if(!params){path+=` > ${curr}`;params=true;}else{if(typeof curr==='number'||/^[0-9]+$/.test(curr)){path+=`[${curr}]`;}else if(/^[a-z$_]+$/i.test(curr)){path+=`.${curr}`;}else{path+=`[${JSON.stringify(curr)}]`;}}}var message=`Non-serializable values were found in the navigation state. Check:\\n\\n${path} (${reason})\\n\\nThis can break usage such as persisting and restoring state. This might happen if you passed non-serializable values such as function, class instances etc. in params. If you need to use components with callbacks in your options, you can use 'navigation.setOptions' instead. See https://reactnavigation.org/docs/troubleshooting#i-get-the-warning-non-serializable-values-were-found-in-the-navigation-state for more details.`;if(!serializableWarnings.includes(message)){serializableWarnings.push(message);console.warn(message);}}var duplicateRouteNamesResult=(0,_checkDuplicateRouteNames.checkDuplicateRouteNames)(hydratedState);if(duplicateRouteNamesResult.length){var _message=`Found screens with the same name nested inside one another. Check:\\n${duplicateRouteNamesResult.map(function(locations){return`\\n${locations.join(', ')}`;})}\\n\\nThis can cause confusing behavior during navigation. Consider using unique names for each screen instead.`;if(!duplicateNameWarnings.includes(_message)){duplicateNameWarnings.push(_message);console.warn(_message);}}}}emitter.emit({type:'state',data:{state:state}});if(!isFirstMountRef.current&&onStateChangeRef.current){onStateChangeRef.current(hydratedState);}isFirstMountRef.current=false;},[getRootState,emitter,state]);var defaultOnUnhandledAction=(0,_useLatestCallback.default)(function(action){if(process.env.NODE_ENV==='production'){return;}var payload=action.payload;var message=`The action '${action.type}'${payload?` with payload ${JSON.stringify(action.payload)}`:''} was not handled by any navigator.`;switch(action.type){case'NAVIGATE':case'PUSH':case'REPLACE':case'JUMP_TO':if(payload!=null&&payload.name){message+=`\\n\\nDo you have a screen named '${payload.name}'?\\n\\nIf you're trying to navigate to a screen in a nested navigator, see https://reactnavigation.org/docs/nesting-navigators#navigating-to-a-screen-in-a-nested-navigator.\\n\\nIf you're using conditional rendering, navigation will happen automatically and you shouldn't navigate manually.`;}else{message+=`\\n\\nYou need to pass the name of the screen to navigate to.\\n\\nSee https://reactnavigation.org/docs/navigation-actions for usage.`;}break;case'GO_BACK':case'POP':case'POP_TO_TOP':message+=`\\n\\nIs there any screen to go back to?`;break;case'OPEN_DRAWER':case'CLOSE_DRAWER':case'TOGGLE_DRAWER':message+=`\\n\\nIs your screen inside a Drawer navigator?`;break;}message+=`\\n\\nThis is a development-only warning and won't be shown in production.`;console.error(message);});return(0,_jsxRuntime.jsx)(_NavigationIndependentTreeContext.NavigationIndependentTreeContext.Provider,{value:false,children:(0,_jsxRuntime.jsx)(_NavigationContainerRefContext.NavigationContainerRefContext.Provider,{value:navigation,children:(0,_jsxRuntime.jsx)(_NavigationBuilderContext.NavigationBuilderContext.Provider,{value:builderContext,children:(0,_jsxRuntime.jsx)(_NavigationStateContext.NavigationStateContext.Provider,{value:context,children:(0,_jsxRuntime.jsx)(_UnhandledActionContext.UnhandledActionContext.Provider,{value:onUnhandledAction!=null?onUnhandledAction:defaultOnUnhandledAction,children:(0,_jsxRuntime.jsx)(_DeprecatedNavigationInChildContext.DeprecatedNavigationInChildContext.Provider,{value:navigationInChildEnabled,children:(0,_jsxRuntime.jsx)(_EnsureSingleNavigator.EnsureSingleNavigator,{children:(0,_jsxRuntime.jsx)(_ThemeProvider.ThemeProvider,{value:theme,children:children})})})})})})})});});","map":{"version":3,"names":["_routers","require","React","_interopRequireWildcard","_useLatestCallback","_interopRequireDefault","_checkDuplicateRouteNames","_checkSerializable","_createNavigationContainerRef","_DeprecatedNavigationInChildContext","_EnsureSingleNavigator","_findFocusedRoute","_NavigationBuilderContext","_NavigationContainerRefContext","_NavigationIndependentTreeContext","_NavigationStateContext","_ThemeProvider","_UnhandledActionContext","_useChildListeners","_useEventEmitter","_useKeyedChildListeners","_useNavigationIndependentTree","_useOptionsGetters","_useSyncState","_jsxRuntime","e","__esModule","default","_getRequireWildcardCache","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","serializableWarnings","duplicateNameWarnings","getPartialState","state","undefined","key","routeNames","partialState","_objectWithoutProperties","_excluded","assign","stale","routes","map","route","BaseNavigationContainer","exports","forwardRef","_ref","ref","initialState","onStateChange","onReady","onUnhandledAction","_ref$navigationInChil","navigationInChildEnabled","theme","children","parent","useContext","NavigationStateContext","independent","useNavigationIndependentTree","isDefault","Error","_ref2","useSyncState","getState","setState","scheduleUpdate","flushUpdates","isFirstMountRef","useRef","navigatorKeyRef","getKey","useCallback","current","setKey","_ref3","useChildListeners","listeners","addListener","_ref4","useKeyedChildListeners","keyedListeners","addKeyedListener","dispatch","action","focus","console","error","NOT_INITIALIZED_ERROR","navigation","canGoBack","_listeners$focus$","result","handled","resetRoot","_state$key","target","root","CommonActions","reset","getRootState","getCurrentRoute","findFocusedRoute","isReady","emitter","useEventEmitter","_ref5","useOptionsGetters","addOptionsGetter","getCurrentOptions","useMemo","keys","reduce","acc","name","_routers$CommonAction","apply","arguments","create","isFocused","getParent","setOptions","useImperativeHandle","onDispatchAction","noop","emit","type","data","stack","stackRef","lastEmittedOptionsRef","onOptionsChange","options","builderContext","isInitialRef","getIsInitial","context","onReadyRef","onStateChangeRef","useEffect","onReadyCalledRef","hydratedState","process","env","NODE_ENV","serializableResult","checkSerializable","serializable","location","reason","path","pointer","params","length","curr","prev","_pointer","test","JSON","stringify","message","includes","push","warn","duplicateRouteNamesResult","checkDuplicateRouteNames","locations","join","defaultOnUnhandledAction","payload","jsx","NavigationIndependentTreeContext","Provider","value","NavigationContainerRefContext","NavigationBuilderContext","UnhandledActionContext","DeprecatedNavigationInChildContext","EnsureSingleNavigator","ThemeProvider"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/@react-navigation/core/src/BaseNavigationContainer.tsx"],"sourcesContent":["import {\n  CommonActions,\n  type InitialState,\n  type NavigationAction,\n  type NavigationState,\n  type ParamListBase,\n  type PartialState,\n  type Route,\n} from '@react-navigation/routers';\nimport * as React from 'react';\nimport useLatestCallback from 'use-latest-callback';\n\nimport { checkDuplicateRouteNames } from './checkDuplicateRouteNames';\nimport { checkSerializable } from './checkSerializable';\nimport { NOT_INITIALIZED_ERROR } from './createNavigationContainerRef';\nimport { DeprecatedNavigationInChildContext } from './DeprecatedNavigationInChildContext';\nimport { EnsureSingleNavigator } from './EnsureSingleNavigator';\nimport { findFocusedRoute } from './findFocusedRoute';\nimport { NavigationBuilderContext } from './NavigationBuilderContext';\nimport { NavigationContainerRefContext } from './NavigationContainerRefContext';\nimport { NavigationIndependentTreeContext } from './NavigationIndependentTreeContext';\nimport { NavigationStateContext } from './NavigationStateContext';\nimport { ThemeProvider } from './theming/ThemeProvider';\nimport type {\n  NavigationContainerEventMap,\n  NavigationContainerProps,\n  NavigationContainerRef,\n} from './types';\nimport { UnhandledActionContext } from './UnhandledActionContext';\nimport { useChildListeners } from './useChildListeners';\nimport { useEventEmitter } from './useEventEmitter';\nimport { useKeyedChildListeners } from './useKeyedChildListeners';\nimport { useNavigationIndependentTree } from './useNavigationIndependentTree';\nimport { useOptionsGetters } from './useOptionsGetters';\nimport { useSyncState } from './useSyncState';\n\ntype State = NavigationState | PartialState<NavigationState> | undefined;\n\nconst serializableWarnings: string[] = [];\nconst duplicateNameWarnings: string[] = [];\n\n/**\n * Remove `key` and `routeNames` from the state objects recursively to get partial state.\n *\n * @param state Initial state object.\n */\nconst getPartialState = (\n  state: InitialState | undefined\n): PartialState<NavigationState> | undefined => {\n  if (state === undefined) {\n    return;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { key, routeNames, ...partialState } = state;\n\n  return {\n    ...partialState,\n    stale: true,\n    routes: state.routes.map((route) => {\n      if (route.state === undefined) {\n        return route as Route<string> & {\n          state?: PartialState<NavigationState>;\n        };\n      }\n\n      return { ...route, state: getPartialState(route.state) };\n    }),\n  };\n};\n\n/**\n * Container component which holds the navigation state.\n * This should be rendered at the root wrapping the whole app.\n *\n * @param props.initialState Initial state object for the navigation tree.\n * @param props.onReady Callback which is called after the navigation tree mounts.\n * @param props.onStateChange Callback which is called with the latest navigation state when it changes.\n * @param props.onUnhandledAction Callback which is called when an action is not handled.\n * @param props.theme Theme object for the UI elements.\n * @param props.children Child elements to render the content.\n * @param props.ref Ref object which refers to the navigation object containing helper methods.\n */\nexport const BaseNavigationContainer = React.forwardRef(\n  function BaseNavigationContainer(\n    {\n      initialState,\n      onStateChange,\n      onReady,\n      onUnhandledAction,\n      navigationInChildEnabled = false,\n      theme,\n      children,\n    }: NavigationContainerProps,\n    ref?: React.Ref<NavigationContainerRef<ParamListBase>>\n  ) {\n    const parent = React.useContext(NavigationStateContext);\n    const independent = useNavigationIndependentTree();\n\n    if (!parent.isDefault && !independent) {\n      throw new Error(\n        \"Looks like you have nested a 'NavigationContainer' inside another. Normally you need only one container at the root of the app, so this was probably an error. If this was intentional, wrap the container in 'NavigationIndependentTree' explicitly. Note that this will make the child navigators disconnected from the parent and you won't be able to navigate between them.\"\n      );\n    }\n\n    const { state, getState, setState, scheduleUpdate, flushUpdates } =\n      useSyncState<State>(() =>\n        getPartialState(initialState == null ? undefined : initialState)\n      );\n\n    const isFirstMountRef = React.useRef<boolean>(true);\n\n    const navigatorKeyRef = React.useRef<string | undefined>();\n\n    const getKey = React.useCallback(() => navigatorKeyRef.current, []);\n\n    const setKey = React.useCallback((key: string) => {\n      navigatorKeyRef.current = key;\n    }, []);\n\n    const { listeners, addListener } = useChildListeners();\n\n    const { keyedListeners, addKeyedListener } = useKeyedChildListeners();\n\n    const dispatch = useLatestCallback(\n      (\n        action:\n          | NavigationAction\n          | ((state: NavigationState) => NavigationAction)\n      ) => {\n        if (listeners.focus[0] == null) {\n          console.error(NOT_INITIALIZED_ERROR);\n        } else {\n          listeners.focus[0]((navigation) => navigation.dispatch(action));\n        }\n      }\n    );\n\n    const canGoBack = useLatestCallback(() => {\n      if (listeners.focus[0] == null) {\n        return false;\n      }\n\n      const { result, handled } = listeners.focus[0]((navigation) =>\n        navigation.canGoBack()\n      );\n\n      if (handled) {\n        return result;\n      } else {\n        return false;\n      }\n    });\n\n    const resetRoot = useLatestCallback(\n      (state?: PartialState<NavigationState> | NavigationState) => {\n        const target = state?.key ?? keyedListeners.getState.root?.().key;\n\n        if (target == null) {\n          console.error(NOT_INITIALIZED_ERROR);\n        } else {\n          listeners.focus[0]((navigation) =>\n            navigation.dispatch({\n              ...CommonActions.reset(state),\n              target,\n            })\n          );\n        }\n      }\n    );\n\n    const getRootState = useLatestCallback(() => {\n      return keyedListeners.getState.root?.();\n    });\n\n    const getCurrentRoute = useLatestCallback(() => {\n      const state = getRootState();\n\n      if (state == null) {\n        return undefined;\n      }\n\n      const route = findFocusedRoute(state);\n\n      return route as Route<string> | undefined;\n    });\n\n    const isReady = useLatestCallback(() => listeners.focus[0] != null);\n\n    const emitter = useEventEmitter<NavigationContainerEventMap>();\n\n    const { addOptionsGetter, getCurrentOptions } = useOptionsGetters({});\n\n    const navigation: NavigationContainerRef<ParamListBase> = React.useMemo(\n      () => ({\n        ...Object.keys(CommonActions).reduce<any>((acc, name) => {\n          acc[name] = (...args: any[]) =>\n            // @ts-expect-error: this is ok\n            dispatch(CommonActions[name](...args));\n          return acc;\n        }, {}),\n        ...emitter.create('root'),\n        dispatch,\n        resetRoot,\n        isFocused: () => true,\n        canGoBack,\n        getParent: () => undefined,\n        getState,\n        getRootState,\n        getCurrentRoute,\n        getCurrentOptions,\n        isReady,\n        setOptions: () => {\n          throw new Error('Cannot call setOptions outside a screen');\n        },\n      }),\n      [\n        canGoBack,\n        dispatch,\n        emitter,\n        getCurrentOptions,\n        getCurrentRoute,\n        getRootState,\n        getState,\n        isReady,\n        resetRoot,\n      ]\n    );\n\n    React.useImperativeHandle(ref, () => navigation, [navigation]);\n\n    const onDispatchAction = useLatestCallback(\n      (action: NavigationAction, noop: boolean) => {\n        emitter.emit({\n          type: '__unsafe_action__',\n          data: { action, noop, stack: stackRef.current },\n        });\n      }\n    );\n\n    const lastEmittedOptionsRef = React.useRef<object | undefined>();\n\n    const onOptionsChange = useLatestCallback((options: object) => {\n      if (lastEmittedOptionsRef.current === options) {\n        return;\n      }\n\n      lastEmittedOptionsRef.current = options;\n\n      emitter.emit({\n        type: 'options',\n        data: { options },\n      });\n    });\n\n    const stackRef = React.useRef<string | undefined>();\n\n    const builderContext = React.useMemo(\n      () => ({\n        addListener,\n        addKeyedListener,\n        onDispatchAction,\n        onOptionsChange,\n        scheduleUpdate,\n        flushUpdates,\n        stackRef,\n      }),\n      [\n        addListener,\n        addKeyedListener,\n        onDispatchAction,\n        onOptionsChange,\n        scheduleUpdate,\n        flushUpdates,\n      ]\n    );\n\n    const isInitialRef = React.useRef(true);\n\n    const getIsInitial = React.useCallback(() => isInitialRef.current, []);\n\n    const context = React.useMemo(\n      () => ({\n        state,\n        getState,\n        setState,\n        getKey,\n        setKey,\n        getIsInitial,\n        addOptionsGetter,\n      }),\n      [\n        state,\n        getState,\n        setState,\n        getKey,\n        setKey,\n        getIsInitial,\n        addOptionsGetter,\n      ]\n    );\n\n    const onReadyRef = React.useRef(onReady);\n    const onStateChangeRef = React.useRef(onStateChange);\n\n    React.useEffect(() => {\n      isInitialRef.current = false;\n      onStateChangeRef.current = onStateChange;\n      onReadyRef.current = onReady;\n    });\n\n    const onReadyCalledRef = React.useRef(false);\n\n    React.useEffect(() => {\n      if (!onReadyCalledRef.current && isReady()) {\n        onReadyCalledRef.current = true;\n        onReadyRef.current?.();\n      }\n    }, [state, isReady]);\n\n    React.useEffect(() => {\n      const hydratedState = getRootState();\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (hydratedState !== undefined) {\n          const serializableResult = checkSerializable(hydratedState);\n\n          if (!serializableResult.serializable) {\n            const { location, reason } = serializableResult;\n\n            let path = '';\n            let pointer: Record<any, any> = hydratedState;\n            let params = false;\n\n            for (let i = 0; i < location.length; i++) {\n              const curr = location[i];\n              const prev = location[i - 1];\n\n              pointer = pointer[curr];\n\n              if (!params && curr === 'state') {\n                continue;\n              } else if (!params && curr === 'routes') {\n                if (path) {\n                  path += ' > ';\n                }\n              } else if (\n                !params &&\n                typeof curr === 'number' &&\n                prev === 'routes'\n              ) {\n                path += pointer?.name;\n              } else if (!params) {\n                path += ` > ${curr}`;\n                params = true;\n              } else {\n                if (typeof curr === 'number' || /^[0-9]+$/.test(curr)) {\n                  path += `[${curr}]`;\n                } else if (/^[a-z$_]+$/i.test(curr)) {\n                  path += `.${curr}`;\n                } else {\n                  path += `[${JSON.stringify(curr)}]`;\n                }\n              }\n            }\n\n            const message = `Non-serializable values were found in the navigation state. Check:\\n\\n${path} (${reason})\\n\\nThis can break usage such as persisting and restoring state. This might happen if you passed non-serializable values such as function, class instances etc. in params. If you need to use components with callbacks in your options, you can use 'navigation.setOptions' instead. See https://reactnavigation.org/docs/troubleshooting#i-get-the-warning-non-serializable-values-were-found-in-the-navigation-state for more details.`;\n\n            if (!serializableWarnings.includes(message)) {\n              serializableWarnings.push(message);\n              console.warn(message);\n            }\n          }\n\n          const duplicateRouteNamesResult =\n            checkDuplicateRouteNames(hydratedState);\n\n          if (duplicateRouteNamesResult.length) {\n            const message = `Found screens with the same name nested inside one another. Check:\\n${duplicateRouteNamesResult.map(\n              (locations) => `\\n${locations.join(', ')}`\n            )}\\n\\nThis can cause confusing behavior during navigation. Consider using unique names for each screen instead.`;\n\n            if (!duplicateNameWarnings.includes(message)) {\n              duplicateNameWarnings.push(message);\n              console.warn(message);\n            }\n          }\n        }\n      }\n\n      emitter.emit({ type: 'state', data: { state } });\n\n      if (!isFirstMountRef.current && onStateChangeRef.current) {\n        onStateChangeRef.current(hydratedState);\n      }\n\n      isFirstMountRef.current = false;\n    }, [getRootState, emitter, state]);\n\n    const defaultOnUnhandledAction = useLatestCallback(\n      (action: NavigationAction) => {\n        if (process.env.NODE_ENV === 'production') {\n          return;\n        }\n\n        const payload: Record<string, any> | undefined = action.payload;\n\n        let message = `The action '${action.type}'${\n          payload ? ` with payload ${JSON.stringify(action.payload)}` : ''\n        } was not handled by any navigator.`;\n\n        switch (action.type) {\n          case 'NAVIGATE':\n          case 'PUSH':\n          case 'REPLACE':\n          case 'JUMP_TO':\n            if (payload?.name) {\n              message += `\\n\\nDo you have a screen named '${payload.name}'?\\n\\nIf you're trying to navigate to a screen in a nested navigator, see https://reactnavigation.org/docs/nesting-navigators#navigating-to-a-screen-in-a-nested-navigator.\\n\\nIf you're using conditional rendering, navigation will happen automatically and you shouldn't navigate manually.`;\n            } else {\n              message += `\\n\\nYou need to pass the name of the screen to navigate to.\\n\\nSee https://reactnavigation.org/docs/navigation-actions for usage.`;\n            }\n\n            break;\n          case 'GO_BACK':\n          case 'POP':\n          case 'POP_TO_TOP':\n            message += `\\n\\nIs there any screen to go back to?`;\n            break;\n          case 'OPEN_DRAWER':\n          case 'CLOSE_DRAWER':\n          case 'TOGGLE_DRAWER':\n            message += `\\n\\nIs your screen inside a Drawer navigator?`;\n            break;\n        }\n\n        message += `\\n\\nThis is a development-only warning and won't be shown in production.`;\n\n        console.error(message);\n      }\n    );\n\n    return (\n      <NavigationIndependentTreeContext.Provider value={false}>\n        <NavigationContainerRefContext.Provider value={navigation}>\n          <NavigationBuilderContext.Provider value={builderContext}>\n            <NavigationStateContext.Provider value={context}>\n              <UnhandledActionContext.Provider\n                value={onUnhandledAction ?? defaultOnUnhandledAction}\n              >\n                <DeprecatedNavigationInChildContext.Provider\n                  value={navigationInChildEnabled}\n                >\n                  <EnsureSingleNavigator>\n                    <ThemeProvider value={theme}>{children}</ThemeProvider>\n                  </EnsureSingleNavigator>\n                </DeprecatedNavigationInChildContext.Provider>\n              </UnhandledActionContext.Provider>\n            </NavigationStateContext.Provider>\n          </NavigationBuilderContext.Provider>\n        </NavigationContainerRefContext.Provider>\n      </NavigationIndependentTreeContext.Provider>\n    );\n  }\n);\n"],"mappings":"uOAAA,IAAAA,QAAA,CAAAC,OAAA,8BASA,IAAAC,KAAA,CAAAC,uBAAA,CAAAF,OAAA,WACA,IAAAG,kBAAA,CAAAC,sBAAA,CAAAJ,OAAA,yBAEA,IAAAK,yBAAA,CAAAL,OAAA,kCACA,IAAAM,kBAAA,CAAAN,OAAA,2BACA,IAAAO,6BAAA,CAAAP,OAAA,sCACA,IAAAQ,mCAAA,CAAAR,OAAA,4CACA,IAAAS,sBAAA,CAAAT,OAAA,+BACA,IAAAU,iBAAA,CAAAV,OAAA,0BACA,IAAAW,yBAAA,CAAAX,OAAA,kCACA,IAAAY,8BAAA,CAAAZ,OAAA,uCACA,IAAAa,iCAAA,CAAAb,OAAA,0CACA,IAAAc,uBAAA,CAAAd,OAAA,gCACA,IAAAe,cAAA,CAAAf,OAAA,+BAMA,IAAAgB,uBAAA,CAAAhB,OAAA,gCACA,IAAAiB,kBAAA,CAAAjB,OAAA,2BACA,IAAAkB,gBAAA,CAAAlB,OAAA,yBACA,IAAAmB,uBAAA,CAAAnB,OAAA,gCACA,IAAAoB,6BAAA,CAAApB,OAAA,sCACA,IAAAqB,kBAAA,CAAArB,OAAA,2BACA,IAAAsB,aAAA,CAAAtB,OAAA,sBAA8C,IAAAuB,WAAA,CAAAvB,OAAA,+BAAAI,uBAAAoB,CAAA,SAAAA,CAAA,EAAAA,CAAA,CAAAC,UAAA,CAAAD,CAAA,EAAAE,OAAA,CAAAF,CAAA,YAAAG,yBAAAH,CAAA,wBAAAI,OAAA,iBAAAC,CAAA,KAAAD,OAAA,GAAAE,CAAA,KAAAF,OAAA,UAAAD,wBAAA,UAAAA,yBAAAH,CAAA,SAAAA,CAAA,CAAAM,CAAA,CAAAD,CAAA,IAAAL,CAAA,YAAAtB,wBAAAsB,CAAA,CAAAK,CAAA,MAAAA,CAAA,EAAAL,CAAA,EAAAA,CAAA,CAAAC,UAAA,QAAAD,CAAA,WAAAA,CAAA,mBAAAA,CAAA,qBAAAA,CAAA,QAAAE,OAAA,CAAAF,CAAA,MAAAM,CAAA,CAAAH,wBAAA,CAAAE,CAAA,KAAAC,CAAA,EAAAA,CAAA,CAAAC,GAAA,CAAAP,CAAA,SAAAM,CAAA,CAAAE,GAAA,CAAAR,CAAA,MAAAS,CAAA,EAAAC,SAAA,OAAAC,CAAA,CAAAC,MAAA,CAAAC,cAAA,EAAAD,MAAA,CAAAE,wBAAA,SAAAC,CAAA,IAAAf,CAAA,gBAAAe,CAAA,KAAAC,cAAA,CAAAC,IAAA,CAAAjB,CAAA,CAAAe,CAAA,OAAAG,CAAA,CAAAP,CAAA,CAAAC,MAAA,CAAAE,wBAAA,CAAAd,CAAA,CAAAe,CAAA,OAAAG,CAAA,GAAAA,CAAA,CAAAV,GAAA,EAAAU,CAAA,CAAAC,GAAA,EAAAP,MAAA,CAAAC,cAAA,CAAAJ,CAAA,CAAAM,CAAA,CAAAG,CAAA,EAAAT,CAAA,CAAAM,CAAA,EAAAf,CAAA,CAAAe,CAAA,UAAAN,CAAA,CAAAP,OAAA,CAAAF,CAAA,CAAAM,CAAA,EAAAA,CAAA,CAAAa,GAAA,CAAAnB,CAAA,CAAAS,CAAA,EAAAA,CAAA,EAI9C,GAAM,CAAAW,oBAA8B,CAAG,EAAE,CACzC,GAAM,CAAAC,qBAA+B,CAAG,EAAE,CAO1C,GAAM,CAAAC,gBAAe,CACnB,QADI,CAAAA,eAAeA,CACnBC,KAA+B,CACe,CAC9C,GAAIA,KAAK,GAAKC,SAAS,CAAE,CACvB,OACF,CAGA,GAAQ,CAAAC,GAAG,CAAkCF,KAAK,CAA1CE,GAAG,CAAEC,UAAU,CAAsBH,KAAK,CAArCG,UAAU,CAAKC,YAAA,CAAAC,wBAAA,CAAiBL,KAAK,CAAAM,SAAA,EAElD,OAAAjB,MAAA,CAAAkB,MAAA,IACKH,YAAY,EACfI,KAAK,CAAE,IAAI,CACXC,MAAM,CAAET,KAAK,CAACS,MAAM,CAACC,GAAG,CAAE,SAAAC,KAAK,CAAK,CAClC,GAAIA,KAAK,CAACX,KAAK,GAAKC,SAAS,CAAE,CAC7B,MAAO,CAAAU,KAAK,CAGd,CAEA,OAAAtB,MAAA,CAAAkB,MAAA,IAAYI,KAAK,EAAEX,KAAK,CAAED,gBAAe,CAACY,KAAK,CAACX,KAAK,IACvD,CAAC,IAEL,CAAC,CAcM,GAAM,CAAAY,uBAAuB,CAAAC,OAAA,CAAAD,uBAAA,CAAG1D,KAAK,CAAC4D,UAAU,CACrD,QAAS,CAAAF,uBAAuBA,CAAAG,IAAA,CAU9BC,GAAsD,CACtD,IATE,CAAAC,YAAY,CAAAF,IAAA,CAAZE,YAAY,CACZC,aAAa,CAAAH,IAAA,CAAbG,aAAa,CACbC,OAAO,CAAAJ,IAAA,CAAPI,OAAO,CACPC,iBAAiB,CAAAL,IAAA,CAAjBK,iBAAiB,CAAAC,qBAAA,CAAAN,IAAA,CACjBO,wBAAwB,CAAxBA,wBAAwB,CAAAD,qBAAA,UAAG,KAAK,CAAAA,qBAAA,CAChCE,KAAK,CAAAR,IAAA,CAALQ,KAAK,CACLC,QAAA,CAAAT,IAAA,CAAAS,QAAA,CAIF,GAAM,CAAAC,MAAM,CAAGvE,KAAK,CAACwE,UAAU,CAAC3D,uBAAA,CAAA4D,sBAAsB,CAAC,CACvD,GAAM,CAAAC,WAAW,CAAG,GAAAvD,6BAAA,CAAAwD,4BAA4B,EAAC,CAAC,CAElD,GAAI,CAACJ,MAAM,CAACK,SAAS,EAAI,CAACF,WAAW,CAAE,CACrC,KAAM,IAAI,CAAAG,KAAK,CACb,kXACF,CAAC,CACH,CAEA,IAAAC,KAAA,CACE,GAAAzD,aAAA,CAAA0D,YAAY,EAAQ,iBAClB,CAAAlC,gBAAe,CAACkB,YAAY,EAAI,IAAI,CAAGhB,SAAS,CAAGgB,YAAY,CACjE,GAAC,CAHKjB,KAAK,CAAAgC,KAAA,CAALhC,KAAK,CAAEkC,QAAQ,CAAAF,KAAA,CAARE,QAAQ,CAAEC,QAAQ,CAAAH,KAAA,CAARG,QAAQ,CAAEC,cAAc,CAAAJ,KAAA,CAAdI,cAAc,CAAEC,YAAA,CAAAL,KAAA,CAAAK,YAAA,CAKnD,GAAM,CAAAC,eAAe,CAAGpF,KAAK,CAACqF,MAAM,CAAU,IAAI,CAAC,CAEnD,GAAM,CAAAC,eAAe,CAAGtF,KAAK,CAACqF,MAAM,CAAqB,CAAC,CAE1D,GAAM,CAAAE,MAAM,CAAGvF,KAAK,CAACwF,WAAW,CAAC,iBAAM,CAAAF,eAAe,CAACG,OAAO,GAAE,EAAE,CAAC,CAEnE,GAAM,CAAAC,MAAM,CAAG1F,KAAK,CAACwF,WAAW,CAAE,SAAAxC,GAAW,CAAK,CAChDsC,eAAe,CAACG,OAAO,CAAGzC,GAAG,CAC/B,CAAC,CAAE,EAAE,CAAC,CAEN,IAAA2C,KAAA,CAAmC,GAAA3E,kBAAA,CAAA4E,iBAAiB,EAAC,CAAC,CAA9CC,SAAS,CAAAF,KAAA,CAATE,SAAS,CAAEC,WAAA,CAAAH,KAAA,CAAAG,WAAA,CAEnB,IAAAC,KAAA,CAA6C,GAAA7E,uBAAA,CAAA8E,sBAAsB,EAAC,CAAC,CAA7DC,cAAc,CAAAF,KAAA,CAAdE,cAAc,CAAEC,gBAAA,CAAAH,KAAA,CAAAG,gBAAA,CAExB,GAAM,CAAAC,QAAQ,CAAG,GAAAjG,kBAAA,CAAAuB,OAAiB,EAE9B,SAAA2E,MAEkD,CAC/C,CACH,GAAIP,SAAS,CAACQ,KAAK,CAAC,CAAC,CAAC,EAAI,IAAI,CAAE,CAC9BC,OAAO,CAACC,KAAK,CAACjG,6BAAA,CAAAkG,qBAAqB,CAAC,CACtC,CAAC,IAAM,CACLX,SAAS,CAACQ,KAAK,CAAC,CAAC,CAAC,CAAE,SAAAI,UAAU,QAAK,CAAAA,UAAU,CAACN,QAAQ,CAACC,MAAM,CAAC,GAAC,CACjE,CACF,CACF,CAAC,CAED,GAAM,CAAAM,SAAS,CAAG,GAAAxG,kBAAA,CAAAuB,OAAiB,EAAC,UAAM,CACxC,GAAIoE,SAAS,CAACQ,KAAK,CAAC,CAAC,CAAC,EAAI,IAAI,CAAE,CAC9B,MAAO,MAAK,CACd,CAEA,IAAAM,iBAAA,CAA4Bd,SAAS,CAACQ,KAAK,CAAC,CAAC,CAAC,CAAE,SAAAI,UAAU,QACxD,CAAAA,UAAU,CAACC,SAAS,CAAC,CACvB,GAAC,CAFOE,MAAM,CAAAD,iBAAA,CAANC,MAAM,CAAEC,OAAA,CAAAF,iBAAA,CAAAE,OAAA,CAIhB,GAAIA,OAAO,CAAE,CACX,MAAO,CAAAD,MAAM,CACf,CAAC,IAAM,CACL,MAAO,MAAK,CACd,CACF,CAAC,CAAC,CAEF,GAAM,CAAAE,SAAS,CAAG,GAAA5G,kBAAA,CAAAuB,OAAiB,EAChC,SAAAqB,KAAuD,CAAK,KAAAiE,UAAA,CAC3D,GAAM,CAAAC,MAAM,EAAAD,UAAA,CAAGjE,KAAK,cAALA,KAAK,CAAEE,GAAG,QAAA+D,UAAA,CAAId,cAAc,CAACjB,QAAQ,CAACiC,IAAI,cAA5BhB,cAAc,CAACjB,QAAQ,CAACiC,IAAI,CAAG,CAAC,CAACjE,GAAG,CAEjE,GAAIgE,MAAM,EAAI,IAAI,CAAE,CAClBV,OAAO,CAACC,KAAK,CAACjG,6BAAA,CAAAkG,qBAAqB,CAAC,CACtC,CAAC,IAAM,CACLX,SAAS,CAACQ,KAAK,CAAC,CAAC,CAAC,CAAE,SAAAI,UAAU,QAC5B,CAAAA,UAAU,CAACN,QAAQ,CAAAhE,MAAA,CAAAkB,MAAA,IACdvD,QAAA,CAAAoH,aAAa,CAACC,KAAK,CAACrE,KAAK,CAAC,EAC7BkE,MAAA,CAAAA,MAAA,EACD,CACH,GAAC,CACH,CACF,CACF,CAAC,CAED,GAAM,CAAAI,YAAY,CAAG,GAAAlH,kBAAA,CAAAuB,OAAiB,EAAC,UAAM,CAC3C,MAAO,CAAAwE,cAAc,CAACjB,QAAQ,CAACiC,IAAI,cAA5BhB,cAAc,CAACjB,QAAQ,CAACiC,IAAI,CAAG,CAAC,CACzC,CAAC,CAAC,CAEF,GAAM,CAAAI,eAAe,CAAG,GAAAnH,kBAAA,CAAAuB,OAAiB,EAAC,UAAM,CAC9C,GAAM,CAAAqB,KAAK,CAAGsE,YAAY,CAAC,CAAC,CAE5B,GAAItE,KAAK,EAAI,IAAI,CAAE,CACjB,MAAO,CAAAC,SAAS,CAClB,CAEA,GAAM,CAAAU,KAAK,CAAG,GAAAhD,iBAAA,CAAA6G,gBAAgB,EAACxE,KAAK,CAAC,CAErC,MAAO,CAAAW,KAAK,CACd,CAAC,CAAC,CAEF,GAAM,CAAA8D,OAAO,CAAG,GAAArH,kBAAA,CAAAuB,OAAiB,EAAC,iBAAM,CAAAoE,SAAS,CAACQ,KAAK,CAAC,CAAC,CAAC,EAAI,IAAI,GAAC,CAEnE,GAAM,CAAAmB,OAAO,CAAG,GAAAvG,gBAAA,CAAAwG,eAAe,EAA8B,CAAC,CAE9D,IAAAC,KAAA,CAAgD,GAAAtG,kBAAA,CAAAuG,iBAAiB,EAAC,CAAC,CAAC,CAAC,CAA7DC,gBAAgB,CAAAF,KAAA,CAAhBE,gBAAgB,CAAEC,iBAAA,CAAAH,KAAA,CAAAG,iBAAA,CAE1B,GAAM,CAAApB,UAAiD,CAAGzG,KAAK,CAAC8H,OAAO,CACrE,kBAAA3F,MAAA,CAAAkB,MAAA,IACKlB,MAAM,CAAC4F,IAAI,CAACjI,QAAA,CAAAoH,aAAa,CAAC,CAACc,MAAM,CAAM,SAACC,GAAG,CAAEC,IAAI,CAAK,CACvDD,GAAG,CAACC,IAAI,CAAC,CAAG,eAAAC,qBAAA,QAEVhC,QAAQ,CAAC,CAAAgC,qBAAA,CAAArI,QAAA,CAAAoH,aAAa,EAACgB,IAAI,CAAC,CAAAE,KAAA,CAAAD,qBAAA,CAAAE,SAAQ,CAAC,CAAC,IACxC,MAAO,CAAAJ,GAAG,CACZ,CAAC,CAAE,CAAC,CAAC,CAAC,CACHT,OAAO,CAACc,MAAM,CAAC,MAAM,CAAC,EACzBnC,QAAQ,CAARA,QAAQ,CACRW,SAAS,CAATA,SAAS,CACTyB,SAAS,CAAE,QAAX,CAAAA,SAASA,CAAA,QAAQ,KAAI,GACrB7B,SAAS,CAATA,SAAS,CACT8B,SAAS,CAAE,QAAX,CAAAA,SAASA,CAAA,QAAQ,CAAAzF,SAAS,GAC1BiC,QAAQ,CAARA,QAAQ,CACRoC,YAAY,CAAZA,YAAY,CACZC,eAAe,CAAfA,eAAe,CACfQ,iBAAiB,CAAjBA,iBAAiB,CACjBN,OAAO,CAAPA,OAAO,CACPkB,UAAU,CAAE,QAAZ,CAAAA,UAAUA,CAAA,CAAQ,CAChB,KAAM,IAAI,CAAA5D,KAAK,CAAC,yCAAyC,CAAC,CAC5D,KACA,CACF,CACE6B,SAAS,CACTP,QAAQ,CACRqB,OAAO,CACPK,iBAAiB,CACjBR,eAAe,CACfD,YAAY,CACZpC,QAAQ,CACRuC,OAAO,CACPT,SAAS,CAEb,CAAC,CAED9G,KAAK,CAAC0I,mBAAmB,CAAC5E,GAAG,CAAE,iBAAM,CAAA2C,UAAU,GAAE,CAACA,UAAU,CAAC,CAAC,CAE9D,GAAM,CAAAkC,gBAAgB,CAAG,GAAAzI,kBAAA,CAAAuB,OAAiB,EACxC,SAAC2E,MAAwB,CAAEwC,IAAa,CAAK,CAC3CpB,OAAO,CAACqB,IAAI,CAAC,CACXC,IAAI,CAAE,mBAAmB,CACzBC,IAAI,CAAE,CAAE3C,MAAM,CAANA,MAAM,CAAEwC,IAAI,CAAJA,IAAI,CAAEI,KAAK,CAAEC,QAAQ,CAACxD,OAAQ,CAChD,CAAC,CAAC,CACJ,CACF,CAAC,CAED,GAAM,CAAAyD,qBAAqB,CAAGlJ,KAAK,CAACqF,MAAM,CAAqB,CAAC,CAEhE,GAAM,CAAA8D,eAAe,CAAG,GAAAjJ,kBAAA,CAAAuB,OAAiB,EAAE,SAAA2H,OAAe,CAAK,CAC7D,GAAIF,qBAAqB,CAACzD,OAAO,GAAK2D,OAAO,CAAE,CAC7C,OACF,CAEAF,qBAAqB,CAACzD,OAAO,CAAG2D,OAAO,CAEvC5B,OAAO,CAACqB,IAAI,CAAC,CACXC,IAAI,CAAE,SAAS,CACfC,IAAI,CAAE,CAAEK,OAAA,CAAAA,OAAQ,CAClB,CAAC,CAAC,CACJ,CAAC,CAAC,CAEF,GAAM,CAAAH,QAAQ,CAAGjJ,KAAK,CAACqF,MAAM,CAAqB,CAAC,CAEnD,GAAM,CAAAgE,cAAc,CAAGrJ,KAAK,CAAC8H,OAAO,CAClC,iBAAO,CACLhC,WAAW,CAAXA,WAAW,CACXI,gBAAgB,CAAhBA,gBAAgB,CAChByC,gBAAgB,CAAhBA,gBAAgB,CAChBQ,eAAe,CAAfA,eAAe,CACfjE,cAAc,CAAdA,cAAc,CACdC,YAAY,CAAZA,YAAY,CACZ8D,QAAA,CAAAA,QACF,CAAC,EAAC,CACF,CACEnD,WAAW,CACXI,gBAAgB,CAChByC,gBAAgB,CAChBQ,eAAe,CACfjE,cAAc,CACdC,YAAY,CAEhB,CAAC,CAED,GAAM,CAAAmE,YAAY,CAAGtJ,KAAK,CAACqF,MAAM,CAAC,IAAI,CAAC,CAEvC,GAAM,CAAAkE,YAAY,CAAGvJ,KAAK,CAACwF,WAAW,CAAC,iBAAM,CAAA8D,YAAY,CAAC7D,OAAO,GAAE,EAAE,CAAC,CAEtE,GAAM,CAAA+D,OAAO,CAAGxJ,KAAK,CAAC8H,OAAO,CAC3B,iBAAO,CACLhF,KAAK,CAALA,KAAK,CACLkC,QAAQ,CAARA,QAAQ,CACRC,QAAQ,CAARA,QAAQ,CACRM,MAAM,CAANA,MAAM,CACNG,MAAM,CAANA,MAAM,CACN6D,YAAY,CAAZA,YAAY,CACZ3B,gBAAA,CAAAA,gBACF,CAAC,EAAC,CACF,CACE9E,KAAK,CACLkC,QAAQ,CACRC,QAAQ,CACRM,MAAM,CACNG,MAAM,CACN6D,YAAY,CACZ3B,gBAAgB,CAEpB,CAAC,CAED,GAAM,CAAA6B,UAAU,CAAGzJ,KAAK,CAACqF,MAAM,CAACpB,OAAO,CAAC,CACxC,GAAM,CAAAyF,gBAAgB,CAAG1J,KAAK,CAACqF,MAAM,CAACrB,aAAa,CAAC,CAEpDhE,KAAK,CAAC2J,SAAS,CAAC,UAAM,CACpBL,YAAY,CAAC7D,OAAO,CAAG,KAAK,CAC5BiE,gBAAgB,CAACjE,OAAO,CAAGzB,aAAa,CACxCyF,UAAU,CAAChE,OAAO,CAAGxB,OAAO,CAC9B,CAAC,CAAC,CAEF,GAAM,CAAA2F,gBAAgB,CAAG5J,KAAK,CAACqF,MAAM,CAAC,KAAK,CAAC,CAE5CrF,KAAK,CAAC2J,SAAS,CAAC,UAAM,CACpB,GAAI,CAACC,gBAAgB,CAACnE,OAAO,EAAI8B,OAAO,CAAC,CAAC,CAAE,CAC1CqC,gBAAgB,CAACnE,OAAO,CAAG,IAAI,CAC/BgE,UAAU,CAAChE,OAAO,QAAlBgE,UAAU,CAAChE,OAAO,CAAG,CAAC,CACxB,CACF,CAAC,CAAE,CAAC3C,KAAK,CAAEyE,OAAO,CAAC,CAAC,CAEpBvH,KAAK,CAAC2J,SAAS,CAAC,UAAM,CACpB,GAAM,CAAAE,aAAa,CAAGzC,YAAY,CAAC,CAAC,CAEpC,GAAI0C,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,YAAY,CAAE,CACzC,GAAIH,aAAa,GAAK9G,SAAS,CAAE,CAC/B,GAAM,CAAAkH,kBAAkB,CAAG,GAAA5J,kBAAA,CAAA6J,iBAAiB,EAACL,aAAa,CAAC,CAE3D,GAAI,CAACI,kBAAkB,CAACE,YAAY,CAAE,CACpC,GAAQ,CAAAC,QAAQ,CAAaH,kBAAkB,CAAvCG,QAAQ,CAAEC,MAAA,CAAWJ,kBAAkB,CAA7BI,MAAA,CAElB,GAAI,CAAAC,IAAI,CAAG,EAAE,CACb,GAAI,CAAAC,OAAyB,CAAGV,aAAa,CAC7C,GAAI,CAAAW,MAAM,CAAG,KAAK,CAElB,IAAK,GAAI,CAAA/H,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAG2H,QAAQ,CAACK,MAAM,CAAEhI,CAAC,EAAE,CAAE,CACxC,GAAM,CAAAiI,IAAI,CAAGN,QAAQ,CAAC3H,CAAC,CAAC,CACxB,GAAM,CAAAkI,IAAI,CAAGP,QAAQ,CAAC3H,CAAC,CAAG,CAAC,CAAC,CAE5B8H,OAAO,CAAGA,OAAO,CAACG,IAAI,CAAC,CAEvB,GAAI,CAACF,MAAM,EAAIE,IAAI,GAAK,OAAO,CAAE,CAC/B,SACF,CAAC,IAAM,IAAI,CAACF,MAAM,EAAIE,IAAI,GAAK,QAAQ,CAAE,CACvC,GAAIJ,IAAI,CAAE,CACRA,IAAI,EAAI,KAAK,CACf,CACF,CAAC,IAAM,IACL,CAACE,MAAM,EACP,MAAO,CAAAE,IAAI,GAAK,QAAQ,EACxBC,IAAI,GAAK,QAAQ,CACjB,KAAAC,QAAA,CACAN,IAAI,GAAAM,QAAA,CAAIL,OAAO,eAAPK,QAAA,CAAS1C,IAAI,CACvB,CAAC,IAAM,IAAI,CAACsC,MAAM,CAAE,CAClBF,IAAI,EAAI,MAAMI,IAAI,EAAE,CACpBF,MAAM,CAAG,IAAI,CACf,CAAC,IAAM,CACL,GAAI,MAAO,CAAAE,IAAI,GAAK,QAAQ,EAAI,UAAU,CAACG,IAAI,CAACH,IAAI,CAAC,CAAE,CACrDJ,IAAI,EAAI,IAAII,IAAI,GAAG,CACrB,CAAC,IAAM,IAAI,aAAa,CAACG,IAAI,CAACH,IAAI,CAAC,CAAE,CACnCJ,IAAI,EAAI,IAAII,IAAI,EAAE,CACpB,CAAC,IAAM,CACLJ,IAAI,EAAI,IAAIQ,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC,GAAG,CACrC,CACF,CACF,CAEA,GAAM,CAAAM,OAAO,CAAG,yEAAyEV,IAAI,KAAKD,MAAM,4aAA4a,CAEphB,GAAI,CAAC1H,oBAAoB,CAACsI,QAAQ,CAACD,OAAO,CAAC,CAAE,CAC3CrI,oBAAoB,CAACuI,IAAI,CAACF,OAAO,CAAC,CAClC1E,OAAO,CAAC6E,IAAI,CAACH,OAAO,CAAC,CACvB,CACF,CAEA,GAAM,CAAAI,yBAAyB,CAC7B,GAAAhL,yBAAA,CAAAiL,wBAAwB,EAACxB,aAAa,CAAC,CAEzC,GAAIuB,yBAAyB,CAACX,MAAM,CAAE,CACpC,GAAM,CAAAO,QAAO,CAAG,uEAAuEI,yBAAyB,CAAC5H,GAAG,CACjH,SAAA8H,SAAS,QAAK,KAAKA,SAAS,CAACC,IAAI,CAAC,IAAI,CAAC,EAC1C,GAAC,+GAA+G,CAEhH,GAAI,CAAC3I,qBAAqB,CAACqI,QAAQ,CAACD,QAAO,CAAC,CAAE,CAC5CpI,qBAAqB,CAACsI,IAAI,CAACF,QAAO,CAAC,CACnC1E,OAAO,CAAC6E,IAAI,CAACH,QAAO,CAAC,CACvB,CACF,CACF,CACF,CAEAxD,OAAO,CAACqB,IAAI,CAAC,CAAEC,IAAI,CAAE,OAAO,CAAEC,IAAI,CAAE,CAAEjG,KAAA,CAAAA,KAAM,CAAE,CAAC,CAAC,CAEhD,GAAI,CAACsC,eAAe,CAACK,OAAO,EAAIiE,gBAAgB,CAACjE,OAAO,CAAE,CACxDiE,gBAAgB,CAACjE,OAAO,CAACoE,aAAa,CAAC,CACzC,CAEAzE,eAAe,CAACK,OAAO,CAAG,KAAK,CACjC,CAAC,CAAE,CAAC2B,YAAY,CAAEI,OAAO,CAAE1E,KAAK,CAAC,CAAC,CAElC,GAAM,CAAA0I,wBAAwB,CAAG,GAAAtL,kBAAA,CAAAuB,OAAiB,EAC/C,SAAA2E,MAAwB,CAAK,CAC5B,GAAI0D,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,YAAY,CAAE,CACzC,OACF,CAEA,GAAM,CAAAyB,OAAwC,CAAGrF,MAAM,CAACqF,OAAO,CAE/D,GAAI,CAAAT,OAAO,CAAG,eAAe5E,MAAM,CAAC0C,IAAI,IACtC2C,OAAO,CAAG,iBAAiBX,IAAI,CAACC,SAAS,CAAC3E,MAAM,CAACqF,OAAO,CAAC,EAAE,CAAG,EAAE,oCAC9B,CAEpC,OAAQrF,MAAM,CAAC0C,IAAI,EACjB,IAAK,UAAU,CACf,IAAK,MAAM,CACX,IAAK,SAAS,CACd,IAAK,SAAS,CACZ,GAAI2C,OAAO,QAAPA,OAAO,CAAEvD,IAAI,CAAE,CACjB8C,OAAO,EAAI,mCAAmCS,OAAO,CAACvD,IAAI,iSAAiS,CAC7V,CAAC,IAAM,CACL8C,OAAO,EAAI,mIAAmI,CAChJ,CAEA,MACF,IAAK,SAAS,CACd,IAAK,KAAK,CACV,IAAK,YAAY,CACfA,OAAO,EAAI,wCAAwC,CACnD,MACF,IAAK,aAAa,CAClB,IAAK,cAAc,CACnB,IAAK,eAAe,CAClBA,OAAO,EAAI,+CAA+C,CAC1D,MACJ,CAEAA,OAAO,EAAI,0EAA0E,CAErF1E,OAAO,CAACC,KAAK,CAACyE,OAAO,CAAC,CACxB,CACF,CAAC,CAED,MACE,GAAA1J,WAAA,CAAAoK,GAAA,EAAC9K,iCAAA,CAAA+K,gCAAgC,CAACC,QAAQ,EAACC,KAAK,CAAE,KAAM,CAAAvH,QAAA,CACtD,GAAAhD,WAAA,CAAAoK,GAAA,EAAC/K,8BAAA,CAAAmL,6BAA6B,CAACF,QAAQ,EAACC,KAAK,CAAEpF,UAAW,CAAAnC,QAAA,CACxD,GAAAhD,WAAA,CAAAoK,GAAA,EAAChL,yBAAA,CAAAqL,wBAAwB,CAACH,QAAQ,EAACC,KAAK,CAAExC,cAAe,CAAA/E,QAAA,CACvD,GAAAhD,WAAA,CAAAoK,GAAA,EAAC7K,uBAAA,CAAA4D,sBAAsB,CAACmH,QAAQ,EAACC,KAAK,CAAErC,OAAQ,CAAAlF,QAAA,CAC9C,GAAAhD,WAAA,CAAAoK,GAAA,EAAC3K,uBAAA,CAAAiL,sBAAsB,CAACJ,QAAQ,EAC9BC,KAAK,CAAE3H,iBAAiB,OAAjBA,iBAAiB,CAAIsH,wBAAyB,CAAAlH,QAAA,CAErD,GAAAhD,WAAA,CAAAoK,GAAA,EAACnL,mCAAA,CAAA0L,kCAAkC,CAACL,QAAQ,EAC1CC,KAAK,CAAEzH,wBAAyB,CAAAE,QAAA,CAEhC,GAAAhD,WAAA,CAAAoK,GAAA,EAAClL,sBAAA,CAAA0L,qBAAqB,EAAA5H,QAAA,CACpB,GAAAhD,WAAA,CAAAoK,GAAA,EAAC5K,cAAA,CAAAqL,aAAa,EAACN,KAAK,CAAExH,KAAM,CAAAC,QAAA,CAAEA,QAAQ,CAAgB,CAAC,CAClC,CAAC,CACmB,CAAC,CACf,CAAC,CACH,CAAC,CACD,CAAC,CACE,CAAC,CACA,CAAC,CAEhD,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}