{"ast":null,"code":"\"use strict\";var _objectWithoutProperties=require(\"@babel/runtime/helpers/objectWithoutProperties\");var _excluded=[\"linking\"];Object.defineProperty(exports,\"__esModule\",{value:true});exports.createStaticNavigation=createStaticNavigation;var _core=require(\"@react-navigation/core\");var React=_interopRequireWildcard(require(\"react\"));var _NavigationContainer=require(\"./NavigationContainer.js\");var _jsxRuntime=require(\"react/jsx-runtime\");function _getRequireWildcardCache(e){if(\"function\"!=typeof WeakMap)return null;var r=new WeakMap(),t=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r;})(e);}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if(\"default\"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u];}return n.default=e,t&&t.set(e,n),n;}function createStaticNavigation(tree){var Component=(0,_core.createComponentForStaticNavigation)(tree,'RootNavigator');function Navigation(_ref,ref){var _linking$config4,_linking$config5;var linking=_ref.linking,rest=_objectWithoutProperties(_ref,_excluded);var linkingConfig=React.useMemo(function(){var _linking$config,_linking$config2,_linking$config3;var screens=(0,_core.createPathConfigForStaticNavigation)(tree,{initialRouteName:linking==null||(_linking$config=linking.config)==null?void 0:_linking$config.initialRouteName},(linking==null?void 0:linking.enabled)==='auto');if(!screens)return;return{path:linking==null||(_linking$config2=linking.config)==null?void 0:_linking$config2.path,initialRouteName:linking==null||(_linking$config3=linking.config)==null?void 0:_linking$config3.initialRouteName,screens:screens};},[linking==null?void 0:linking.enabled,linking==null||(_linking$config4=linking.config)==null?void 0:_linking$config4.path,linking==null||(_linking$config5=linking.config)==null?void 0:_linking$config5.initialRouteName]);var memoizedLinking=React.useMemo(function(){if(!linking){return undefined;}var enabled=typeof linking.enabled==='boolean'?linking.enabled:(linkingConfig==null?void 0:linkingConfig.screens)!=null;return Object.assign({},linking,{enabled:enabled,config:linkingConfig});},[linking,linkingConfig]);if((linking==null?void 0:linking.enabled)===true&&(linkingConfig==null?void 0:linkingConfig.screens)==null){throw new Error('Linking is enabled but no linking configuration was found for the screens.\\n\\n'+'To solve this:\\n'+\"- Specify a 'linking' property for the screens you want to link to.\\n\"+\"- Or set 'linking.enabled' to 'auto' to generate paths automatically.\\n\\n\"+'See usage guide: https://reactnavigation.org/docs/static-configuration#linking');}return(0,_jsxRuntime.jsx)(_NavigationContainer.NavigationContainer,Object.assign({},rest,{ref:ref,linking:memoizedLinking,children:(0,_jsxRuntime.jsx)(Component,{})}));}return React.forwardRef(Navigation);}","map":{"version":3,"names":["_core","require","React","_interopRequireWildcard","_NavigationContainer","_jsxRuntime","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","createStaticNavigation","tree","Component","createComponentForStaticNavigation","Navigation","_ref","ref","_linking$config4","_linking$config5","linking","rest","_objectWithoutProperties","_excluded","linkingConfig","useMemo","_linking$config","_linking$config2","_linking$config3","screens","createPathConfigForStaticNavigation","initialRouteName","config","enabled","path","memoizedLinking","undefined","assign","Error","jsx","NavigationContainer","children","forwardRef"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/@react-navigation/native/src/createStaticNavigation.tsx"],"sourcesContent":["import {\n  createComponentForStaticNavigation,\n  createPathConfigForStaticNavigation,\n  type NavigationContainerRef,\n  type ParamListBase,\n  type StaticNavigation,\n} from '@react-navigation/core';\nimport * as React from 'react';\n\nimport { NavigationContainer } from './NavigationContainer';\nimport type { LinkingOptions } from './types';\n\ntype Props = Omit<\n  React.ComponentProps<typeof NavigationContainer>,\n  'linking' | 'children'\n> & {\n  /**\n   * Options for deep linking.\n   */\n  linking?: Omit<LinkingOptions<ParamListBase>, 'config' | 'enabled'> & {\n    /**\n     * Whether deep link handling should be enabled.\n     * Defaults to `true` if any `linking` options are specified, `false` otherwise.\n     *\n     * When 'auto' is specified, all leaf screens will get a autogenerated path.\n     * The generated path will be a kebab-case version of the screen name.\n     * This can be overridden for specific screens by specifying `linking` for the screen.\n     */\n    enabled?: 'auto' | true | false;\n    /**\n     * Additional configuration\n     */\n    config?: Omit<\n      NonNullable<LinkingOptions<ParamListBase>['config']>,\n      'screens'\n    >;\n  };\n};\n\n/**\n * Create a navigation component from a static navigation config.\n * The returned component is a wrapper around `NavigationContainer`.\n *\n * @param tree Static navigation config.\n * @returns Navigation component to use in your app.\n */\nexport function createStaticNavigation(tree: StaticNavigation<any, any, any>) {\n  const Component = createComponentForStaticNavigation(tree, 'RootNavigator');\n\n  function Navigation(\n    { linking, ...rest }: Props,\n    ref: React.Ref<NavigationContainerRef<ParamListBase>>\n  ) {\n    const linkingConfig = React.useMemo(() => {\n      const screens = createPathConfigForStaticNavigation(\n        tree,\n        { initialRouteName: linking?.config?.initialRouteName },\n        linking?.enabled === 'auto'\n      );\n\n      if (!screens) return;\n\n      return {\n        path: linking?.config?.path,\n        initialRouteName: linking?.config?.initialRouteName,\n        screens,\n      };\n    }, [\n      linking?.enabled,\n      linking?.config?.path,\n      linking?.config?.initialRouteName,\n    ]);\n\n    const memoizedLinking = React.useMemo(() => {\n      if (!linking) {\n        return undefined;\n      }\n\n      const enabled =\n        typeof linking.enabled === 'boolean'\n          ? linking.enabled\n          : linkingConfig?.screens != null;\n\n      return {\n        ...linking,\n        enabled,\n        config: linkingConfig,\n      };\n    }, [linking, linkingConfig]);\n\n    if (linking?.enabled === true && linkingConfig?.screens == null) {\n      throw new Error(\n        'Linking is enabled but no linking configuration was found for the screens.\\n\\n' +\n          'To solve this:\\n' +\n          \"- Specify a 'linking' property for the screens you want to link to.\\n\" +\n          \"- Or set 'linking.enabled' to 'auto' to generate paths automatically.\\n\\n\" +\n          'See usage guide: https://reactnavigation.org/docs/static-configuration#linking'\n      );\n    }\n\n    return (\n      <NavigationContainer {...rest} ref={ref} linking={memoizedLinking}>\n        <Component />\n      </NavigationContainer>\n    );\n  }\n\n  return React.forwardRef(Navigation);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}