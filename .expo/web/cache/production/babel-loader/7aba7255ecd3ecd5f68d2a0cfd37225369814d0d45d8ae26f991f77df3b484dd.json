{"ast":null,"code":"'use strict';var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.makeShareable=void 0;exports.makeShareableCloneOnUIRecursive=makeShareableCloneOnUIRecursive;exports.makeShareableCloneRecursive=makeShareableCloneRecursive;var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _NativeReanimated=_interopRequireDefault(require(\"./NativeReanimated\"));var _commonTypes=require(\"./commonTypes.js\");var _PlatformChecker=require(\"./PlatformChecker.js\");var _errors=require(\"./errors.js\");var _jsVersion=require(\"./platform-specific/jsVersion.js\");var _shareableMappingCache=require(\"./shareableMappingCache.js\");var _index=require(\"./logger/index.js\");var SHOULD_BE_USE_WEB=(0,_PlatformChecker.shouldBeUseWeb)();var MAGIC_KEY='REANIMATED_MAGIC_KEY';function isHostObject(value){'worklet';return MAGIC_KEY in value;}function isPlainJSObject(object){return Object.getPrototypeOf(object)===Object.prototype;}var INACCESSIBLE_OBJECT={__init:function __init(){'worklet';return new Proxy({},{get:function get(_,prop){if(prop==='_isReanimatedSharedValue'||prop==='__remoteFunction'){return false;}throw new _errors.ReanimatedError(`Trying to access property \\`${String(prop)}\\` of an object which cannot be sent to the UI runtime.`);},set:function set(){throw new _errors.ReanimatedError('Trying to write to an object which cannot be sent to the UI runtime.');}});}};var VALID_ARRAY_VIEWS_NAMES=['Int8Array','Uint8Array','Uint8ClampedArray','Int16Array','Uint16Array','Int32Array','Uint32Array','Float32Array','Float64Array','BigInt64Array','BigUint64Array','DataView'];var DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD=30;var processedObjectAtThresholdDepth;function makeShareableCloneRecursive(value){var shouldPersistRemote=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var depth=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;if(SHOULD_BE_USE_WEB){return value;}if(depth>=DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD){if(depth===DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD){processedObjectAtThresholdDepth=value;}else if(value===processedObjectAtThresholdDepth){throw new _errors.ReanimatedError('Trying to convert a cyclic object to a shareable. This is not supported.');}}else{processedObjectAtThresholdDepth=undefined;}var type=typeof value;var isTypeObject=type==='object';var isTypeFunction=type==='function';if((isTypeObject||isTypeFunction)&&value!==null){var cached=_shareableMappingCache.shareableMappingCache.get(value);if(cached===_shareableMappingCache.shareableMappingFlag){return value;}else if(cached!==undefined){return cached;}else{var toAdapt;if(Array.isArray(value)){toAdapt=value.map(function(element){return makeShareableCloneRecursive(element,shouldPersistRemote,depth+1);});freezeObjectIfDev(value);}else if(isTypeFunction&&!(0,_commonTypes.isWorkletFunction)(value)){toAdapt=value;freezeObjectIfDev(value);}else if(isHostObject(value)){toAdapt=value;}else if(isPlainJSObject(value)&&value.__workletContextObjectFactory){var workletContextObjectFactory=value.__workletContextObjectFactory;var handle=makeShareableCloneRecursive({__init:function __init(){'worklet';return workletContextObjectFactory();}});_shareableMappingCache.shareableMappingCache.set(value,handle);return handle;}else if(isPlainJSObject(value)||isTypeFunction){toAdapt={};if((0,_commonTypes.isWorkletFunction)(value)){if(__DEV__){var babelVersion=value.__initData.version;if(babelVersion!==undefined&&babelVersion!==_jsVersion.jsVersion){throw new _errors.ReanimatedError(`Mismatch between JavaScript code version and Reanimated Babel plugin version (${_jsVersion.jsVersion} vs. ${babelVersion}).        \nSee \\`https://docs.swmansion.com/react-native-reanimated/docs/guides/troubleshooting#mismatch-between-javascript-code-version-and-reanimated-babel-plugin-version\\` for more details.\nOffending code was: \\`${getWorkletCode(value)}\\``);}(0,_errors.registerWorkletStackDetails)(value.__workletHash,value.__stackDetails);}if(value.__stackDetails){delete value.__stackDetails;}toAdapt.__initData=makeShareableCloneRecursive(value.__initData,true,depth+1);}for(var _ref of Object.entries(value)){var _ref2=(0,_slicedToArray2.default)(_ref,2);var key=_ref2[0];var element=_ref2[1];if(key==='__initData'&&toAdapt.__initData!==undefined){continue;}toAdapt[key]=makeShareableCloneRecursive(element,shouldPersistRemote,depth+1);}freezeObjectIfDev(value);}else if(value instanceof RegExp){var pattern=value.source;var flags=value.flags;var _handle=makeShareableCloneRecursive({__init:function __init(){'worklet';return new RegExp(pattern,flags);}});_shareableMappingCache.shareableMappingCache.set(value,_handle);return _handle;}else if(value instanceof Error){var name=value.name,message=value.message,stack=value.stack;var _handle2=makeShareableCloneRecursive({__init:function __init(){'worklet';var error=new Error();error.name=name;error.message=message;error.stack=stack;return error;}});_shareableMappingCache.shareableMappingCache.set(value,_handle2);return _handle2;}else if(value instanceof ArrayBuffer){toAdapt=value;}else if(ArrayBuffer.isView(value)){var buffer=value.buffer;var typeName=value.constructor.name;var _handle3=makeShareableCloneRecursive({__init:function __init(){'worklet';if(!VALID_ARRAY_VIEWS_NAMES.includes(typeName)){throw new _errors.ReanimatedError(`Invalid array view name \\`${typeName}\\`.`);}var constructor=global[typeName];if(constructor===undefined){throw new _errors.ReanimatedError(`Constructor for \\`${typeName}\\` not found.`);}return new constructor(buffer);}});_shareableMappingCache.shareableMappingCache.set(value,_handle3);return _handle3;}else{var inaccessibleObject=makeShareableCloneRecursive(INACCESSIBLE_OBJECT);_shareableMappingCache.shareableMappingCache.set(value,inaccessibleObject);return inaccessibleObject;}var adapted=_NativeReanimated.default.makeShareableClone(toAdapt,shouldPersistRemote,value);_shareableMappingCache.shareableMappingCache.set(value,adapted);_shareableMappingCache.shareableMappingCache.set(adapted);return adapted;}}return _NativeReanimated.default.makeShareableClone(value,shouldPersistRemote,undefined);}var WORKLET_CODE_THRESHOLD=255;function getWorkletCode(value){var _value$__initData;var code=value==null||(_value$__initData=value.__initData)==null?void 0:_value$__initData.code;if(!code){return'unknown';}if(code.length>WORKLET_CODE_THRESHOLD){return`${code.substring(0,WORKLET_CODE_THRESHOLD)}...`;}return code;}function isRemoteFunction(value){'worklet';return!!value.__remoteFunction;}function freezeObjectIfDev(value){if(!__DEV__){return;}Object.entries(value).forEach(function(_ref3){var _ref4=(0,_slicedToArray2.default)(_ref3,2),key=_ref4[0],element=_ref4[1];var descriptor=Object.getOwnPropertyDescriptor(value,key);if(!descriptor.configurable){return;}Object.defineProperty(value,key,{get:function get(){return element;},set:function set(){_index.logger.warn(`Tried to modify key \\`${key}\\` of an object which has been already passed to a worklet. See \nhttps://docs.swmansion.com/react-native-reanimated/docs/guides/troubleshooting#tried-to-modify-key-of-an-object-which-has-been-converted-to-a-shareable \nfor more details.`);}});});Object.preventExtensions(value);}function makeShareableCloneOnUIRecursive(value){'worklet';if(SHOULD_BE_USE_WEB){return value;}function cloneRecursive(value){if(typeof value==='object'&&value!==null||typeof value==='function'){if(isHostObject(value)){return global._makeShareableClone(value,undefined);}if(isRemoteFunction(value)){return value.__remoteFunction;}if(Array.isArray(value)){return global._makeShareableClone(value.map(cloneRecursive),undefined);}var toAdapt={};for(var _ref5 of Object.entries(value)){var _ref6=(0,_slicedToArray2.default)(_ref5,2);var key=_ref6[0];var element=_ref6[1];toAdapt[key]=cloneRecursive(element);}return global._makeShareableClone(toAdapt,value);}return global._makeShareableClone(value,undefined);}return cloneRecursive(value);}function makeShareableJS(value){return value;}function makeShareableNative(value){if(_shareableMappingCache.shareableMappingCache.get(value)){return value;}var handle=makeShareableCloneRecursive({__init:function __init(){'worklet';return value;}});_shareableMappingCache.shareableMappingCache.set(value,handle);return value;}var makeShareable=exports.makeShareable=SHOULD_BE_USE_WEB?makeShareableJS:makeShareableNative;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","makeShareable","makeShareableCloneOnUIRecursive","makeShareableCloneRecursive","_slicedToArray2","_NativeReanimated","_commonTypes","_PlatformChecker","_errors","_jsVersion","_shareableMappingCache","_index","SHOULD_BE_USE_WEB","shouldBeUseWeb","MAGIC_KEY","isHostObject","isPlainJSObject","object","getPrototypeOf","prototype","INACCESSIBLE_OBJECT","__init","Proxy","get","_","prop","ReanimatedError","String","set","VALID_ARRAY_VIEWS_NAMES","DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD","processedObjectAtThresholdDepth","shouldPersistRemote","arguments","length","undefined","depth","type","isTypeObject","isTypeFunction","cached","shareableMappingCache","shareableMappingFlag","toAdapt","Array","isArray","map","element","freezeObjectIfDev","isWorkletFunction","__workletContextObjectFactory","workletContextObjectFactory","handle","__DEV__","babelVersion","__initData","version","jsVersion","getWorkletCode","registerWorkletStackDetails","__workletHash","__stackDetails","_ref","entries","_ref2","default","key","RegExp","pattern","source","flags","Error","name","message","stack","error","ArrayBuffer","isView","buffer","typeName","constructor","includes","global","inaccessibleObject","adapted","NativeReanimatedModule","makeShareableClone","WORKLET_CODE_THRESHOLD","_value$__initData","code","substring","isRemoteFunction","__remoteFunction","forEach","_ref3","_ref4","descriptor","getOwnPropertyDescriptor","configurable","logger","warn","preventExtensions","cloneRecursive","_makeShareableClone","_ref5","_ref6","makeShareableJS","makeShareableNative"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/react-native-reanimated/src/shareables.ts"],"sourcesContent":["'use strict';\nimport NativeReanimatedModule from './NativeReanimated';\nimport { isWorkletFunction } from './commonTypes';\nimport type {\n  ShareableRef,\n  FlatShareableRef,\n  WorkletFunction,\n} from './commonTypes';\nimport { shouldBeUseWeb } from './PlatformChecker';\nimport { ReanimatedError, registerWorkletStackDetails } from './errors';\nimport { jsVersion } from './platform-specific/jsVersion';\nimport {\n  shareableMappingCache,\n  shareableMappingFlag,\n} from './shareableMappingCache';\nimport { logger } from './logger';\n\n// for web/chrome debugger/jest environments this file provides a stub implementation\n// where no shareable references are used. Instead, the objects themselves are used\n// instead of shareable references, because of the fact that we don't have to deal with\n// running the code on separate VMs.\nconst SHOULD_BE_USE_WEB = shouldBeUseWeb();\n\nconst MAGIC_KEY = 'REANIMATED_MAGIC_KEY';\n\nfunction isHostObject(value: NonNullable<object>) {\n  'worklet';\n  // We could use JSI to determine whether an object is a host object, however\n  // the below workaround works well and is way faster than an additional JSI call.\n  // We use the fact that host objects have broken implementation of `hasOwnProperty`\n  // and hence return true for all `in` checks regardless of the key we ask for.\n  return MAGIC_KEY in value;\n}\n\nfunction isPlainJSObject(object: object) {\n  return Object.getPrototypeOf(object) === Object.prototype;\n}\n\n// The below object is used as a replacement for objects that cannot be transferred\n// as shareable values. In makeShareableCloneRecursive we detect if an object is of\n// a plain Object.prototype and only allow such objects to be transferred. This lets\n// us avoid all sorts of react internals from leaking into the UI runtime. To make it\n// possible to catch errors when someone actually tries to access such object on the UI\n// runtime, we use the below Proxy object which is instantiated on the UI runtime and\n// throws whenever someone tries to access its fields.\nconst INACCESSIBLE_OBJECT = {\n  __init: () => {\n    'worklet';\n    return new Proxy(\n      {},\n      {\n        get: (_: unknown, prop: string | symbol) => {\n          if (\n            prop === '_isReanimatedSharedValue' ||\n            prop === '__remoteFunction'\n          ) {\n            // not very happy about this check here, but we need to allow for\n            // \"inaccessible\" objects to be tested with isSharedValue check\n            // as it is being used in the mappers when extracting inputs recursively\n            // as well as with isRemoteFunction when cloning objects recursively.\n            // Apparently we can't check if a key exists there as HostObjects always\n            // return true for such tests, so the only possibility for us is to\n            // actually access that key and see if it is set to true. We therefore\n            // need to allow for this key to be accessed here.\n            return false;\n          }\n          throw new ReanimatedError(\n            `Trying to access property \\`${String(\n              prop\n            )}\\` of an object which cannot be sent to the UI runtime.`\n          );\n        },\n        set: () => {\n          throw new ReanimatedError(\n            'Trying to write to an object which cannot be sent to the UI runtime.'\n          );\n        },\n      }\n    );\n  },\n};\n\nconst VALID_ARRAY_VIEWS_NAMES = [\n  'Int8Array',\n  'Uint8Array',\n  'Uint8ClampedArray',\n  'Int16Array',\n  'Uint16Array',\n  'Int32Array',\n  'Uint32Array',\n  'Float32Array',\n  'Float64Array',\n  'BigInt64Array',\n  'BigUint64Array',\n  'DataView',\n];\n\nconst DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD = 30;\n// Below variable stores object that we process in makeShareableCloneRecursive at the specified depth.\n// We use it to check if later on the function reenters with the same object\nlet processedObjectAtThresholdDepth: unknown;\n\nexport function makeShareableCloneRecursive<T>(\n  value: any,\n  shouldPersistRemote = false,\n  depth = 0\n): ShareableRef<T> {\n  if (SHOULD_BE_USE_WEB) {\n    return value;\n  }\n  if (depth >= DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD) {\n    // if we reach certain recursion depth we suspect that we are dealing with a cyclic object.\n    // this type of objects are not supported and cannot be transferred as shareable, so we\n    // implement a simple detection mechanism that remembers the value at a given depth and\n    // tests whether we try reenter this method later on with the same value. If that happens\n    // we throw an appropriate error.\n    if (depth === DETECT_CYCLIC_OBJECT_DEPTH_THRESHOLD) {\n      processedObjectAtThresholdDepth = value;\n    } else if (value === processedObjectAtThresholdDepth) {\n      throw new ReanimatedError(\n        'Trying to convert a cyclic object to a shareable. This is not supported.'\n      );\n    }\n  } else {\n    processedObjectAtThresholdDepth = undefined;\n  }\n  // This one actually may be worth to be moved to c++, we also need similar logic to run on the UI thread\n  const type = typeof value;\n  const isTypeObject = type === 'object';\n  const isTypeFunction = type === 'function';\n  if ((isTypeObject || isTypeFunction) && value !== null) {\n    const cached = shareableMappingCache.get(value);\n    if (cached === shareableMappingFlag) {\n      return value;\n    } else if (cached !== undefined) {\n      return cached as ShareableRef<T>;\n    } else {\n      let toAdapt: any;\n      if (Array.isArray(value)) {\n        toAdapt = value.map((element) =>\n          makeShareableCloneRecursive(element, shouldPersistRemote, depth + 1)\n        );\n        freezeObjectIfDev(value);\n      } else if (isTypeFunction && !isWorkletFunction(value)) {\n        // this is a remote function\n        toAdapt = value;\n        freezeObjectIfDev(value);\n      } else if (isHostObject(value)) {\n        // for host objects we pass the reference to the object as shareable and\n        // then recreate new host object wrapping the same instance on the UI thread.\n        // there is no point of iterating over keys as we do for regular objects.\n        toAdapt = value;\n      } else if (\n        isPlainJSObject(value) &&\n        value.__workletContextObjectFactory\n      ) {\n        const workletContextObjectFactory = value.__workletContextObjectFactory;\n        const handle = makeShareableCloneRecursive({\n          __init: () => {\n            'worklet';\n            return workletContextObjectFactory();\n          },\n        });\n        shareableMappingCache.set(value, handle);\n        return handle as ShareableRef<T>;\n      } else if (isPlainJSObject(value) || isTypeFunction) {\n        toAdapt = {};\n        if (isWorkletFunction(value)) {\n          if (__DEV__) {\n            const babelVersion = value.__initData.version;\n            if (babelVersion !== undefined && babelVersion !== jsVersion) {\n              throw new ReanimatedError(`Mismatch between JavaScript code version and Reanimated Babel plugin version (${jsVersion} vs. ${babelVersion}).        \nSee \\`https://docs.swmansion.com/react-native-reanimated/docs/guides/troubleshooting#mismatch-between-javascript-code-version-and-reanimated-babel-plugin-version\\` for more details.\nOffending code was: \\`${getWorkletCode(value)}\\``);\n            }\n            registerWorkletStackDetails(\n              value.__workletHash,\n              value.__stackDetails!\n            );\n          }\n          if (value.__stackDetails) {\n            // `Error` type of value cannot be copied to the UI thread, so we\n            // remove it after we handled it in dev mode or delete it to ignore it in production mode.\n            // Not removing this would cause an infinite loop in production mode and it just\n            // seems more elegant to handle it this way.\n            delete value.__stackDetails;\n          }\n          // to save on transferring static __initData field of worklet structure\n          // we request shareable value to persist its UI counterpart. This means\n          // that the __initData field that contains long strings representing the\n          // worklet code, source map, and location, will always be\n          // serialized/deserialized once.\n          toAdapt.__initData = makeShareableCloneRecursive(\n            value.__initData,\n            true,\n            depth + 1\n          );\n        }\n\n        for (const [key, element] of Object.entries(value)) {\n          if (key === '__initData' && toAdapt.__initData !== undefined) {\n            continue;\n          }\n          toAdapt[key] = makeShareableCloneRecursive(\n            element,\n            shouldPersistRemote,\n            depth + 1\n          );\n        }\n        freezeObjectIfDev(value);\n      } else if (value instanceof RegExp) {\n        const pattern = value.source;\n        const flags = value.flags;\n        const handle = makeShareableCloneRecursive({\n          __init: () => {\n            'worklet';\n            return new RegExp(pattern, flags);\n          },\n        });\n        shareableMappingCache.set(value, handle);\n        return handle as ShareableRef<T>;\n      } else if (value instanceof Error) {\n        const { name, message, stack } = value;\n        const handle = makeShareableCloneRecursive({\n          __init: () => {\n            'worklet';\n            // eslint-disable-next-line reanimated/use-reanimated-error\n            const error = new Error();\n            error.name = name;\n            error.message = message;\n            error.stack = stack;\n            return error;\n          },\n        });\n        shareableMappingCache.set(value, handle);\n        return handle as ShareableRef<T>;\n      } else if (value instanceof ArrayBuffer) {\n        toAdapt = value;\n      } else if (ArrayBuffer.isView(value)) {\n        // typed array (e.g. Int32Array, Uint8ClampedArray) or DataView\n        const buffer = value.buffer;\n        const typeName = value.constructor.name;\n        const handle = makeShareableCloneRecursive({\n          __init: () => {\n            'worklet';\n            if (!VALID_ARRAY_VIEWS_NAMES.includes(typeName)) {\n              throw new ReanimatedError(\n                `Invalid array view name \\`${typeName}\\`.`\n              );\n            }\n            const constructor = global[typeName as keyof typeof global];\n            if (constructor === undefined) {\n              throw new ReanimatedError(\n                `Constructor for \\`${typeName}\\` not found.`\n              );\n            }\n            return new constructor(buffer);\n          },\n        });\n        shareableMappingCache.set(value, handle);\n        return handle as ShareableRef<T>;\n      } else {\n        // This is reached for object types that are not of plain Object.prototype.\n        // We don't support such objects from being transferred as shareables to\n        // the UI runtime and hence we replace them with \"inaccessible object\"\n        // which is implemented as a Proxy object that throws on any attempt\n        // of accessing its fields. We argue that such objects can sometimes leak\n        // as attributes of objects being captured by worklets but should never\n        // be used on the UI runtime regardless. If they are being accessed, the user\n        // will get an appropriate error message.\n        const inaccessibleObject =\n          makeShareableCloneRecursive<T>(INACCESSIBLE_OBJECT);\n        shareableMappingCache.set(value, inaccessibleObject);\n        return inaccessibleObject;\n      }\n      const adapted = NativeReanimatedModule.makeShareableClone(\n        toAdapt,\n        shouldPersistRemote,\n        value\n      );\n      shareableMappingCache.set(value, adapted);\n      shareableMappingCache.set(adapted);\n      return adapted;\n    }\n  }\n  return NativeReanimatedModule.makeShareableClone(\n    value,\n    shouldPersistRemote,\n    undefined\n  );\n}\n\nconst WORKLET_CODE_THRESHOLD = 255;\n\nfunction getWorkletCode(value: WorkletFunction) {\n  // @ts-ignore this is fine\n  const code = value?.__initData?.code;\n  if (!code) {\n    return 'unknown';\n  }\n  if (code.length > WORKLET_CODE_THRESHOLD) {\n    return `${code.substring(0, WORKLET_CODE_THRESHOLD)}...`;\n  }\n  return code;\n}\n\ntype RemoteFunction<T> = {\n  __remoteFunction: FlatShareableRef<T>;\n};\n\nfunction isRemoteFunction<T>(value: {\n  __remoteFunction?: unknown;\n}): value is RemoteFunction<T> {\n  'worklet';\n  return !!value.__remoteFunction;\n}\n\n/**\n * We freeze\n *\n * - Arrays,\n * - Remote functions,\n * - Plain JS objects,\n *\n * That are transformed to a shareable with a meaningful warning. This should\n * help detect issues when someone modifies data after it's been converted.\n * Meaning that they may be doing a faulty assumption in their code expecting\n * that the updates are going to automatically propagate to the object sent to\n * the UI thread. If the user really wants some objects to be mutable they\n * should use shared values instead.\n */\nfunction freezeObjectIfDev<T extends object>(value: T) {\n  if (!__DEV__) {\n    return;\n  }\n  Object.entries(value).forEach(([key, element]) => {\n    const descriptor = Object.getOwnPropertyDescriptor(value, key)!;\n    if (!descriptor.configurable) {\n      return;\n    }\n    Object.defineProperty(value, key, {\n      get() {\n        return element;\n      },\n      set() {\n        logger.warn(\n          `Tried to modify key \\`${key}\\` of an object which has been already passed to a worklet. See \nhttps://docs.swmansion.com/react-native-reanimated/docs/guides/troubleshooting#tried-to-modify-key-of-an-object-which-has-been-converted-to-a-shareable \nfor more details.`\n        );\n      },\n    });\n  });\n  Object.preventExtensions(value);\n}\n\nexport function makeShareableCloneOnUIRecursive<T>(\n  value: T\n): FlatShareableRef<T> {\n  'worklet';\n  if (SHOULD_BE_USE_WEB) {\n    // @ts-ignore web is an interesting place where we don't run a secondary VM on the UI thread\n    // see more details in the comment where USE_STUB_IMPLEMENTATION is defined.\n    return value;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  function cloneRecursive(value: T): FlatShareableRef<T> {\n    if (\n      (typeof value === 'object' && value !== null) ||\n      typeof value === 'function'\n    ) {\n      if (isHostObject(value)) {\n        // We call `_makeShareableClone` to wrap the provided HostObject\n        // inside ShareableJSRef.\n        return global._makeShareableClone(\n          value,\n          undefined\n        ) as FlatShareableRef<T>;\n      }\n      if (isRemoteFunction<T>(value)) {\n        // RemoteFunctions are created by us therefore they are\n        // a Shareable out of the box and there is no need to\n        // call `_makeShareableClone`.\n        return value.__remoteFunction;\n      }\n      if (Array.isArray(value)) {\n        return global._makeShareableClone(\n          value.map(cloneRecursive),\n          undefined\n        ) as FlatShareableRef<T>;\n      }\n      const toAdapt: Record<string, FlatShareableRef<T>> = {};\n      for (const [key, element] of Object.entries(value)) {\n        toAdapt[key] = cloneRecursive(element);\n      }\n      return global._makeShareableClone(toAdapt, value) as FlatShareableRef<T>;\n    }\n    return global._makeShareableClone(value, undefined);\n  }\n  return cloneRecursive(value);\n}\n\nfunction makeShareableJS<T extends object>(value: T): T {\n  return value;\n}\n\nfunction makeShareableNative<T extends object>(value: T): T {\n  if (shareableMappingCache.get(value)) {\n    return value;\n  }\n  const handle = makeShareableCloneRecursive({\n    __init: () => {\n      'worklet';\n      return value;\n    },\n  });\n  shareableMappingCache.set(value, handle);\n  return value;\n}\n\n/**\n * This function creates a value on UI with persistent state - changes to it on\n * the UI thread will be seen by all worklets. Use it when you want to create a\n * value that is read and written only on the UI thread.\n */\nexport const makeShareable = SHOULD_BE_USE_WEB\n  ? makeShareableJS\n  : makeShareableNative;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}