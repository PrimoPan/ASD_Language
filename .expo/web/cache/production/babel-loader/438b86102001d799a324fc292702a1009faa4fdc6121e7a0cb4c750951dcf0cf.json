{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.SimultaneousGesture=exports.ExclusiveGesture=exports.ComposedGesture=void 0;var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _toConsumableArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));var _gesture=require(\"./gesture\");function _callSuper(t,o,e){return o=(0,_getPrototypeOf2.default)(o),(0,_possibleConstructorReturn2.default)(t,_isNativeReflectConstruct()?Reflect.construct(o,e||[],(0,_getPrototypeOf2.default)(t).constructor):o.apply(t,e));}function _isNativeReflectConstruct(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));}catch(t){}return(_isNativeReflectConstruct=function _isNativeReflectConstruct(){return!!t;})();}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function extendRelation(currentRelation,extendWith){if(currentRelation===undefined){return(0,_toConsumableArray2.default)(extendWith);}else{return[].concat((0,_toConsumableArray2.default)(currentRelation),(0,_toConsumableArray2.default)(extendWith));}}var ComposedGesture=exports.ComposedGesture=function(_Gesture){function ComposedGesture(){var _this;(0,_classCallCheck2.default)(this,ComposedGesture);_this=_callSuper(this,ComposedGesture);_defineProperty(_this,\"gestures\",[]);_defineProperty(_this,\"simultaneousGestures\",[]);_defineProperty(_this,\"requireGesturesToFail\",[]);for(var _len=arguments.length,gestures=new Array(_len),_key=0;_key<_len;_key++){gestures[_key]=arguments[_key];}_this.gestures=gestures;return _this;}(0,_inherits2.default)(ComposedGesture,_Gesture);return(0,_createClass2.default)(ComposedGesture,[{key:\"prepareSingleGesture\",value:function prepareSingleGesture(gesture,simultaneousGestures,requireGesturesToFail){if(gesture instanceof _gesture.BaseGesture){var newConfig=Object.assign({},gesture.config);newConfig.simultaneousWith=extendRelation(newConfig.simultaneousWith,simultaneousGestures);newConfig.requireToFail=extendRelation(newConfig.requireToFail,requireGesturesToFail);gesture.config=newConfig;}else if(gesture instanceof ComposedGesture){gesture.simultaneousGestures=simultaneousGestures;gesture.requireGesturesToFail=requireGesturesToFail;gesture.prepare();}}},{key:\"prepare\",value:function prepare(){for(var gesture of this.gestures){this.prepareSingleGesture(gesture,this.simultaneousGestures,this.requireGesturesToFail);}}},{key:\"initialize\",value:function initialize(){for(var gesture of this.gestures){gesture.initialize();}}},{key:\"toGestureArray\",value:function toGestureArray(){return this.gestures.flatMap(function(gesture){return gesture.toGestureArray();});}}]);}(_gesture.Gesture);var SimultaneousGesture=exports.SimultaneousGesture=function(_ComposedGesture){function SimultaneousGesture(){(0,_classCallCheck2.default)(this,SimultaneousGesture);return _callSuper(this,SimultaneousGesture,arguments);}(0,_inherits2.default)(SimultaneousGesture,_ComposedGesture);return(0,_createClass2.default)(SimultaneousGesture,[{key:\"prepare\",value:function prepare(){var _this2=this;var simultaneousArrays=this.gestures.map(function(gesture){return(_this2.gestures.filter(function(x){return x!==gesture;}).flatMap(function(x){return x.toGestureArray();}));});for(var i=0;i<this.gestures.length;i++){this.prepareSingleGesture(this.gestures[i],simultaneousArrays[i],this.requireGesturesToFail);}}}]);}(ComposedGesture);var ExclusiveGesture=exports.ExclusiveGesture=function(_ComposedGesture2){function ExclusiveGesture(){(0,_classCallCheck2.default)(this,ExclusiveGesture);return _callSuper(this,ExclusiveGesture,arguments);}(0,_inherits2.default)(ExclusiveGesture,_ComposedGesture2);return(0,_createClass2.default)(ExclusiveGesture,[{key:\"prepare\",value:function prepare(){var gestureArrays=this.gestures.map(function(gesture){return gesture.toGestureArray();});var requireToFail=[];for(var i=0;i<this.gestures.length;i++){this.prepareSingleGesture(this.gestures[i],this.simultaneousGestures,this.requireGesturesToFail.concat(requireToFail));requireToFail=requireToFail.concat(gestureArrays[i]);}}}]);}(ComposedGesture);","map":{"version":3,"names":["_gesture","require","_callSuper","t","o","e","_getPrototypeOf2","default","_possibleConstructorReturn2","_isNativeReflectConstruct","Reflect","construct","constructor","apply","Boolean","prototype","valueOf","call","extendRelation","currentRelation","extendWith","undefined","_toConsumableArray2","concat","ComposedGesture","exports","_Gesture","_this","_classCallCheck2","_defineProperty","_len","arguments","length","gestures","Array","_key","_inherits2","_createClass2","key","value","prepareSingleGesture","gesture","simultaneousGestures","requireGesturesToFail","BaseGesture","newConfig","Object","assign","config","simultaneousWith","requireToFail","prepare","initialize","toGestureArray","flatMap","Gesture","SimultaneousGesture","_ComposedGesture","_this2","simultaneousArrays","map","filter","x","i","ExclusiveGesture","_ComposedGesture2","gestureArrays"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/gestureComposition.ts"],"sourcesContent":["import { BaseGesture, Gesture, GestureRef, GestureType } from './gesture';\n\nfunction extendRelation(\n  currentRelation: GestureRef[] | undefined,\n  extendWith: GestureType[]\n) {\n  if (currentRelation === undefined) {\n    return [...extendWith];\n  } else {\n    return [...currentRelation, ...extendWith];\n  }\n}\n\nexport class ComposedGesture extends Gesture {\n  protected gestures: Gesture[] = [];\n  protected simultaneousGestures: GestureType[] = [];\n  protected requireGesturesToFail: GestureType[] = [];\n\n  constructor(...gestures: Gesture[]) {\n    super();\n    this.gestures = gestures;\n  }\n\n  protected prepareSingleGesture(\n    gesture: Gesture,\n    simultaneousGestures: GestureType[],\n    requireGesturesToFail: GestureType[]\n  ) {\n    if (gesture instanceof BaseGesture) {\n      const newConfig = { ...gesture.config };\n\n      // No need to extend `blocksHandlers` here, because it's not changed in composition.\n      // The same effect is achieved by reversing the order of 2 gestures in `Exclusive`\n      newConfig.simultaneousWith = extendRelation(\n        newConfig.simultaneousWith,\n        simultaneousGestures\n      );\n      newConfig.requireToFail = extendRelation(\n        newConfig.requireToFail,\n        requireGesturesToFail\n      );\n\n      gesture.config = newConfig;\n    } else if (gesture instanceof ComposedGesture) {\n      gesture.simultaneousGestures = simultaneousGestures;\n      gesture.requireGesturesToFail = requireGesturesToFail;\n      gesture.prepare();\n    }\n  }\n\n  prepare() {\n    for (const gesture of this.gestures) {\n      this.prepareSingleGesture(\n        gesture,\n        this.simultaneousGestures,\n        this.requireGesturesToFail\n      );\n    }\n  }\n\n  initialize() {\n    for (const gesture of this.gestures) {\n      gesture.initialize();\n    }\n  }\n\n  toGestureArray(): GestureType[] {\n    return this.gestures.flatMap((gesture) => gesture.toGestureArray());\n  }\n}\n\nexport class SimultaneousGesture extends ComposedGesture {\n  prepare() {\n    // This piece of magic works something like this:\n    // for every gesture in the array\n    const simultaneousArrays = this.gestures.map((gesture) =>\n      // we take the array it's in\n      this.gestures\n        // and make a copy without it\n        .filter((x) => x !== gesture)\n        // then we flatmap the result to get list of raw (not composed) gestures\n        // this way we don't make the gestures simultaneous with themselves, which is\n        // important when the gesture is `ExclusiveGesture` - we don't want to make\n        // exclusive gestures simultaneous\n        .flatMap((x) => x.toGestureArray())\n    );\n\n    for (let i = 0; i < this.gestures.length; i++) {\n      this.prepareSingleGesture(\n        this.gestures[i],\n        simultaneousArrays[i],\n        this.requireGesturesToFail\n      );\n    }\n  }\n}\n\nexport class ExclusiveGesture extends ComposedGesture {\n  prepare() {\n    // Transforms the array of gestures into array of grouped raw (not composed) gestures\n    // i.e. [gesture1, gesture2, ComposedGesture(gesture3, gesture4)] -> [[gesture1], [gesture2], [gesture3, gesture4]]\n    const gestureArrays = this.gestures.map((gesture) =>\n      gesture.toGestureArray()\n    );\n\n    let requireToFail: GestureType[] = [];\n\n    for (let i = 0; i < this.gestures.length; i++) {\n      this.prepareSingleGesture(\n        this.gestures[i],\n        this.simultaneousGestures,\n        this.requireGesturesToFail.concat(requireToFail)\n      );\n\n      // Every group gets to wait for all groups before it\n      requireToFail = requireToFail.concat(gestureArrays[i]);\n    }\n  }\n}\n\nexport type ComposedGestureType = InstanceType<typeof ComposedGesture>;\nexport type RaceGestureType = ComposedGestureType;\nexport type SimultaneousGestureType = InstanceType<typeof SimultaneousGesture>;\nexport type ExclusiveGestureType = InstanceType<typeof ExclusiveGesture>;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}