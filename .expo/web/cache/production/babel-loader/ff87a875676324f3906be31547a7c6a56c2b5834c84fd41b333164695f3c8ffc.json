{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _get2=_interopRequireDefault(require(\"@babel/runtime/helpers/get\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _EventManager2=_interopRequireDefault(require(\"./EventManager\"));var _gestureHandlerCommon=require(\"../../handlers/gestureHandlerCommon\");var _interfaces=require(\"../interfaces\");var _utils=require(\"../utils\");var _PointerType=require(\"../../PointerType\");function _callSuper(t,o,e){return o=(0,_getPrototypeOf2.default)(o),(0,_possibleConstructorReturn2.default)(t,_isNativeReflectConstruct()?Reflect.construct(o,e||[],(0,_getPrototypeOf2.default)(t).constructor):o.apply(t,e));}function _isNativeReflectConstruct(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));}catch(t){}return(_isNativeReflectConstruct=function _isNativeReflectConstruct(){return!!t;})();}function _superPropGet(t,o,e,r){var p=(0,_get2.default)((0,_getPrototypeOf2.default)(1&r?t.prototype:t),o,e);return 2&r&&\"function\"==typeof p?function(t){return p.apply(e,t);}:p;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}var POINTER_CAPTURE_EXCLUDE_LIST=new Set(['SELECT','INPUT']);var PointerEventManager=exports.default=function(_EventManager){function PointerEventManager(view){var _this;(0,_classCallCheck2.default)(this,PointerEventManager);_this=_callSuper(this,PointerEventManager,[view]);_defineProperty(_this,\"trackedPointers\",new Set());_defineProperty(_this,\"mouseButtonsMapper\",new Map());_defineProperty(_this,\"lastPosition\",void 0);_defineProperty(_this,\"pointerDownCallback\",function(event){if(!(0,_utils.isPointerInBounds)(_this.view,{x:event.clientX,y:event.clientY})){return;}var adaptedEvent=_this.mapEvent(event,_interfaces.EventTypes.DOWN);var target=event.target;if(!POINTER_CAPTURE_EXCLUDE_LIST.has(target.tagName)){target.setPointerCapture(adaptedEvent.pointerId);}_this.markAsInBounds(adaptedEvent.pointerId);_this.trackedPointers.add(adaptedEvent.pointerId);if(++_this.activePointersCounter>1){adaptedEvent.eventType=_interfaces.EventTypes.ADDITIONAL_POINTER_DOWN;_this.onPointerAdd(adaptedEvent);}else{_this.onPointerDown(adaptedEvent);}});_defineProperty(_this,\"pointerUpCallback\",function(event){if(_this.activePointersCounter===0){return;}var adaptedEvent=_this.mapEvent(event,_interfaces.EventTypes.UP);var target=event.target;if(!POINTER_CAPTURE_EXCLUDE_LIST.has(target.tagName)){target.releasePointerCapture(adaptedEvent.pointerId);}_this.markAsOutOfBounds(adaptedEvent.pointerId);_this.trackedPointers.delete(adaptedEvent.pointerId);if(--_this.activePointersCounter>0){adaptedEvent.eventType=_interfaces.EventTypes.ADDITIONAL_POINTER_UP;_this.onPointerRemove(adaptedEvent);}else{_this.onPointerUp(adaptedEvent);}});_defineProperty(_this,\"pointerMoveCallback\",function(event){var adaptedEvent=_this.mapEvent(event,_interfaces.EventTypes.MOVE);var target=event.target;if(!target.hasPointerCapture(event.pointerId)&&!POINTER_CAPTURE_EXCLUDE_LIST.has(target.tagName)){target.setPointerCapture(event.pointerId);}var inBounds=(0,_utils.isPointerInBounds)(_this.view,{x:adaptedEvent.x,y:adaptedEvent.y});var pointerIndex=_this.pointersInBounds.indexOf(adaptedEvent.pointerId);if(inBounds){if(pointerIndex<0){adaptedEvent.eventType=_interfaces.EventTypes.ENTER;_this.onPointerEnter(adaptedEvent);_this.markAsInBounds(adaptedEvent.pointerId);}else{_this.onPointerMove(adaptedEvent);}}else{if(pointerIndex>=0){adaptedEvent.eventType=_interfaces.EventTypes.LEAVE;_this.onPointerLeave(adaptedEvent);_this.markAsOutOfBounds(adaptedEvent.pointerId);}else{_this.onPointerOutOfBounds(adaptedEvent);}}_this.lastPosition.x=event.x;_this.lastPosition.y=event.y;});_defineProperty(_this,\"pointerCancelCallback\",function(event){var adaptedEvent=_this.mapEvent(event,_interfaces.EventTypes.CANCEL);_this.onPointerCancel(adaptedEvent);_this.markAsOutOfBounds(adaptedEvent.pointerId);_this.activePointersCounter=0;_this.trackedPointers.clear();});_defineProperty(_this,\"pointerEnterCallback\",function(event){var adaptedEvent=_this.mapEvent(event,_interfaces.EventTypes.ENTER);_this.onPointerMoveOver(adaptedEvent);});_defineProperty(_this,\"pointerLeaveCallback\",function(event){var adaptedEvent=_this.mapEvent(event,_interfaces.EventTypes.LEAVE);_this.onPointerMoveOut(adaptedEvent);});_defineProperty(_this,\"lostPointerCaptureCallback\",function(event){var adaptedEvent=_this.mapEvent(event,_interfaces.EventTypes.CANCEL);if(_this.trackedPointers.has(adaptedEvent.pointerId)){_this.onPointerCancel(adaptedEvent);_this.activePointersCounter=0;_this.trackedPointers.clear();}});_this.mouseButtonsMapper.set(0,_gestureHandlerCommon.MouseButton.LEFT);_this.mouseButtonsMapper.set(1,_gestureHandlerCommon.MouseButton.MIDDLE);_this.mouseButtonsMapper.set(2,_gestureHandlerCommon.MouseButton.RIGHT);_this.mouseButtonsMapper.set(3,_gestureHandlerCommon.MouseButton.BUTTON_4);_this.mouseButtonsMapper.set(4,_gestureHandlerCommon.MouseButton.BUTTON_5);_this.lastPosition={x:-Infinity,y:-Infinity};return _this;}(0,_inherits2.default)(PointerEventManager,_EventManager);return(0,_createClass2.default)(PointerEventManager,[{key:\"registerListeners\",value:function registerListeners(){this.view.addEventListener('pointerdown',this.pointerDownCallback);this.view.addEventListener('pointerup',this.pointerUpCallback);this.view.addEventListener('pointermove',this.pointerMoveCallback);this.view.addEventListener('pointercancel',this.pointerCancelCallback);this.view.addEventListener('pointerenter',this.pointerEnterCallback);this.view.addEventListener('pointerleave',this.pointerLeaveCallback);this.view.addEventListener('lostpointercapture',this.lostPointerCaptureCallback);}},{key:\"unregisterListeners\",value:function unregisterListeners(){this.view.removeEventListener('pointerdown',this.pointerDownCallback);this.view.removeEventListener('pointerup',this.pointerUpCallback);this.view.removeEventListener('pointermove',this.pointerMoveCallback);this.view.removeEventListener('pointercancel',this.pointerCancelCallback);this.view.removeEventListener('pointerenter',this.pointerEnterCallback);this.view.removeEventListener('pointerleave',this.pointerLeaveCallback);this.view.removeEventListener('lostpointercapture',this.lostPointerCaptureCallback);}},{key:\"mapEvent\",value:function mapEvent(event,eventType){var _PointerTypeMapping$g;var rect=this.view.getBoundingClientRect();var _calculateViewScale=(0,_utils.calculateViewScale)(this.view),scaleX=_calculateViewScale.scaleX,scaleY=_calculateViewScale.scaleY;return{x:event.clientX,y:event.clientY,offsetX:(event.clientX-rect.left)/scaleX,offsetY:(event.clientY-rect.top)/scaleY,pointerId:event.pointerId,eventType:eventType,pointerType:(_PointerTypeMapping$g=_utils.PointerTypeMapping.get(event.pointerType))!==null&&_PointerTypeMapping$g!==void 0?_PointerTypeMapping$g:_PointerType.PointerType.OTHER,button:this.mouseButtonsMapper.get(event.button),time:event.timeStamp,stylusData:(0,_utils.tryExtractStylusData)(event)};}},{key:\"resetManager\",value:function resetManager(){_superPropGet(PointerEventManager,\"resetManager\",this,3)([]);this.trackedPointers.clear();}}]);}(_EventManager2.default);","map":{"version":3,"names":["_EventManager2","_interopRequireDefault","require","_gestureHandlerCommon","_interfaces","_utils","_PointerType","_callSuper","t","o","e","_getPrototypeOf2","default","_possibleConstructorReturn2","_isNativeReflectConstruct","Reflect","construct","constructor","apply","Boolean","prototype","valueOf","call","_superPropGet","r","p","_get2","POINTER_CAPTURE_EXCLUDE_LIST","Set","PointerEventManager","exports","_EventManager","view","_this","_classCallCheck2","_defineProperty","Map","event","isPointerInBounds","x","clientX","y","clientY","adaptedEvent","mapEvent","EventTypes","DOWN","target","has","tagName","setPointerCapture","pointerId","markAsInBounds","trackedPointers","add","activePointersCounter","eventType","ADDITIONAL_POINTER_DOWN","onPointerAdd","onPointerDown","UP","releasePointerCapture","markAsOutOfBounds","delete","ADDITIONAL_POINTER_UP","onPointerRemove","onPointerUp","MOVE","hasPointerCapture","inBounds","pointerIndex","pointersInBounds","indexOf","ENTER","onPointerEnter","onPointerMove","LEAVE","onPointerLeave","onPointerOutOfBounds","lastPosition","CANCEL","onPointerCancel","clear","onPointerMoveOver","onPointerMoveOut","mouseButtonsMapper","set","MouseButton","LEFT","MIDDLE","RIGHT","BUTTON_4","BUTTON_5","Infinity","_inherits2","_createClass2","key","value","registerListeners","addEventListener","pointerDownCallback","pointerUpCallback","pointerMoveCallback","pointerCancelCallback","pointerEnterCallback","pointerLeaveCallback","lostPointerCaptureCallback","unregisterListeners","removeEventListener","_PointerTypeMapping$g","rect","getBoundingClientRect","_calculateViewScale","calculateViewScale","scaleX","scaleY","offsetX","left","offsetY","top","pointerType","PointerTypeMapping","get","PointerType","OTHER","button","time","timeStamp","stylusData","tryExtractStylusData","resetManager","EventManager"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/react-native-gesture-handler/lib/module/web/tools/PointerEventManager.ts"],"sourcesContent":["import EventManager from './EventManager';\nimport { MouseButton } from '../../handlers/gestureHandlerCommon';\nimport { AdaptedEvent, EventTypes, Point } from '../interfaces';\nimport {\n  PointerTypeMapping,\n  calculateViewScale,\n  tryExtractStylusData,\n  isPointerInBounds,\n} from '../utils';\nimport { PointerType } from '../../PointerType';\n\nconst POINTER_CAPTURE_EXCLUDE_LIST = new Set<string>(['SELECT', 'INPUT']);\n\nexport default class PointerEventManager extends EventManager<HTMLElement> {\n  private trackedPointers = new Set<number>();\n  private readonly mouseButtonsMapper = new Map<number, MouseButton>();\n  private lastPosition: Point;\n\n  constructor(view: HTMLElement) {\n    super(view);\n\n    this.mouseButtonsMapper.set(0, MouseButton.LEFT);\n    this.mouseButtonsMapper.set(1, MouseButton.MIDDLE);\n    this.mouseButtonsMapper.set(2, MouseButton.RIGHT);\n    this.mouseButtonsMapper.set(3, MouseButton.BUTTON_4);\n    this.mouseButtonsMapper.set(4, MouseButton.BUTTON_5);\n\n    this.lastPosition = {\n      x: -Infinity,\n      y: -Infinity,\n    };\n  }\n\n  private pointerDownCallback = (event: PointerEvent) => {\n    if (!isPointerInBounds(this.view, { x: event.clientX, y: event.clientY })) {\n      return;\n    }\n\n    const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.DOWN);\n    const target = event.target as HTMLElement;\n\n    if (!POINTER_CAPTURE_EXCLUDE_LIST.has(target.tagName)) {\n      target.setPointerCapture(adaptedEvent.pointerId);\n    }\n\n    this.markAsInBounds(adaptedEvent.pointerId);\n    this.trackedPointers.add(adaptedEvent.pointerId);\n\n    if (++this.activePointersCounter > 1) {\n      adaptedEvent.eventType = EventTypes.ADDITIONAL_POINTER_DOWN;\n      this.onPointerAdd(adaptedEvent);\n    } else {\n      this.onPointerDown(adaptedEvent);\n    }\n  };\n\n  private pointerUpCallback = (event: PointerEvent) => {\n    // When we call reset on gesture handlers, it also resets their event managers\n    // In some handlers (like RotationGestureHandler) reset is called before all pointers leave view\n    // This means, that activePointersCounter will be set to 0, while there are still remaining pointers on view\n    // Removing them will end in activePointersCounter going below 0, therefore handlers won't behave properly\n    if (this.activePointersCounter === 0) {\n      return;\n    }\n\n    const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.UP);\n    const target = event.target as HTMLElement;\n\n    if (!POINTER_CAPTURE_EXCLUDE_LIST.has(target.tagName)) {\n      target.releasePointerCapture(adaptedEvent.pointerId);\n    }\n\n    this.markAsOutOfBounds(adaptedEvent.pointerId);\n    this.trackedPointers.delete(adaptedEvent.pointerId);\n\n    if (--this.activePointersCounter > 0) {\n      adaptedEvent.eventType = EventTypes.ADDITIONAL_POINTER_UP;\n      this.onPointerRemove(adaptedEvent);\n    } else {\n      this.onPointerUp(adaptedEvent);\n    }\n  };\n\n  private pointerMoveCallback = (event: PointerEvent) => {\n    const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.MOVE);\n    const target = event.target as HTMLElement;\n\n    // You may be wondering why are we setting pointer capture here, when we\n    // already set it in `pointerdown` handler. Well, that's a great question,\n    // for which I don't have an answer. Specification (https://www.w3.org/TR/pointerevents2/#dom-element-setpointercapture)\n    // says that the requirement for `setPointerCapture` to work is that pointer\n    // must be in 'active buttons state`, otherwise it will fail silently, which\n    // is lovely. Obviously, when `pointerdown` is fired, one of the buttons\n    // (when using mouse) is pressed, but that doesn't mean that `setPointerCapture`\n    // will succeed, for some reason. Since it fails silently, we don't actually know\n    // if it worked or not (there's `gotpointercapture` event, but the complexity of\n    // incorporating it here seems stupid), so we just call it again here, every time\n    // pointer moves until it succeeds.\n    // God, I do love web development.\n    if (\n      !target.hasPointerCapture(event.pointerId) &&\n      !POINTER_CAPTURE_EXCLUDE_LIST.has(target.tagName)\n    ) {\n      target.setPointerCapture(event.pointerId);\n    }\n\n    const inBounds: boolean = isPointerInBounds(this.view, {\n      x: adaptedEvent.x,\n      y: adaptedEvent.y,\n    });\n\n    const pointerIndex: number = this.pointersInBounds.indexOf(\n      adaptedEvent.pointerId\n    );\n\n    if (inBounds) {\n      if (pointerIndex < 0) {\n        adaptedEvent.eventType = EventTypes.ENTER;\n        this.onPointerEnter(adaptedEvent);\n        this.markAsInBounds(adaptedEvent.pointerId);\n      } else {\n        this.onPointerMove(adaptedEvent);\n      }\n    } else {\n      if (pointerIndex >= 0) {\n        adaptedEvent.eventType = EventTypes.LEAVE;\n        this.onPointerLeave(adaptedEvent);\n        this.markAsOutOfBounds(adaptedEvent.pointerId);\n      } else {\n        this.onPointerOutOfBounds(adaptedEvent);\n      }\n    }\n\n    this.lastPosition.x = event.x;\n    this.lastPosition.y = event.y;\n  };\n\n  private pointerCancelCallback = (event: PointerEvent) => {\n    const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.CANCEL);\n\n    this.onPointerCancel(adaptedEvent);\n    this.markAsOutOfBounds(adaptedEvent.pointerId);\n    this.activePointersCounter = 0;\n    this.trackedPointers.clear();\n  };\n\n  private pointerEnterCallback = (event: PointerEvent) => {\n    const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.ENTER);\n\n    this.onPointerMoveOver(adaptedEvent);\n  };\n\n  private pointerLeaveCallback = (event: PointerEvent) => {\n    const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.LEAVE);\n\n    this.onPointerMoveOut(adaptedEvent);\n  };\n\n  private lostPointerCaptureCallback = (event: PointerEvent) => {\n    const adaptedEvent: AdaptedEvent = this.mapEvent(event, EventTypes.CANCEL);\n\n    if (this.trackedPointers.has(adaptedEvent.pointerId)) {\n      // In some cases the `pointerup` event is not fired, but `lostpointercapture` is.\n      // Here we simulate the `pointercancel` event to make sure the gesture handler stops tracking it.\n      this.onPointerCancel(adaptedEvent);\n\n      this.activePointersCounter = 0;\n      this.trackedPointers.clear();\n    }\n  };\n\n  public registerListeners(): void {\n    this.view.addEventListener('pointerdown', this.pointerDownCallback);\n    this.view.addEventListener('pointerup', this.pointerUpCallback);\n    this.view.addEventListener('pointermove', this.pointerMoveCallback);\n    this.view.addEventListener('pointercancel', this.pointerCancelCallback);\n\n    // onPointerEnter and onPointerLeave are triggered by a custom logic responsible for\n    // handling shouldCancelWhenOutside flag, and are unreliable unless the pointer is down.\n    // We therefore use pointerenter and pointerleave events to handle the hover gesture,\n    // mapping them to onPointerMoveOver and onPointerMoveOut respectively.\n    this.view.addEventListener('pointerenter', this.pointerEnterCallback);\n    this.view.addEventListener('pointerleave', this.pointerLeaveCallback);\n    this.view.addEventListener(\n      'lostpointercapture',\n      this.lostPointerCaptureCallback\n    );\n  }\n\n  public unregisterListeners(): void {\n    this.view.removeEventListener('pointerdown', this.pointerDownCallback);\n    this.view.removeEventListener('pointerup', this.pointerUpCallback);\n    this.view.removeEventListener('pointermove', this.pointerMoveCallback);\n    this.view.removeEventListener('pointercancel', this.pointerCancelCallback);\n    this.view.removeEventListener('pointerenter', this.pointerEnterCallback);\n    this.view.removeEventListener('pointerleave', this.pointerLeaveCallback);\n    this.view.removeEventListener(\n      'lostpointercapture',\n      this.lostPointerCaptureCallback\n    );\n  }\n\n  protected mapEvent(event: PointerEvent, eventType: EventTypes): AdaptedEvent {\n    const rect = this.view.getBoundingClientRect();\n    const { scaleX, scaleY } = calculateViewScale(this.view);\n\n    return {\n      x: event.clientX,\n      y: event.clientY,\n      offsetX: (event.clientX - rect.left) / scaleX,\n      offsetY: (event.clientY - rect.top) / scaleY,\n      pointerId: event.pointerId,\n      eventType: eventType,\n      pointerType:\n        PointerTypeMapping.get(event.pointerType) ?? PointerType.OTHER,\n      button: this.mouseButtonsMapper.get(event.button),\n      time: event.timeStamp,\n      stylusData: tryExtractStylusData(event),\n    };\n  }\n\n  public resetManager(): void {\n    super.resetManager();\n    this.trackedPointers.clear();\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}