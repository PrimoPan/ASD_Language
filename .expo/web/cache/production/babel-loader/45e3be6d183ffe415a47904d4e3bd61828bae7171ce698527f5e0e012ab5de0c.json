{"ast":null,"code":"'use strict';Object.defineProperty(exports,\"__esModule\",{value:true});exports.AnimatedText=void 0;var _reactNative=require(\"react-native\");var _index=require(\"../createAnimatedComponent/index.js\");var AnimatedText=exports.AnimatedText=(0,_index.createAnimatedComponent)(_reactNative.Text);","map":{"version":3,"names":["Object","defineProperty","exports","value","AnimatedText","_reactNative","require","_index","createAnimatedComponent","Text"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/react-native-reanimated/src/component/Text.ts"],"sourcesContent":["'use strict';\nimport { Text } from 'react-native';\nimport { createAnimatedComponent } from '../createAnimatedComponent';\n\n// Since createAnimatedComponent return type is ComponentClass that has the props of the argument,\n// but not things like NativeMethods, etc. we need to add them manually by extending the type.\ninterface AnimatedTextComplement extends Text {\n  getNode(): Text;\n}\n\nexport const AnimatedText = createAnimatedComponent(Text);\n\nexport type AnimatedText = typeof AnimatedText & AnimatedTextComplement;\n"],"mappings":"AAAA,YAAY,CAAAA,MAAA,CAAAC,cAAA,CAAAC,OAAA,eAAAC,KAAA,QAAAD,OAAA,CAAAE,YAAA,QACZ,IAAAC,YAAA,CAAAC,OAAA,iBACA,IAAAC,MAAA,CAAAD,OAAA,wCAQO,GAAM,CAAAF,YAAY,CAAAF,OAAA,CAAAE,YAAA,CAAG,GAAAI,8BAAuB,EAACC,iBAAI,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}