{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.longPressHandlerName=exports.longPressGestureHandlerProps=exports.LongPressGestureHandler=void 0;var _toConsumableArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));var _createHandler=_interopRequireDefault(require(\"./createHandler\"));var _gestureHandlerCommon=require(\"./gestureHandlerCommon\");var longPressGestureHandlerProps=exports.longPressGestureHandlerProps=['minDurationMs','maxDist','numberOfPointers'];var longPressHandlerName=exports.longPressHandlerName='LongPressGestureHandler';var LongPressGestureHandler=exports.LongPressGestureHandler=(0,_createHandler.default)({name:longPressHandlerName,allowedProps:[].concat((0,_toConsumableArray2.default)(_gestureHandlerCommon.baseGestureHandlerProps),longPressGestureHandlerProps),config:{shouldCancelWhenOutside:true}});","map":{"version":3,"names":["_createHandler","_interopRequireDefault","require","_gestureHandlerCommon","longPressGestureHandlerProps","exports","longPressHandlerName","LongPressGestureHandler","createHandler","name","allowedProps","concat","_toConsumableArray2","default","baseGestureHandlerProps","config","shouldCancelWhenOutside"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/react-native-gesture-handler/lib/module/handlers/LongPressGestureHandler.ts"],"sourcesContent":["import { LongPressGestureHandlerEventPayload } from './GestureHandlerEventPayload';\nimport createHandler from './createHandler';\nimport {\n  BaseGestureHandlerProps,\n  baseGestureHandlerProps,\n} from './gestureHandlerCommon';\n\nexport const longPressGestureHandlerProps = [\n  'minDurationMs',\n  'maxDist',\n  'numberOfPointers',\n] as const;\n\nexport interface LongPressGestureConfig {\n  /**\n   * Minimum time, expressed in milliseconds, that a finger must remain pressed on\n   * the corresponding view. The default value is 500.\n   */\n  minDurationMs?: number;\n\n  /**\n   * Maximum distance, expressed in points, that defines how far the finger is\n   * allowed to travel during a long press gesture. If the finger travels\n   * further than the defined distance and the handler hasn't yet activated, it\n   * will fail to recognize the gesture. The default value is 10.\n   */\n  maxDist?: number;\n\n  /**\n   * Determine exact number of points required to handle the long press gesture.\n   */\n  numberOfPointers?: number;\n}\n\nexport interface LongPressGestureHandlerProps\n  extends BaseGestureHandlerProps<LongPressGestureHandlerEventPayload>,\n    LongPressGestureConfig {}\n\nexport const longPressHandlerName = 'LongPressGestureHandler';\n\nexport type LongPressGestureHandler = typeof LongPressGestureHandler;\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of gestureHandlerCommon.ts file\nexport const LongPressGestureHandler = createHandler<\n  LongPressGestureHandlerProps,\n  LongPressGestureHandlerEventPayload\n>({\n  name: longPressHandlerName,\n  allowedProps: [\n    ...baseGestureHandlerProps,\n    ...longPressGestureHandlerProps,\n  ] as const,\n  config: {\n    shouldCancelWhenOutside: true,\n  },\n});\n"],"mappings":"yVACA,IAAAA,cAAA,CAAAC,sBAAA,CAAAC,OAAA,qBACA,IAAAC,qBAAA,CAAAD,OAAA,2BAKO,GAAM,CAAAE,4BAA4B,CAAAC,OAAA,CAAAD,4BAAA,CAAG,CAC1C,eAD0C,CAE1C,SAF0C,CAG1C,kBAH0C,CAArC,CA+BA,GAAM,CAAAE,oBAAoB,CAAAD,OAAA,CAAAC,oBAAA,CAAG,yBAA7B,CAIA,GAAM,CAAAC,uBAAuB,CAAAF,OAAA,CAAAE,uBAAA,CAAG,GAAAC,sBAAa,EAGlD,CACAC,IAAI,CAAEH,oBADN,CAEAI,YAAY,IAAAC,MAAA,IAAAC,mBAAA,CAAAC,OAAA,EACPC,6CADS,EAETV,4BAFS,CAFd,CAMAW,MAAM,CAAE,CACNC,uBAAuB,CAAE,IADnB,CANR,CAHkD,CAA7C","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}