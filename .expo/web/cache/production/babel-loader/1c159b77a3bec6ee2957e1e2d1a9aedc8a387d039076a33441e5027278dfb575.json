{"ast":null,"code":"'use strict';Object.defineProperty(exports,\"__esModule\",{value:true});exports.valueSetter=valueSetter;function valueSetter(mutable,value){'worklet';var forceUpdate=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;var previousAnimation=mutable._animation;if(previousAnimation){previousAnimation.cancelled=true;mutable._animation=null;}if(typeof value==='function'||value!==null&&typeof value==='object'&&value.onFrame!==undefined){var animation=typeof value==='function'?value():value;if(mutable._value===animation.current&&!animation.isHigherOrder&&!forceUpdate){animation.callback&&animation.callback(true);return;}var initializeAnimation=function initializeAnimation(timestamp){animation.onStart(animation,mutable.value,timestamp,previousAnimation);};var currentTimestamp=global.__frameTimestamp||global._getAnimationTimestamp();initializeAnimation(currentTimestamp);var _step=function step(newTimestamp){var timestamp=newTimestamp<(animation.timestamp||0)?animation.timestamp:newTimestamp;if(animation.cancelled){animation.callback&&animation.callback(false);return;}var finished=animation.onFrame(animation,timestamp);animation.finished=true;animation.timestamp=timestamp;mutable._value=animation.current;if(finished){animation.callback&&animation.callback(true);}else{requestAnimationFrame(_step);}};mutable._animation=animation;_step(currentTimestamp);}else{if(mutable._value===value&&!forceUpdate){return;}mutable._value=value;}}","map":{"version":3,"names":["Object","defineProperty","exports","value","valueSetter","mutable","forceUpdate","arguments","length","undefined","previousAnimation","_animation","cancelled","onFrame","animation","_value","current","isHigherOrder","callback","initializeAnimation","timestamp","onStart","currentTimestamp","global","__frameTimestamp","_getAnimationTimestamp","step","newTimestamp","finished","requestAnimationFrame"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/react-native-reanimated/src/valueSetter.ts"],"sourcesContent":["'use strict';\nimport type { AnimationObject, Mutable } from './commonTypes';\n\nexport function valueSetter<Value>(\n  mutable: Mutable<Value>,\n  value: Value,\n  forceUpdate = false\n): void {\n  'worklet';\n  const previousAnimation = mutable._animation;\n  if (previousAnimation) {\n    previousAnimation.cancelled = true;\n    mutable._animation = null;\n  }\n  if (\n    typeof value === 'function' ||\n    (value !== null &&\n      typeof value === 'object' &&\n      // TODO TYPESCRIPT fix this after fixing AnimationObject type\n      (value as unknown as AnimationObject).onFrame !== undefined)\n  ) {\n    const animation: AnimationObject<Value> =\n      typeof value === 'function'\n        ? // TODO TYPESCRIPT fix this after fixing AnimationObject type\n          (value as () => AnimationObject<Value>)()\n        : // TODO TYPESCRIPT fix this after fixing AnimationObject type\n          (value as unknown as AnimationObject<Value>);\n    // prevent setting again to the same value\n    // and triggering the mappers that treat this value as an input\n    // this happens when the animation's target value(stored in animation.current until animation.onStart is called) is set to the same value as a current one(this._value)\n    // built in animations that are not higher order(withTiming, withSpring) hold target value in .current\n    if (\n      mutable._value === animation.current &&\n      !animation.isHigherOrder &&\n      !forceUpdate\n    ) {\n      animation.callback && animation.callback(true);\n      return;\n    }\n    // animated set\n    const initializeAnimation = (timestamp: number) => {\n      animation.onStart(animation, mutable.value, timestamp, previousAnimation);\n    };\n    const currentTimestamp =\n      global.__frameTimestamp || global._getAnimationTimestamp();\n    initializeAnimation(currentTimestamp);\n\n    const step = (newTimestamp: number) => {\n      // Function `requestAnimationFrame` adds callback to an array, all the callbacks are flushed with function `__flushAnimationFrame`\n      // Usually we flush them inside function `nativeRequestAnimationFrame` and then the given timestamp is the timestamp of end of the current frame.\n      // However function `__flushAnimationFrame` may also be called inside `registerEventHandler` - then we get actual timestamp which is earlier than the end of the frame.\n\n      const timestamp =\n        newTimestamp < (animation.timestamp || 0)\n          ? animation.timestamp\n          : newTimestamp;\n\n      if (animation.cancelled) {\n        animation.callback && animation.callback(false /* finished */);\n        return;\n      }\n      const finished = animation.onFrame(animation, timestamp);\n      animation.finished = true;\n      animation.timestamp = timestamp;\n      // TODO TYPESCRIPT\n      // For now I'll assume that `animation.current` is always defined\n      // but actually need to dive into animations to understand it\n      mutable._value = animation.current!;\n      if (finished) {\n        animation.callback && animation.callback(true /* finished */);\n      } else {\n        requestAnimationFrame(step);\n      }\n    };\n\n    mutable._animation = animation;\n\n    step(currentTimestamp);\n  } else {\n    // prevent setting again to the same value\n    // and triggering the mappers that treat this value as an input\n    if (mutable._value === value && !forceUpdate) {\n      return;\n    }\n    mutable._value = value;\n  }\n}\n"],"mappings":"AAAA,YAAY,CAAAA,MAAA,CAAAC,cAAA,CAAAC,OAAA,eAAAC,KAAA,QAAAD,OAAA,CAAAE,WAAA,CAAAA,WAAA,CAGL,QAAS,CAAAA,WAAWA,CACzBC,OAAuB,CACvBF,KAAY,CAEN,CACN,SAAS,IAFT,CAAAG,WAAW,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,KAAK,CAGnB,GAAM,CAAAG,iBAAiB,CAAGL,OAAO,CAACM,UAAU,CAC5C,GAAID,iBAAiB,CAAE,CACrBA,iBAAiB,CAACE,SAAS,CAAG,IAAI,CAClCP,OAAO,CAACM,UAAU,CAAG,IAAI,CAC3B,CACA,GACE,MAAO,CAAAR,KAAK,GAAK,UAAU,EAC1BA,KAAK,GAAK,IAAI,EACb,MAAO,CAAAA,KAAK,GAAK,QAAQ,EAExBA,KAAK,CAAgCU,OAAO,GAAKJ,SAAU,CAC9D,CACA,GAAM,CAAAK,SAAiC,CACrC,MAAO,CAAAX,KAAK,GAAK,UAAU,CAEtBA,KAAK,CAAkC,CAAC,CAExCA,KAA2C,CAKlD,GACEE,OAAO,CAACU,MAAM,GAAKD,SAAS,CAACE,OAAO,EACpC,CAACF,SAAS,CAACG,aAAa,EACxB,CAACX,WAAW,CACZ,CACAQ,SAAS,CAACI,QAAQ,EAAIJ,SAAS,CAACI,QAAQ,CAAC,IAAI,CAAC,CAC9C,OACF,CAEA,GAAM,CAAAC,mBAAmB,CAAI,QAAvB,CAAAA,mBAAmBA,CAAIC,SAAiB,CAAK,CACjDN,SAAS,CAACO,OAAO,CAACP,SAAS,CAAET,OAAO,CAACF,KAAK,CAAEiB,SAAS,CAAEV,iBAAiB,CAAC,CAC3E,CAAC,CACD,GAAM,CAAAY,gBAAgB,CACpBC,MAAM,CAACC,gBAAgB,EAAID,MAAM,CAACE,sBAAsB,CAAC,CAAC,CAC5DN,mBAAmB,CAACG,gBAAgB,CAAC,CAErC,GAAM,CAAAI,KAAI,CAAI,QAAR,CAAAA,IAAIA,CAAIC,YAAoB,CAAK,CAKrC,GAAM,CAAAP,SAAS,CACbO,YAAY,EAAIb,SAAS,CAACM,SAAS,EAAI,CAAC,CAAC,CACrCN,SAAS,CAACM,SAAS,CACnBO,YAAY,CAElB,GAAIb,SAAS,CAACF,SAAS,CAAE,CACvBE,SAAS,CAACI,QAAQ,EAAIJ,SAAS,CAACI,QAAQ,CAAC,KAAoB,CAAC,CAC9D,OACF,CACA,GAAM,CAAAU,QAAQ,CAAGd,SAAS,CAACD,OAAO,CAACC,SAAS,CAAEM,SAAS,CAAC,CACxDN,SAAS,CAACc,QAAQ,CAAG,IAAI,CACzBd,SAAS,CAACM,SAAS,CAAGA,SAAS,CAI/Bf,OAAO,CAACU,MAAM,CAAGD,SAAS,CAACE,OAAQ,CACnC,GAAIY,QAAQ,CAAE,CACZd,SAAS,CAACI,QAAQ,EAAIJ,SAAS,CAACI,QAAQ,CAAC,IAAmB,CAAC,CAC/D,CAAC,IAAM,CACLW,qBAAqB,CAACH,KAAI,CAAC,CAC7B,CACF,CAAC,CAEDrB,OAAO,CAACM,UAAU,CAAGG,SAAS,CAE9BY,KAAI,CAACJ,gBAAgB,CAAC,CACxB,CAAC,IAAM,CAGL,GAAIjB,OAAO,CAACU,MAAM,GAAKZ,KAAK,EAAI,CAACG,WAAW,CAAE,CAC5C,OACF,CACAD,OAAO,CAACU,MAAM,CAAGZ,KAAK,CACxB,CACF","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}