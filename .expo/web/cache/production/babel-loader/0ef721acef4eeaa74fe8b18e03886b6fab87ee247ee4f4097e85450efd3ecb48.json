{"ast":null,"code":"'use strict';Object.defineProperty(exports,\"__esModule\",{value:true});exports.withTiming=void 0;var _Easing=require(\"../Easing.js\");var _util=require(\"./util.js\");var withTiming=exports.withTiming=function withTiming(toValue,userConfig,callback){'worklet';if(__DEV__&&userConfig!=null&&userConfig.easing){(0,_util.assertEasingIsWorklet)(userConfig.easing);}return(0,_util.defineAnimation)(toValue,function(){'worklet';var config={duration:300,easing:_Easing.Easing.inOut(_Easing.Easing.quad)};if(userConfig){Object.keys(userConfig).forEach(function(key){return config[key]=userConfig[key];});}function timing(animation,now){var toValue=animation.toValue,startTime=animation.startTime,startValue=animation.startValue;var runtime=now-startTime;if(runtime>=config.duration){animation.startTime=0;animation.current=toValue;return true;}var progress=animation.easing(runtime/config.duration);animation.current=startValue+(toValue-startValue)*progress;return false;}function onStart(animation,value,now,previousAnimation){if(previousAnimation&&previousAnimation.type==='timing'&&previousAnimation.toValue===toValue&&previousAnimation.startTime){animation.startTime=previousAnimation.startTime;animation.startValue=previousAnimation.startValue;}else{animation.startTime=now;animation.startValue=value;}animation.current=value;if(typeof config.easing==='object'){animation.easing=config.easing.factory();}else{animation.easing=config.easing;}}return{type:'timing',onFrame:timing,onStart:onStart,progress:0,toValue:toValue,startValue:0,startTime:0,easing:function easing(){return 0;},current:toValue,callback:callback,reduceMotion:(0,_util.getReduceMotionForAnimation)(userConfig==null?void 0:userConfig.reduceMotion)};});};","map":{"version":3,"names":["Object","defineProperty","exports","value","withTiming","_Easing","require","_util","toValue","userConfig","callback","__DEV__","easing","assertEasingIsWorklet","defineAnimation","config","duration","Easing","inOut","quad","keys","forEach","key","timing","animation","now","startTime","startValue","runtime","current","progress","onStart","previousAnimation","type","factory","onFrame","reduceMotion","getReduceMotionForAnimation"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/react-native-reanimated/src/animation/timing.ts"],"sourcesContent":["'use strict';\nimport type { EasingFunctionFactory } from '../Easing';\nimport { Easing } from '../Easing';\nimport {\n  assertEasingIsWorklet,\n  defineAnimation,\n  getReduceMotionForAnimation,\n} from './util';\nimport type {\n  Animation,\n  AnimationCallback,\n  Timestamp,\n  AnimatableValue,\n  ReduceMotion,\n  EasingFunction,\n} from '../commonTypes';\n\n/**\n * The timing animation configuration.\n *\n * @param duration - Length of the animation (in milliseconds). Defaults to 300.\n * @param easing - An easing function which defines the animation curve.\n *   Defaults to `Easing.inOut(Easing.quad)`.\n * @param reduceMotion - Determines how the animation responds to the device's\n *   reduced motion accessibility setting. Default to `ReduceMotion.System` -\n *   {@link ReduceMotion}.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/animations/withTiming#config-\n */\ninterface TimingConfig {\n  duration?: number;\n  reduceMotion?: ReduceMotion;\n  easing?: EasingFunction | EasingFunctionFactory;\n}\n\nexport type WithTimingConfig = TimingConfig;\n\nexport interface TimingAnimation extends Animation<TimingAnimation> {\n  type: string;\n  easing: EasingFunction;\n  startValue: AnimatableValue;\n  startTime: Timestamp;\n  progress: number;\n  toValue: AnimatableValue;\n  current: AnimatableValue;\n}\n\ninterface InnerTimingAnimation\n  extends Omit<TimingAnimation, 'toValue' | 'current'> {\n  toValue: number;\n  current: number;\n}\n\n// TODO TYPESCRIPT This is temporary type put in here to get rid of our .d.ts file\ntype withTimingType = <T extends AnimatableValue>(\n  toValue: T,\n  userConfig?: TimingConfig,\n  callback?: AnimationCallback\n) => T;\n\n/**\n * Lets you create an animation based on duration and easing.\n *\n * @param toValue - The value on which the animation will come at rest -\n *   {@link AnimatableValue}.\n * @param config - The timing animation configuration - {@link TimingConfig}.\n * @param callback - A function called on animation complete -\n *   {@link AnimationCallback}.\n * @returns An [animation\n *   object](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#animation-object)\n *   which holds the current state of the animation.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/animations/withTiming\n */\nexport const withTiming = function (\n  toValue: AnimatableValue,\n  userConfig?: TimingConfig,\n  callback?: AnimationCallback\n): Animation<TimingAnimation> {\n  'worklet';\n\n  if (__DEV__ && userConfig?.easing) {\n    assertEasingIsWorklet(userConfig.easing);\n  }\n\n  return defineAnimation<TimingAnimation>(toValue, () => {\n    'worklet';\n    const config: Required<Omit<TimingConfig, 'reduceMotion'>> = {\n      duration: 300,\n      easing: Easing.inOut(Easing.quad),\n    };\n    if (userConfig) {\n      Object.keys(userConfig).forEach(\n        (key) =>\n          ((config as any)[key] = userConfig[key as keyof typeof userConfig])\n      );\n    }\n\n    function timing(animation: InnerTimingAnimation, now: Timestamp): boolean {\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      const { toValue, startTime, startValue } = animation;\n      const runtime = now - startTime;\n\n      if (runtime >= config.duration) {\n        // reset startTime to avoid reusing finished animation config in `start` method\n        animation.startTime = 0;\n        animation.current = toValue;\n        return true;\n      }\n      const progress = animation.easing(runtime / config.duration);\n      animation.current =\n        (startValue as number) + (toValue - (startValue as number)) * progress;\n      return false;\n    }\n\n    function onStart(\n      animation: TimingAnimation,\n      value: number,\n      now: Timestamp,\n      previousAnimation: Animation<TimingAnimation>\n    ): void {\n      if (\n        previousAnimation &&\n        (previousAnimation as TimingAnimation).type === 'timing' &&\n        (previousAnimation as TimingAnimation).toValue === toValue &&\n        (previousAnimation as TimingAnimation).startTime\n      ) {\n        // to maintain continuity of timing animations we check if we are starting\n        // new timing over the old one with the same parameters. If so, we want\n        // to copy animation timeline properties\n        animation.startTime = (previousAnimation as TimingAnimation).startTime;\n        animation.startValue = (\n          previousAnimation as TimingAnimation\n        ).startValue;\n      } else {\n        animation.startTime = now;\n        animation.startValue = value;\n      }\n      animation.current = value;\n      if (typeof config.easing === 'object') {\n        animation.easing = config.easing.factory();\n      } else {\n        animation.easing = config.easing;\n      }\n    }\n\n    return {\n      type: 'timing',\n      onFrame: timing,\n      onStart: onStart as (animation: TimingAnimation, now: number) => boolean,\n      progress: 0,\n      toValue,\n      startValue: 0,\n      startTime: 0,\n      easing: () => 0,\n      current: toValue,\n      callback,\n      reduceMotion: getReduceMotionForAnimation(userConfig?.reduceMotion),\n    } as TimingAnimation;\n  });\n} as withTimingType;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}