{"ast":null,"code":"'use strict';var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.TransitionGenerator=TransitionGenerator;exports.createAnimationWithInitialValues=createAnimationWithInitialValues;exports.createCustomKeyFrameAnimation=createCustomKeyFrameAnimation;var _defineProperty2=_interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));var _objectWithoutProperties2=_interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _config=require(\"./config.js\");var _animationParser=require(\"./animationParser.js\");var _LinearWeb=require(\"./transition/Linear.web.js\");var _SequencedWeb=require(\"./transition/Sequenced.web.js\");var _FadingWeb=require(\"./transition/Fading.web.js\");var _JumpingWeb=require(\"./transition/Jumping.web.js\");var _domUtils=require(\"./domUtils.js\");var _CurvedWeb=require(\"./transition/Curved.web.js\");var _EntryExitWeb=require(\"./transition/EntryExit.web.js\");var _excluded=[\"transform\"];function addPxToTransform(transform){var newTransform=transform.map(function(transformProp){var newTransformProp={};for(var _ref of Object.entries(transformProp)){var _ref2=(0,_slicedToArray2.default)(_ref,2);var key=_ref2[0];var value=_ref2[1];if((key.includes('translate')||key.includes('perspective'))&&typeof value==='number'){newTransformProp[key]=`${value}px`;}else{newTransformProp[key]=value;}}return newTransformProp;});return newTransform;}function createCustomKeyFrameAnimation(keyframeDefinitions){for(var value of Object.values(keyframeDefinitions)){if(value.transform){value.transform=addPxToTransform(value.transform);}}var animationData={name:'',style:keyframeDefinitions,duration:-1};animationData.name=generateNextCustomKeyframeName();var parsedKeyframe=(0,_animationParser.convertAnimationObjectToKeyframes)(animationData);(0,_domUtils.insertWebAnimation)(animationData.name,parsedKeyframe);return animationData.name;}function createAnimationWithInitialValues(animationName,initialValues){var animationStyle=structuredClone(_config.AnimationsData[animationName].style);var firstAnimationStep=animationStyle['0'];var transform=initialValues.transform,rest=(0,_objectWithoutProperties2.default)(initialValues,_excluded);var transformWithPx=addPxToTransform(transform);if(transform){if(!firstAnimationStep.transform){firstAnimationStep.transform=transformWithPx;}else{var transformStyle=new Map();for(var rule of firstAnimationStep.transform){for(var _ref3 of Object.entries(rule)){var _ref4=(0,_slicedToArray2.default)(_ref3,2);var property=_ref4[0];var value=_ref4[1];transformStyle.set(property,value);}}for(var _rule of transformWithPx){for(var _ref5 of Object.entries(_rule)){var _ref6=(0,_slicedToArray2.default)(_ref5,2);var _property=_ref6[0];var _value=_ref6[1];transformStyle.set(_property,_value);}}firstAnimationStep.transform=Array.from(transformStyle,function(_ref7){var _ref8=(0,_slicedToArray2.default)(_ref7,2),property=_ref8[0],value=_ref8[1];return(0,_defineProperty2.default)({},property,value);});}}animationStyle['0']=Object.assign({},animationStyle['0'],rest);var keyframeName=generateNextCustomKeyframeName();var animationObject={name:keyframeName,style:animationStyle,duration:_config.AnimationsData[animationName].duration};var keyframe=(0,_animationParser.convertAnimationObjectToKeyframes)(animationObject);(0,_domUtils.insertWebAnimation)(keyframeName,keyframe);return keyframeName;}var customKeyframeCounter=0;function generateNextCustomKeyframeName(){return`REA${customKeyframeCounter++}`;}function TransitionGenerator(transitionType,transitionData){var transitionKeyframeName=generateNextCustomKeyframeName();var dummyTransitionKeyframeName;var transitionObject;switch(transitionType){case _config.TransitionType.LINEAR:transitionObject=(0,_LinearWeb.LinearTransition)(transitionKeyframeName,transitionData);break;case _config.TransitionType.SEQUENCED:transitionObject=(0,_SequencedWeb.SequencedTransition)(transitionKeyframeName,transitionData);break;case _config.TransitionType.FADING:transitionObject=(0,_FadingWeb.FadingTransition)(transitionKeyframeName,transitionData);break;case _config.TransitionType.JUMPING:transitionObject=(0,_JumpingWeb.JumpingTransition)(transitionKeyframeName,transitionData);break;case _config.TransitionType.CURVED:{dummyTransitionKeyframeName=generateNextCustomKeyframeName();var _CurvedTransition=(0,_CurvedWeb.CurvedTransition)(transitionKeyframeName,dummyTransitionKeyframeName,transitionData),firstKeyframeObj=_CurvedTransition.firstKeyframeObj,secondKeyframeObj=_CurvedTransition.secondKeyframeObj;transitionObject=firstKeyframeObj;var dummyKeyframe=(0,_animationParser.convertAnimationObjectToKeyframes)(secondKeyframeObj);(0,_domUtils.insertWebAnimation)(dummyTransitionKeyframeName,dummyKeyframe);break;}case _config.TransitionType.ENTRY_EXIT:transitionObject=(0,_EntryExitWeb.EntryExitTransition)(transitionKeyframeName,transitionData);break;}var transitionKeyframe=(0,_animationParser.convertAnimationObjectToKeyframes)(transitionObject);(0,_domUtils.insertWebAnimation)(transitionKeyframeName,transitionKeyframe);return{transitionKeyframeName:transitionKeyframeName,dummyTransitionKeyframeName:dummyTransitionKeyframeName};}","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","TransitionGenerator","createAnimationWithInitialValues","createCustomKeyFrameAnimation","_defineProperty2","_objectWithoutProperties2","_slicedToArray2","_config","_animationParser","_LinearWeb","_SequencedWeb","_FadingWeb","_JumpingWeb","_domUtils","_CurvedWeb","_EntryExitWeb","_excluded","addPxToTransform","transform","newTransform","map","transformProp","newTransformProp","_ref","entries","_ref2","default","key","includes","keyframeDefinitions","values","animationData","name","style","duration","generateNextCustomKeyframeName","parsedKeyframe","convertAnimationObjectToKeyframes","insertWebAnimation","animationName","initialValues","animationStyle","structuredClone","AnimationsData","firstAnimationStep","rest","transformWithPx","transformStyle","Map","rule","_ref3","_ref4","property","set","_ref5","_ref6","Array","from","_ref7","_ref8","assign","keyframeName","animationObject","keyframe","customKeyframeCounter","transitionType","transitionData","transitionKeyframeName","dummyTransitionKeyframeName","transitionObject","TransitionType","LINEAR","LinearTransition","SEQUENCED","SequencedTransition","FADING","FadingTransition","JUMPING","JumpingTransition","CURVED","_CurvedTransition","CurvedTransition","firstKeyframeObj","secondKeyframeObj","dummyKeyframe","ENTRY_EXIT","EntryExitTransition","transitionKeyframe"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/react-native-reanimated/src/layoutReanimation/web/createAnimation.ts"],"sourcesContent":["'use strict';\n\nimport { AnimationsData, TransitionType } from './config';\nimport type { InitialValuesStyleProps, KeyframeDefinitions } from './config';\nimport { convertAnimationObjectToKeyframes } from './animationParser';\nimport type {\n  AnimationData,\n  ReanimatedWebTransformProperties,\n  TransitionData,\n} from './animationParser';\nimport type { TransformsStyle } from 'react-native';\nimport { LinearTransition } from './transition/Linear.web';\nimport { SequencedTransition } from './transition/Sequenced.web';\nimport { FadingTransition } from './transition/Fading.web';\nimport { JumpingTransition } from './transition/Jumping.web';\nimport { insertWebAnimation } from './domUtils';\nimport { CurvedTransition } from './transition/Curved.web';\nimport { EntryExitTransition } from './transition/EntryExit.web';\n\ntype TransformType = NonNullable<TransformsStyle['transform']>;\n\n// Translate values are passed as numbers. However, if `translate` property receives number, it will not automatically\n// convert it to `px`. Therefore if we want to keep transform we have to add 'px' suffix to each of translate values\n// that are present inside transform.\n//\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction addPxToTransform(transform: TransformType) {\n  type RNTransformProp = (typeof transform)[number];\n\n  // @ts-ignore `existingTransform` cannot be string because in that case\n  // we throw error in `extractTransformFromStyle`\n  const newTransform = transform.map((transformProp: RNTransformProp) => {\n    const newTransformProp: ReanimatedWebTransformProperties = {};\n    for (const [key, value] of Object.entries(transformProp)) {\n      if (\n        (key.includes('translate') || key.includes('perspective')) &&\n        typeof value === 'number'\n      ) {\n        // @ts-ignore After many trials we decided to ignore this error - it says that we cannot use 'key' to index this object.\n        // Sadly it doesn't go away after using cast `key as keyof TransformProperties`.\n        newTransformProp[key] = `${value}px`;\n      } else {\n        // @ts-ignore same as above.\n        newTransformProp[key] = value;\n      }\n    }\n    return newTransformProp;\n  });\n\n  return newTransform;\n}\n\nexport function createCustomKeyFrameAnimation(\n  keyframeDefinitions: KeyframeDefinitions\n) {\n  for (const value of Object.values(keyframeDefinitions)) {\n    if (value.transform) {\n      value.transform = addPxToTransform(value.transform as TransformType);\n    }\n  }\n\n  const animationData: AnimationData = {\n    name: '',\n    style: keyframeDefinitions,\n    duration: -1,\n  };\n\n  animationData.name = generateNextCustomKeyframeName();\n\n  const parsedKeyframe = convertAnimationObjectToKeyframes(animationData);\n\n  insertWebAnimation(animationData.name, parsedKeyframe);\n\n  return animationData.name;\n}\n\nexport function createAnimationWithInitialValues(\n  animationName: string,\n  initialValues: InitialValuesStyleProps\n) {\n  const animationStyle = structuredClone(AnimationsData[animationName].style);\n  const firstAnimationStep = animationStyle['0'];\n\n  const { transform, ...rest } = initialValues;\n  const transformWithPx = addPxToTransform(transform as TransformType);\n\n  if (transform) {\n    // If there was no predefined transform, we can simply assign transform from `initialValues`.\n    if (!firstAnimationStep.transform) {\n      firstAnimationStep.transform = transformWithPx;\n    } else {\n      // Othwerwise we have to merge predefined transform with the one provided in `initialValues`.\n      // To do that, we create `Map` that will contain final transform.\n      const transformStyle = new Map<string, any>();\n\n      // First we assign all of the predefined rules\n      for (const rule of firstAnimationStep.transform) {\n        // In most cases there will be just one iteration\n        for (const [property, value] of Object.entries(rule)) {\n          transformStyle.set(property, value);\n        }\n      }\n\n      // Then we either add new rule, or override one that already exists.\n      for (const rule of transformWithPx) {\n        for (const [property, value] of Object.entries(rule)) {\n          transformStyle.set(property, value);\n        }\n      }\n\n      // Finally, we convert `Map` with final transform back into array of objects.\n      firstAnimationStep.transform = Array.from(\n        transformStyle,\n        ([property, value]) => ({\n          [property]: value,\n        })\n      );\n    }\n  }\n\n  animationStyle['0'] = {\n    ...animationStyle['0'],\n    ...rest,\n  };\n\n  // TODO: Maybe we can extract the logic below into separate function\n  const keyframeName = generateNextCustomKeyframeName();\n\n  const animationObject: AnimationData = {\n    name: keyframeName,\n    style: animationStyle,\n    duration: AnimationsData[animationName].duration,\n  };\n\n  const keyframe = convertAnimationObjectToKeyframes(animationObject);\n\n  insertWebAnimation(keyframeName, keyframe);\n\n  return keyframeName;\n}\n\nlet customKeyframeCounter = 0;\n\nfunction generateNextCustomKeyframeName() {\n  return `REA${customKeyframeCounter++}`;\n}\n\n/**\n * Creates transition of given type, appends it to stylesheet and returns\n * keyframe name.\n *\n * @param transitionType - Type of transition (e.g. LINEAR).\n * @param transitionData - Object containing data for transforms (translateX,\n *   scaleX,...).\n * @returns Keyframe name that represents transition.\n */\nexport function TransitionGenerator(\n  transitionType: TransitionType,\n  transitionData: TransitionData\n) {\n  const transitionKeyframeName = generateNextCustomKeyframeName();\n  let dummyTransitionKeyframeName;\n\n  let transitionObject;\n\n  switch (transitionType) {\n    case TransitionType.LINEAR:\n      transitionObject = LinearTransition(\n        transitionKeyframeName,\n        transitionData\n      );\n      break;\n    case TransitionType.SEQUENCED:\n      transitionObject = SequencedTransition(\n        transitionKeyframeName,\n        transitionData\n      );\n      break;\n    case TransitionType.FADING:\n      transitionObject = FadingTransition(\n        transitionKeyframeName,\n        transitionData\n      );\n      break;\n    case TransitionType.JUMPING:\n      transitionObject = JumpingTransition(\n        transitionKeyframeName,\n        transitionData\n      );\n      break;\n\n    // Here code block with {} is necessary because of eslint\n    case TransitionType.CURVED: {\n      dummyTransitionKeyframeName = generateNextCustomKeyframeName();\n\n      const { firstKeyframeObj, secondKeyframeObj } = CurvedTransition(\n        transitionKeyframeName,\n        dummyTransitionKeyframeName,\n        transitionData\n      );\n\n      transitionObject = firstKeyframeObj;\n\n      const dummyKeyframe =\n        convertAnimationObjectToKeyframes(secondKeyframeObj);\n\n      insertWebAnimation(dummyTransitionKeyframeName, dummyKeyframe);\n\n      break;\n    }\n    case TransitionType.ENTRY_EXIT:\n      transitionObject = EntryExitTransition(\n        transitionKeyframeName,\n        transitionData\n      );\n      break;\n  }\n\n  const transitionKeyframe =\n    convertAnimationObjectToKeyframes(transitionObject);\n\n  insertWebAnimation(transitionKeyframeName, transitionKeyframe);\n\n  return { transitionKeyframeName, dummyTransitionKeyframeName };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}