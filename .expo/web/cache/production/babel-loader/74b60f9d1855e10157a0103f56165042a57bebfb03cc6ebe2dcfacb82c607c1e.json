{"ast":null,"code":"'use strict';var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.EasingNameSymbol=exports.Easing=void 0;var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _Bezier=require(\"./Bezier.js\");function linear(t){'worklet';return t;}function ease(t){'worklet';return(0,_Bezier.Bezier)(0.42,0,1,1)(t);}function quad(t){'worklet';return t*t;}function cubic(t){'worklet';return t*t*t;}function poly(n){'worklet';return function(t){'worklet';return Math.pow(t,n);};}function sin(t){'worklet';return 1-Math.cos(t*Math.PI/2);}function circle(t){'worklet';return 1-Math.sqrt(1-t*t);}function exp(t){'worklet';return Math.pow(2,10*(t-1));}function elastic(){'worklet';var bounciness=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;var p=bounciness*Math.PI;return function(t){'worklet';return 1-Math.pow(Math.cos(t*Math.PI/2),3)*Math.cos(t*p);};}function back(){'worklet';var s=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1.70158;return function(t){'worklet';return t*t*((s+1)*t-s);};}function bounce(t){'worklet';if(t<1/2.75){return 7.5625*t*t;}if(t<2/2.75){var _t=t-1.5/2.75;return 7.5625*_t*_t+0.75;}if(t<2.5/2.75){var _t2=t-2.25/2.75;return 7.5625*_t2*_t2+0.9375;}var t2=t-2.625/2.75;return 7.5625*t2*t2+0.984375;}function bezier(x1,y1,x2,y2){'worklet';return{factory:function factory(){'worklet';return(0,_Bezier.Bezier)(x1,y1,x2,y2);}};}function bezierFn(x1,y1,x2,y2){'worklet';return(0,_Bezier.Bezier)(x1,y1,x2,y2);}function in_(easing){'worklet';return easing;}function out(easing){'worklet';return function(t){'worklet';return 1-easing(1-t);};}function inOut(easing){'worklet';return function(t){'worklet';if(t<0.5){return easing(t*2)/2;}return 1-easing((1-t)*2)/2;};}function steps(){'worklet';var n=arguments.length>0&&arguments[0]!==undefined?arguments[0]:10;var roundToNextStep=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;return function(t){'worklet';var value=Math.min(Math.max(t,0),1)*n;if(roundToNextStep){return Math.ceil(value)/n;}return Math.floor(value)/n;};}var EasingObject={linear:linear,ease:ease,quad:quad,cubic:cubic,poly:poly,sin:sin,circle:circle,exp:exp,elastic:elastic,back:back,bounce:bounce,bezier:bezier,bezierFn:bezierFn,steps:steps,in:in_,out:out,inOut:inOut};var EasingNameSymbol=exports.EasingNameSymbol=Symbol('easingName');for(var _ref of Object.entries(EasingObject)){var _ref2=(0,_slicedToArray2.default)(_ref,2);var easingName=_ref2[0];var easing=_ref2[1];Object.defineProperty(easing,EasingNameSymbol,{value:easingName,configurable:false,enumerable:false,writable:false});}var Easing=exports.Easing=EasingObject;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","EasingNameSymbol","Easing","_slicedToArray2","_Bezier","linear","t","ease","Bezier","quad","cubic","poly","n","Math","pow","sin","cos","PI","circle","sqrt","exp","elastic","bounciness","arguments","length","undefined","p","back","s","bounce","t2","bezier","x1","y1","x2","y2","factory","bezierFn","in_","easing","out","inOut","steps","roundToNextStep","min","max","ceil","floor","EasingObject","in","Symbol","_ref","entries","_ref2","default","easingName","configurable","enumerable","writable"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/react-native-reanimated/src/Easing.ts"],"sourcesContent":["'use strict';\nimport { Bezier } from './Bezier';\nimport type { EasingFunction } from './commonTypes';\n\n/**\n * The `Easing` module implements common easing functions. This module is used\n * by [Animate.timing()](docs/animate.html#timing) to convey physically\n * believable motion in animations.\n *\n * You can find a visualization of some common easing functions at\n * http://easings.net/\n *\n * ### Predefined animations\n *\n * The `Easing` module provides several predefined animations through the\n * following methods:\n *\n * - [`back`](docs/easing.html#back) provides a simple animation where the object\n *   goes slightly back before moving forward\n * - [`bounce`](docs/easing.html#bounce) provides a bouncing animation\n * - [`ease`](docs/easing.html#ease) provides a simple inertial animation\n * - [`elastic`](docs/easing.html#elastic) provides a simple spring interaction\n *\n * ### Standard functions\n *\n * Three standard easing functions are provided:\n *\n * - [`linear`](docs/easing.html#linear)\n * - [`quad`](docs/easing.html#quad)\n * - [`cubic`](docs/easing.html#cubic)\n *\n * The [`poly`](docs/easing.html#poly) function can be used to implement\n * quartic, quintic, and other higher power functions.\n *\n * ### Additional functions\n *\n * Additional mathematical functions are provided by the following methods:\n *\n * - [`bezier`](docs/easing.html#bezier) provides a cubic bezier curve\n * - [`circle`](docs/easing.html#circle) provides a circular function\n * - [`sin`](docs/easing.html#sin) provides a sinusoidal function\n * - [`exp`](docs/easing.html#exp) provides an exponential function\n *\n * The following helpers are used to modify other easing functions.\n *\n * - [`in`](docs/easing.html#in) runs an easing function forwards\n * - [`inOut`](docs/easing.html#inout) makes any easing function symmetrical\n * - [`out`](docs/easing.html#out) runs an easing function backwards\n */\n\n/** @deprecated Please use {@link EasingFunction} type instead. */\nexport type EasingFn = EasingFunction;\n\nexport type EasingFunctionFactory = { factory: () => EasingFunction };\n\n/** @deprecated Please use {@link EasingFunctionFactory} type instead. */\nexport type EasingFactoryFn = EasingFunctionFactory;\n/**\n * A linear function, `f(t) = t`. Position correlates to elapsed time one to\n * one.\n *\n * http://cubic-bezier.com/#0,0,1,1\n */\nfunction linear(t: number): number {\n  'worklet';\n  return t;\n}\n\n/**\n * A simple inertial interaction, similar to an object slowly accelerating to\n * speed.\n *\n * http://cubic-bezier.com/#.42,0,1,1\n */\nfunction ease(t: number): number {\n  'worklet';\n  return Bezier(0.42, 0, 1, 1)(t);\n}\n\n/**\n * A quadratic function, `f(t) = t * t`. Position equals the square of elapsed\n * time.\n *\n * http://easings.net/#easeInQuad\n */\nfunction quad(t: number): number {\n  'worklet';\n  return t * t;\n}\n\n/**\n * A cubic function, `f(t) = t * t * t`. Position equals the cube of elapsed\n * time.\n *\n * http://easings.net/#easeInCubic\n */\nfunction cubic(t: number): number {\n  'worklet';\n  return t * t * t;\n}\n\n/**\n * A power function. Position is equal to the Nth power of elapsed time.\n *\n * N = 4: http://easings.net/#easeInQuart n = 5: http://easings.net/#easeInQuint\n */\nfunction poly(n: number): EasingFunction {\n  'worklet';\n  return (t) => {\n    'worklet';\n    return Math.pow(t, n);\n  };\n}\n\n/**\n * A sinusoidal function.\n *\n * http://easings.net/#easeInSine\n */\nfunction sin(t: number): number {\n  'worklet';\n  return 1 - Math.cos((t * Math.PI) / 2);\n}\n\n/**\n * A circular function.\n *\n * http://easings.net/#easeInCirc\n */\nfunction circle(t: number): number {\n  'worklet';\n  return 1 - Math.sqrt(1 - t * t);\n}\n\n/**\n * An exponential function.\n *\n * http://easings.net/#easeInExpo\n */\nfunction exp(t: number): number {\n  'worklet';\n  return Math.pow(2, 10 * (t - 1));\n}\n\n/**\n * A simple elastic interaction, similar to a spring oscillating back and forth.\n *\n * Default bounciness is 1, which overshoots a little bit once. 0 bounciness\n * doesn't overshoot at all, and bounciness of N `>` 1 will overshoot about N\n * times.\n *\n * http://easings.net/#easeInElastic\n */\nfunction elastic(bounciness = 1): EasingFunction {\n  'worklet';\n  const p = bounciness * Math.PI;\n  return (t) => {\n    'worklet';\n    return 1 - Math.pow(Math.cos((t * Math.PI) / 2), 3) * Math.cos(t * p);\n  };\n}\n\n/**\n * Use with `Animated.parallel()` to create a simple effect where the object\n * animates back slightly as the animation starts.\n *\n * Wolfram Plot:\n *\n * - http://tiny.cc/back_default (s = 1.70158, default)\n */\nfunction back(s = 1.70158): (t: number) => number {\n  'worklet';\n  return (t) => {\n    'worklet';\n    return t * t * ((s + 1) * t - s);\n  };\n}\n\n/**\n * Provides a simple bouncing effect.\n *\n * http://easings.net/#easeInBounce\n */\nfunction bounce(t: number): number {\n  'worklet';\n  if (t < 1 / 2.75) {\n    return 7.5625 * t * t;\n  }\n\n  if (t < 2 / 2.75) {\n    const t2 = t - 1.5 / 2.75;\n    return 7.5625 * t2 * t2 + 0.75;\n  }\n\n  if (t < 2.5 / 2.75) {\n    const t2 = t - 2.25 / 2.75;\n    return 7.5625 * t2 * t2 + 0.9375;\n  }\n\n  const t2 = t - 2.625 / 2.75;\n  return 7.5625 * t2 * t2 + 0.984375;\n}\n\n/**\n * Provides a cubic bezier curve, equivalent to CSS Transitions'\n * `transition-timing-function`.\n *\n * A useful tool to visualize cubic bezier curves can be found at\n * http://cubic-bezier.com/\n */\nfunction bezier(\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number\n): { factory: () => (x: number) => number } {\n  'worklet';\n  return {\n    factory: () => {\n      'worklet';\n      return Bezier(x1, y1, x2, y2);\n    },\n  };\n}\n\nfunction bezierFn(\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number\n): (x: number) => number {\n  'worklet';\n  return Bezier(x1, y1, x2, y2);\n}\n\n/** Runs an easing function forwards. */\nfunction in_(easing: EasingFunction): EasingFunction {\n  'worklet';\n  return easing;\n}\n\n/** Runs an easing function backwards. */\nfunction out(easing: EasingFunction): EasingFunction {\n  'worklet';\n  return (t) => {\n    'worklet';\n    return 1 - easing(1 - t);\n  };\n}\n\n/**\n * Makes any easing function symmetrical. The easing function will run forwards\n * for half of the duration, then backwards for the rest of the duration.\n */\nfunction inOut(easing: EasingFunction): EasingFunction {\n  'worklet';\n  return (t) => {\n    'worklet';\n    if (t < 0.5) {\n      return easing(t * 2) / 2;\n    }\n    return 1 - easing((1 - t) * 2) / 2;\n  };\n}\n\n/**\n * The `steps` easing function jumps between discrete values at regular\n * intervals, creating a stepped animation effect. The `n` parameter determines\n * the number of steps in the animation, and the `roundToNextStep` parameter\n * determines whether the animation should start at the beginning or end of each\n * step.\n */\nfunction steps(n = 10, roundToNextStep = true): EasingFunction {\n  'worklet';\n  return (t) => {\n    'worklet';\n    const value = Math.min(Math.max(t, 0), 1) * n;\n    if (roundToNextStep) {\n      return Math.ceil(value) / n;\n    }\n    return Math.floor(value) / n;\n  };\n}\n\nconst EasingObject = {\n  linear,\n  ease,\n  quad,\n  cubic,\n  poly,\n  sin,\n  circle,\n  exp,\n  elastic,\n  back,\n  bounce,\n  bezier,\n  bezierFn,\n  steps,\n  in: in_,\n  out,\n  inOut,\n};\n\nexport const EasingNameSymbol = Symbol('easingName');\n\nfor (const [easingName, easing] of Object.entries(EasingObject)) {\n  Object.defineProperty(easing, EasingNameSymbol, {\n    value: easingName,\n    configurable: false,\n    enumerable: false,\n    writable: false,\n  });\n}\n\nexport const Easing = EasingObject;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}