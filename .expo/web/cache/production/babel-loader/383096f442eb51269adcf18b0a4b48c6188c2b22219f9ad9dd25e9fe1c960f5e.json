{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _toConsumableArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));var _asyncToGenerator2=_interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _react=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native\");var _native=require(\"@react-navigation/native\");var _api=require(\"../utils/api\");var _store=_interopRequireDefault(require(\"../store/store.jsx\"));var _jsxRuntime=require(\"react/jsx-runtime\");function _getRequireWildcardCache(e){if(\"function\"!=typeof WeakMap)return null;var r=new WeakMap(),t=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r;})(e);}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if(\"default\"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u];}return n.default=e,t&&t.set(e,n),n;}var GptLearning=function GptLearning(){var navigation=(0,_native.useNavigation)();var _useState=(0,_react.useState)([]),_useState2=(0,_slicedToArray2.default)(_useState,2),scenesData=_useState2[0],setScenesData=_useState2[1];var _useState3=(0,_react.useState)(false),_useState4=(0,_slicedToArray2.default)(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var _useState5=(0,_react.useState)([]),_useState6=(0,_slicedToArray2.default)(_useState5,2),regenerateLoading=_useState6[0],setRegenerateLoading=_useState6[1];var _useState7=(0,_react.useState)(null),_useState8=(0,_slicedToArray2.default)(_useState7,2),selectedScene=_useState8[0],setSelectedScene=_useState8[1];var learningGoals=(0,_store.default)(function(state){return state.learningGoals;});var setLearningGoals=(0,_store.default)(function(state){return state.setLearningGoals;});(0,_react.useEffect)(function(){var fetchLearningContent=function(){var _ref=(0,_asyncToGenerator2.default)(function*(){setLoading(true);try{var _JSON$parse;var prompt=`基于以下环境要求生成三个场景：${(learningGoals==null?void 0:learningGoals.环境)||'默认环境'}`;var gptResponse=yield(0,_api.gptQuery)(prompt);var scenes=((_JSON$parse=JSON.parse(gptResponse))==null?void 0:_JSON$parse.response)||[];console.log('GPT Scenes:',scenes);var imagePromises=scenes.map(function(scene){return(0,_api.generateImage)(`绝对不允许出现文字。卡通风格。重要：场景尽量人物较少，不允许超过2个人，且全部为中国人，场景尽量较空，绝对不允许出现文字。以下是场景描述${scene.描述}`).then(function(url){return Object.assign({},scene,{imageUrl:url});});});var generatedScenes=yield Promise.all(imagePromises);setScenesData(generatedScenes);_reactNative.Alert.alert('学习成功','GPT 已学习内容并生成反馈。');}catch(error){console.error('学习失败:',error);_reactNative.Alert.alert('错误',error.message||'学习内容失败，请重试。');}finally{setLoading(false);}});return function fetchLearningContent(){return _ref.apply(this,arguments);};}();fetchLearningContent();},[learningGoals]);var handleRegenerate=function(){var _ref2=(0,_asyncToGenerator2.default)(function*(index,description){setRegenerateLoading(function(prev){var newLoading=(0,_toConsumableArray2.default)(prev);newLoading[index]=true;return newLoading;});try{var newImageUrl=yield(0,_api.generateImage)(`${description}，卡通风格`);setScenesData(function(prev){return prev.map(function(scene,i){return i===index?Object.assign({},scene,{imageUrl:newImageUrl}):scene;});});}catch(error){console.error('重新生成失败:',error);_reactNative.Alert.alert('错误','无法重新生成图片，请重试。');}finally{setRegenerateLoading(function(prev){var newLoading=(0,_toConsumableArray2.default)(prev);newLoading[index]=false;return newLoading;});}});return function handleRegenerate(_x,_x2){return _ref2.apply(this,arguments);};}();var handleSubmit=function handleSubmit(){if(!selectedScene){_reactNative.Alert.alert('错误','请选择一个场景进行提交');return;}var updatedGoals=Object.assign({},learningGoals,{选中场景:selectedScene});setLearningGoals(updatedGoals);_reactNative.Alert.alert('提交成功',`选中的场景已更新到学习目标: ${JSON.stringify(updatedGoals,null,2)}`);navigation.navigate('DisplayStoreData');};return(0,_jsxRuntime.jsxs)(_reactNative.View,{style:styles.container,children:[(0,_jsxRuntime.jsx)(_reactNative.ScrollView,{contentContainerStyle:styles.scrollContainer,children:loading?(0,_jsxRuntime.jsx)(_reactNative.ActivityIndicator,{size:\"large\",color:\"#007BFF\"}):scenesData.map(function(scene,index){return(0,_jsxRuntime.jsxs)(_reactNative.View,{style:styles.card,children:[(0,_jsxRuntime.jsx)(_reactNative.Image,{source:{uri:scene.imageUrl},style:styles.image,resizeMode:\"contain\"}),(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.sceneTitle,children:scene.场景}),(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.sceneDescription,children:scene.描述}),(0,_jsxRuntime.jsx)(_reactNative.TouchableOpacity,{style:[styles.regenerateButton,regenerateLoading[index]&&styles.buttonDisabled],onPress:function onPress(){return handleRegenerate(index,scene.描述);},disabled:regenerateLoading[index],children:regenerateLoading[index]?(0,_jsxRuntime.jsx)(_reactNative.ActivityIndicator,{size:\"small\",color:\"#FFF\"}):(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.buttonText,children:\"\\u91CD\\u65B0\\u751F\\u6210\\u56FE\\u7247\"})}),(0,_jsxRuntime.jsx)(_reactNative.TouchableOpacity,{style:selectedScene===scene?[styles.selectButton,styles.selected]:styles.selectButton,onPress:function onPress(){return setSelectedScene(scene);},children:(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.buttonText,children:selectedScene===scene?'已选中':'选择此场景'})})]},index);})}),(0,_jsxRuntime.jsx)(_reactNative.TouchableOpacity,{style:[styles.submitButton,!selectedScene&&styles.submitButtonDisabled],onPress:handleSubmit,disabled:!selectedScene,children:(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.buttonText,children:\"\\u63D0\\u4EA4\\u9009\\u4E2D\\u573A\\u666F\"})})]});};var _default=exports.default=GptLearning;var styles=_reactNative.StyleSheet.create({container:{flex:1,padding:16,backgroundColor:'#f5f5f5'},scrollContainer:{alignItems:'center',paddingVertical:16},card:{marginBottom:20,padding:16,borderWidth:1,borderColor:'#ccc',borderRadius:8,backgroundColor:'#fff',alignItems:'center',width:'90%'},image:{width:'100%',height:200,borderRadius:8,marginBottom:12},sceneTitle:{fontSize:18,fontWeight:'bold',marginBottom:8,textAlign:'center'},sceneDescription:{fontSize:14,color:'#555',textAlign:'center',marginBottom:12},regenerateButton:{paddingVertical:10,paddingHorizontal:20,backgroundColor:'#007BFF',borderRadius:6,marginBottom:8},buttonDisabled:{backgroundColor:'#ccc'},selectButton:{paddingVertical:10,paddingHorizontal:20,backgroundColor:'#28A745',borderRadius:6},selected:{backgroundColor:'#FFC107'},submitButton:{paddingVertical:15,paddingHorizontal:20,backgroundColor:'#DC3545',borderRadius:6,alignItems:'center',marginVertical:16},submitButtonDisabled:{backgroundColor:'#ccc'},buttonText:{color:'#fff',fontSize:14,fontWeight:'bold'},feedbackText:{fontSize:16,color:'#666',textAlign:'center',marginTop:20}});","map":{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_native","_api","_store","_interopRequireDefault","_jsxRuntime","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","GptLearning","navigation","useNavigation","_useState","useState","_useState2","_slicedToArray2","scenesData","setScenesData","_useState3","_useState4","loading","setLoading","_useState5","_useState6","regenerateLoading","setRegenerateLoading","_useState7","_useState8","selectedScene","setSelectedScene","learningGoals","useStore","state","setLearningGoals","useEffect","fetchLearningContent","_ref","_asyncToGenerator2","_JSON$parse","prompt","环境","gptResponse","gptQuery","scenes","JSON","parse","response","console","log","imagePromises","map","scene","generateImage","描述","then","url","assign","imageUrl","generatedScenes","Promise","all","Alert","alert","error","message","apply","arguments","handleRegenerate","_ref2","index","description","prev","newLoading","_toConsumableArray2","newImageUrl","_x","_x2","handleSubmit","updatedGoals","选中场景","stringify","navigate","jsxs","View","style","styles","container","children","jsx","ScrollView","contentContainerStyle","scrollContainer","ActivityIndicator","size","color","card","Image","source","uri","image","resizeMode","Text","sceneTitle","场景","sceneDescription","TouchableOpacity","regenerateButton","buttonDisabled","onPress","disabled","buttonText","selectButton","selected","submitButton","submitButtonDisabled","_default","exports","StyleSheet","create","flex","padding","backgroundColor","alignItems","paddingVertical","marginBottom","borderWidth","borderColor","borderRadius","width","height","fontSize","fontWeight","textAlign","paddingHorizontal","marginVertical","feedbackText","marginTop"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/SourceCode/GptLearning/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n    View,\n    Text,\n    StyleSheet,\n    Alert,\n    ScrollView,\n    Image,\n    TouchableOpacity,\n    ActivityIndicator,\n} from 'react-native';\nimport { useNavigation } from '@react-navigation/native'; // 导入导航功能\nimport { gptQuery, generateImage } from '../utils/api'; // 导入 GPT 和图片生成 API\nimport useStore from '../store/store.jsx'; // 导入 zustand store\n\nconst GptLearning = () => {\n    const navigation = useNavigation(); // 获取导航对象\n    const [scenesData, setScenesData] = useState([]); // 场景和图片数据\n    const [loading, setLoading] = useState(false); // 加载状态\n    const [regenerateLoading, setRegenerateLoading] = useState([]); // 单独场景重新生成的加载状态\n    const [selectedScene, setSelectedScene] = useState(null); // 选中的场景\n    const learningGoals = useStore((state) => state.learningGoals); // 获取 store 中的 learningGoals\n    const setLearningGoals = useStore((state) => state.setLearningGoals); // 更新 store 中的 learningGoals\n\n    useEffect(() => {\n        const fetchLearningContent = async () => {\n            setLoading(true);\n            try {\n                const prompt = `基于以下环境要求生成三个场景：${learningGoals?.环境 || '默认环境'}`;\n                const gptResponse = await gptQuery(prompt); // 调用 GPT API\n                const scenes = JSON.parse(gptResponse)?.response || [];\n                console.log('GPT Scenes:', scenes);\n\n                // 为每个场景生成卡通风格图片\n                const imagePromises = scenes.map((scene) =>\n                    generateImage(`绝对不允许出现文字。卡通风格。重要：场景尽量人物较少，不允许超过2个人，且全部为中国人，场景尽量较空，绝对不允许出现文字。以下是场景描述${scene.描述}`).then((url) => ({ ...scene, imageUrl: url }))\n                );\n                const generatedScenes = await Promise.all(imagePromises);\n                setScenesData(generatedScenes);\n\n                Alert.alert('学习成功', 'GPT 已学习内容并生成反馈。');\n            } catch (error) {\n                console.error('学习失败:', error);\n                Alert.alert('错误', error.message || '学习内容失败，请重试。');\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchLearningContent();\n    }, [learningGoals]); // 监听 learningGoals 的变化\n\n    const handleRegenerate = async (index, description) => {\n        setRegenerateLoading((prev) => {\n            const newLoading = [...prev];\n            newLoading[index] = true;\n            return newLoading;\n        });\n        try {\n            const newImageUrl = await generateImage(`${description}，卡通风格`);\n            setScenesData((prev) =>\n                prev.map((scene, i) => (i === index ? { ...scene, imageUrl: newImageUrl } : scene))\n            );\n        } catch (error) {\n            console.error('重新生成失败:', error);\n            Alert.alert('错误', '无法重新生成图片，请重试。');\n        } finally {\n            setRegenerateLoading((prev) => {\n                const newLoading = [...prev];\n                newLoading[index] = false;\n                return newLoading;\n            });\n        }\n    };\n\n    const handleSubmit = () => {\n        if (!selectedScene) {\n            Alert.alert('错误', '请选择一个场景进行提交');\n            return;\n        }\n        const updatedGoals = { ...learningGoals, 选中场景: selectedScene };\n        setLearningGoals(updatedGoals);\n        Alert.alert('提交成功', `选中的场景已更新到学习目标: ${JSON.stringify(updatedGoals, null, 2)}`);\n        navigation.navigate('DisplayStoreData'); // 跳转到 DisplayStoreData 页面\n    };\n\n    return (\n        <View style={styles.container}>\n            <ScrollView contentContainerStyle={styles.scrollContainer}>\n                {loading ? (\n                    <ActivityIndicator size=\"large\" color=\"#007BFF\" />\n                ) : (\n                    scenesData.map((scene, index) => (\n                        <View key={index} style={styles.card}>\n                            <Image source={{ uri: scene.imageUrl }} style={styles.image} resizeMode=\"contain\" />\n                            <Text style={styles.sceneTitle}>{scene.场景}</Text>\n                            <Text style={styles.sceneDescription}>{scene.描述}</Text>\n                            <TouchableOpacity\n                                style={[styles.regenerateButton, regenerateLoading[index] && styles.buttonDisabled]}\n                                onPress={() => handleRegenerate(index, scene.描述)}\n                                disabled={regenerateLoading[index]}\n                            >\n                                {regenerateLoading[index] ? (\n                                    <ActivityIndicator size=\"small\" color=\"#FFF\" />\n                                ) : (\n                                    <Text style={styles.buttonText}>重新生成图片</Text>\n                                )}\n                            </TouchableOpacity>\n                            <TouchableOpacity\n                                style={\n                                    selectedScene === scene\n                                        ? [styles.selectButton, styles.selected]\n                                        : styles.selectButton\n                                }\n                                onPress={() => setSelectedScene(scene)}\n                            >\n                                <Text style={styles.buttonText}>\n                                    {selectedScene === scene ? '已选中' : '选择此场景'}\n                                </Text>\n                            </TouchableOpacity>\n                        </View>\n                    ))\n                )}\n            </ScrollView>\n            <TouchableOpacity\n                style={[\n                    styles.submitButton,\n                    !selectedScene && styles.submitButtonDisabled,\n                ]}\n                onPress={handleSubmit}\n                disabled={!selectedScene}\n            >\n                <Text style={styles.buttonText}>提交选中场景</Text>\n            </TouchableOpacity>\n        </View>\n    );\n};\n\nexport default GptLearning;\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        padding: 16,\n        backgroundColor: '#f5f5f5',\n    },\n    scrollContainer: {\n        alignItems: 'center',\n        paddingVertical: 16,\n    },\n    card: {\n        marginBottom: 20,\n        padding: 16,\n        borderWidth: 1,\n        borderColor: '#ccc',\n        borderRadius: 8,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        width: '90%',\n    },\n    image: {\n        width: '100%',\n        height: 200,\n        borderRadius: 8,\n        marginBottom: 12,\n    },\n    sceneTitle: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        marginBottom: 8,\n        textAlign: 'center',\n    },\n    sceneDescription: {\n        fontSize: 14,\n        color: '#555',\n        textAlign: 'center',\n        marginBottom: 12,\n    },\n    regenerateButton: {\n        paddingVertical: 10,\n        paddingHorizontal: 20,\n        backgroundColor: '#007BFF',\n        borderRadius: 6,\n        marginBottom: 8,\n    },\n    buttonDisabled: {\n        backgroundColor: '#ccc',\n    },\n    selectButton: {\n        paddingVertical: 10,\n        paddingHorizontal: 20,\n        backgroundColor: '#28A745',\n        borderRadius: 6,\n    },\n    selected: {\n        backgroundColor: '#FFC107',\n    },\n    submitButton: {\n        paddingVertical: 15,\n        paddingHorizontal: 20,\n        backgroundColor: '#DC3545',\n        borderRadius: 6,\n        alignItems: 'center',\n        marginVertical: 16,\n    },\n    submitButtonDisabled: {\n        backgroundColor: '#ccc',\n    },\n    buttonText: {\n        color: '#fff',\n        fontSize: 14,\n        fontWeight: 'bold',\n    },\n    feedbackText: {\n        fontSize: 16,\n        color: '#666',\n        textAlign: 'center',\n        marginTop: 20,\n    },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}