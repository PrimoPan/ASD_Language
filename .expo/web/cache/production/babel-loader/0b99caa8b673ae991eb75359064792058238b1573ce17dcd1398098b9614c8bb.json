{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _PointerType=require(\"../../PointerType\");var _State=require(\"../../State\");var _PointerTracker=_interopRequireDefault(require(\"./PointerTracker\"));function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}var GestureHandlerOrchestrator=exports.default=function(){function GestureHandlerOrchestrator(){(0,_classCallCheck2.default)(this,GestureHandlerOrchestrator);_defineProperty(this,\"gestureHandlers\",[]);_defineProperty(this,\"awaitingHandlers\",[]);_defineProperty(this,\"awaitingHandlersTags\",new Set());_defineProperty(this,\"handlingChangeSemaphore\",0);_defineProperty(this,\"activationIndex\",0);}return(0,_createClass2.default)(GestureHandlerOrchestrator,[{key:\"scheduleFinishedHandlersCleanup\",value:function scheduleFinishedHandlersCleanup(){if(this.handlingChangeSemaphore===0){this.cleanupFinishedHandlers();}}},{key:\"cleanHandler\",value:function cleanHandler(handler){handler.reset();handler.setActive(false);handler.setAwaiting(false);handler.setActivationIndex(Number.MAX_VALUE);}},{key:\"removeHandlerFromOrchestrator\",value:function removeHandlerFromOrchestrator(handler){var indexInGestureHandlers=this.gestureHandlers.indexOf(handler);var indexInAwaitingHandlers=this.awaitingHandlers.indexOf(handler);if(indexInGestureHandlers>=0){this.gestureHandlers.splice(indexInGestureHandlers,1);}if(indexInAwaitingHandlers>=0){this.awaitingHandlers.splice(indexInAwaitingHandlers,1);this.awaitingHandlersTags.delete(handler.getTag());}}},{key:\"cleanupFinishedHandlers\",value:function cleanupFinishedHandlers(){var handlersToRemove=new Set();for(var i=this.gestureHandlers.length-1;i>=0;--i){var handler=this.gestureHandlers[i];if(this.isFinished(handler.getState())&&!handler.isAwaiting()){this.cleanHandler(handler);handlersToRemove.add(handler);}}this.gestureHandlers=this.gestureHandlers.filter(function(handler){return!handlersToRemove.has(handler);});}},{key:\"hasOtherHandlerToWaitFor\",value:function hasOtherHandlerToWaitFor(handler){var _this=this;var hasToWaitFor=function hasToWaitFor(otherHandler){return!_this.isFinished(otherHandler.getState())&&_this.shouldHandlerWaitForOther(handler,otherHandler);};return this.gestureHandlers.some(hasToWaitFor);}},{key:\"shouldBeCancelledByFinishedHandler\",value:function shouldBeCancelledByFinishedHandler(handler){var _this2=this;var shouldBeCancelled=function shouldBeCancelled(otherHandler){return _this2.shouldHandlerWaitForOther(handler,otherHandler)&&otherHandler.getState()===_State.State.END;};return this.gestureHandlers.some(shouldBeCancelled);}},{key:\"tryActivate\",value:function tryActivate(handler){if(this.shouldBeCancelledByFinishedHandler(handler)){handler.cancel();return;}if(this.hasOtherHandlerToWaitFor(handler)){this.addAwaitingHandler(handler);return;}var handlerState=handler.getState();if(handlerState===_State.State.CANCELLED||handlerState===_State.State.FAILED){return;}if(this.shouldActivate(handler)){this.makeActive(handler);return;}if(handlerState===_State.State.ACTIVE){handler.fail();return;}if(handlerState===_State.State.BEGAN){handler.cancel();}}},{key:\"shouldActivate\",value:function shouldActivate(handler){var _this3=this;var shouldBeCancelledBy=function shouldBeCancelledBy(otherHandler){return _this3.shouldHandlerBeCancelledBy(handler,otherHandler);};return!this.gestureHandlers.some(shouldBeCancelledBy);}},{key:\"cleanupAwaitingHandlers\",value:function cleanupAwaitingHandlers(handler){var _this4=this;var shouldWait=function shouldWait(otherHandler){return!otherHandler.isAwaiting()&&_this4.shouldHandlerWaitForOther(otherHandler,handler);};for(var otherHandler of this.awaitingHandlers){if(shouldWait(otherHandler)){this.cleanHandler(otherHandler);this.awaitingHandlersTags.delete(otherHandler.getTag());}}this.awaitingHandlers=this.awaitingHandlers.filter(function(otherHandler){return _this4.awaitingHandlersTags.has(otherHandler.getTag());});}},{key:\"onHandlerStateChange\",value:function onHandlerStateChange(handler,newState,oldState,sendIfDisabled){if(!handler.isEnabled()&&!sendIfDisabled){return;}this.handlingChangeSemaphore+=1;if(this.isFinished(newState)){for(var otherHandler of this.awaitingHandlers){if(!this.shouldHandlerWaitForOther(otherHandler,handler)||!this.awaitingHandlersTags.has(otherHandler.getTag())){continue;}if(newState!==_State.State.END){this.tryActivate(otherHandler);continue;}otherHandler.cancel();if(otherHandler.getState()===_State.State.END){otherHandler.sendEvent(_State.State.CANCELLED,_State.State.BEGAN);}otherHandler.setAwaiting(false);}}if(newState===_State.State.ACTIVE){this.tryActivate(handler);}else if(oldState===_State.State.ACTIVE||oldState===_State.State.END){if(handler.isActive()){handler.sendEvent(newState,oldState);}else if(oldState===_State.State.ACTIVE&&(newState===_State.State.CANCELLED||newState===_State.State.FAILED)){handler.sendEvent(newState,_State.State.BEGAN);}}else if(oldState!==_State.State.UNDETERMINED||newState!==_State.State.CANCELLED){handler.sendEvent(newState,oldState);}this.handlingChangeSemaphore-=1;this.scheduleFinishedHandlersCleanup();if(!this.awaitingHandlers.includes(handler)){this.cleanupAwaitingHandlers(handler);}}},{key:\"makeActive\",value:function makeActive(handler){var currentState=handler.getState();handler.setActive(true);handler.setShouldResetProgress(true);handler.setActivationIndex(this.activationIndex++);for(var i=this.gestureHandlers.length-1;i>=0;--i){if(this.shouldHandlerBeCancelledBy(this.gestureHandlers[i],handler)){this.gestureHandlers[i].cancel();}}for(var otherHandler of this.awaitingHandlers){if(this.shouldHandlerBeCancelledBy(otherHandler,handler)){otherHandler.setAwaiting(false);}}handler.sendEvent(_State.State.ACTIVE,_State.State.BEGAN);if(currentState!==_State.State.ACTIVE){handler.sendEvent(_State.State.END,_State.State.ACTIVE);if(currentState!==_State.State.END){handler.sendEvent(_State.State.UNDETERMINED,_State.State.END);}}if(!handler.isAwaiting()){return;}handler.setAwaiting(false);this.awaitingHandlers=this.awaitingHandlers.filter(function(otherHandler){return otherHandler!==handler;});}},{key:\"addAwaitingHandler\",value:function addAwaitingHandler(handler){if(this.awaitingHandlers.includes(handler)){return;}this.awaitingHandlers.push(handler);this.awaitingHandlersTags.add(handler.getTag());handler.setAwaiting(true);handler.setActivationIndex(this.activationIndex++);}},{key:\"recordHandlerIfNotPresent\",value:function recordHandlerIfNotPresent(handler){if(this.gestureHandlers.includes(handler)){return;}this.gestureHandlers.push(handler);handler.setActive(false);handler.setAwaiting(false);handler.setActivationIndex(Number.MAX_SAFE_INTEGER);}},{key:\"shouldHandlerWaitForOther\",value:function shouldHandlerWaitForOther(handler,otherHandler){return handler!==otherHandler&&(handler.shouldWaitForHandlerFailure(otherHandler)||otherHandler.shouldRequireToWaitForFailure(handler));}},{key:\"canRunSimultaneously\",value:function canRunSimultaneously(gh1,gh2){return gh1===gh2||gh1.shouldRecognizeSimultaneously(gh2)||gh2.shouldRecognizeSimultaneously(gh1);}},{key:\"shouldHandlerBeCancelledBy\",value:function shouldHandlerBeCancelledBy(handler,otherHandler){if(this.canRunSimultaneously(handler,otherHandler)){return false;}if(handler.isAwaiting()||handler.getState()===_State.State.ACTIVE){return handler.shouldBeCancelledByOther(otherHandler);}var handlerPointers=handler.getTrackedPointersID();var otherPointers=otherHandler.getTrackedPointersID();if(!_PointerTracker.default.shareCommonPointers(handlerPointers,otherPointers)&&handler.getDelegate().getView()!==otherHandler.getDelegate().getView()){return this.checkOverlap(handler,otherHandler);}return true;}},{key:\"checkOverlap\",value:function checkOverlap(handler,otherHandler){var isPointerWithinBothBounds=function isPointerWithinBothBounds(pointer){var point=handler.getTracker().getLastAbsoluteCoords(pointer);return handler.getDelegate().isPointerInBounds(point)&&otherHandler.getDelegate().isPointerInBounds(point);};return handler.getTrackedPointersID().some(isPointerWithinBothBounds);}},{key:\"isFinished\",value:function isFinished(state){return state===_State.State.END||state===_State.State.FAILED||state===_State.State.CANCELLED;}},{key:\"cancelMouseAndPenGestures\",value:function cancelMouseAndPenGestures(currentHandler){this.gestureHandlers.forEach(function(handler){if(handler.getPointerType()!==_PointerType.PointerType.MOUSE&&handler.getPointerType()!==_PointerType.PointerType.STYLUS){return;}if(handler!==currentHandler){handler.cancel();}else{handler.getTracker().resetTracker();}});}}],[{key:\"getInstance\",value:function getInstance(){if(!GestureHandlerOrchestrator.instance){GestureHandlerOrchestrator.instance=new GestureHandlerOrchestrator();}return GestureHandlerOrchestrator.instance;}}]);}();_defineProperty(GestureHandlerOrchestrator,\"instance\",void 0);","map":{"version":3,"names":["_PointerType","require","_State","_PointerTracker","_interopRequireDefault","GestureHandlerOrchestrator","exports","default","_classCallCheck2","_defineProperty","Set","_createClass2","key","value","scheduleFinishedHandlersCleanup","handlingChangeSemaphore","cleanupFinishedHandlers","cleanHandler","handler","reset","setActive","setAwaiting","setActivationIndex","Number","MAX_VALUE","removeHandlerFromOrchestrator","indexInGestureHandlers","gestureHandlers","indexOf","indexInAwaitingHandlers","awaitingHandlers","splice","awaitingHandlersTags","delete","getTag","handlersToRemove","i","length","isFinished","getState","isAwaiting","add","filter","has","hasOtherHandlerToWaitFor","_this","hasToWaitFor","otherHandler","shouldHandlerWaitForOther","some","shouldBeCancelledByFinishedHandler","_this2","shouldBeCancelled","State","END","tryActivate","cancel","addAwaitingHandler","handlerState","CANCELLED","FAILED","shouldActivate","makeActive","ACTIVE","fail","BEGAN","_this3","shouldBeCancelledBy","shouldHandlerBeCancelledBy","cleanupAwaitingHandlers","_this4","shouldWait","onHandlerStateChange","newState","oldState","sendIfDisabled","isEnabled","sendEvent","isActive","UNDETERMINED","includes","currentState","setShouldResetProgress","activationIndex","push","recordHandlerIfNotPresent","MAX_SAFE_INTEGER","shouldWaitForHandlerFailure","shouldRequireToWaitForFailure","canRunSimultaneously","gh1","gh2","shouldRecognizeSimultaneously","shouldBeCancelledByOther","handlerPointers","getTrackedPointersID","otherPointers","PointerTracker","shareCommonPointers","getDelegate","getView","checkOverlap","isPointerWithinBothBounds","pointer","point","getTracker","getLastAbsoluteCoords","isPointerInBounds","state","cancelMouseAndPenGestures","currentHandler","forEach","getPointerType","PointerType","MOUSE","STYLUS","resetTracker","getInstance","instance"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/react-native-gesture-handler/lib/module/web/tools/GestureHandlerOrchestrator.ts"],"sourcesContent":["import { PointerType } from '../../PointerType';\nimport { State } from '../../State';\n\nimport type IGestureHandler from '../handlers/IGestureHandler';\nimport PointerTracker from './PointerTracker';\n\nexport default class GestureHandlerOrchestrator {\n  private static instance: GestureHandlerOrchestrator;\n\n  private gestureHandlers: IGestureHandler[] = [];\n  private awaitingHandlers: IGestureHandler[] = [];\n  private awaitingHandlersTags: Set<number> = new Set();\n\n  private handlingChangeSemaphore = 0;\n  private activationIndex = 0;\n\n  // Private beacuse of Singleton\n  // eslint-disable-next-line no-useless-constructor, @typescript-eslint/no-empty-function\n  private constructor() {}\n\n  private scheduleFinishedHandlersCleanup(): void {\n    if (this.handlingChangeSemaphore === 0) {\n      this.cleanupFinishedHandlers();\n    }\n  }\n\n  private cleanHandler(handler: IGestureHandler): void {\n    handler.reset();\n    handler.setActive(false);\n    handler.setAwaiting(false);\n    handler.setActivationIndex(Number.MAX_VALUE);\n  }\n\n  public removeHandlerFromOrchestrator(handler: IGestureHandler): void {\n    const indexInGestureHandlers = this.gestureHandlers.indexOf(handler);\n    const indexInAwaitingHandlers = this.awaitingHandlers.indexOf(handler);\n\n    if (indexInGestureHandlers >= 0) {\n      this.gestureHandlers.splice(indexInGestureHandlers, 1);\n    }\n\n    if (indexInAwaitingHandlers >= 0) {\n      this.awaitingHandlers.splice(indexInAwaitingHandlers, 1);\n      this.awaitingHandlersTags.delete(handler.getTag());\n    }\n  }\n\n  private cleanupFinishedHandlers(): void {\n    const handlersToRemove = new Set<IGestureHandler>();\n\n    for (let i = this.gestureHandlers.length - 1; i >= 0; --i) {\n      const handler = this.gestureHandlers[i];\n\n      if (this.isFinished(handler.getState()) && !handler.isAwaiting()) {\n        this.cleanHandler(handler);\n        handlersToRemove.add(handler);\n      }\n    }\n\n    this.gestureHandlers = this.gestureHandlers.filter(\n      (handler) => !handlersToRemove.has(handler)\n    );\n  }\n\n  private hasOtherHandlerToWaitFor(handler: IGestureHandler): boolean {\n    const hasToWaitFor = (otherHandler: IGestureHandler) => {\n      return (\n        !this.isFinished(otherHandler.getState()) &&\n        this.shouldHandlerWaitForOther(handler, otherHandler)\n      );\n    };\n\n    return this.gestureHandlers.some(hasToWaitFor);\n  }\n\n  private shouldBeCancelledByFinishedHandler(\n    handler: IGestureHandler\n  ): boolean {\n    const shouldBeCancelled = (otherHandler: IGestureHandler) => {\n      return (\n        this.shouldHandlerWaitForOther(handler, otherHandler) &&\n        otherHandler.getState() === State.END\n      );\n    };\n\n    return this.gestureHandlers.some(shouldBeCancelled);\n  }\n\n  private tryActivate(handler: IGestureHandler): void {\n    if (this.shouldBeCancelledByFinishedHandler(handler)) {\n      handler.cancel();\n      return;\n    }\n\n    if (this.hasOtherHandlerToWaitFor(handler)) {\n      this.addAwaitingHandler(handler);\n      return;\n    }\n\n    const handlerState = handler.getState();\n\n    if (handlerState === State.CANCELLED || handlerState === State.FAILED) {\n      return;\n    }\n\n    if (this.shouldActivate(handler)) {\n      this.makeActive(handler);\n      return;\n    }\n\n    if (handlerState === State.ACTIVE) {\n      handler.fail();\n      return;\n    }\n\n    if (handlerState === State.BEGAN) {\n      handler.cancel();\n    }\n  }\n\n  private shouldActivate(handler: IGestureHandler): boolean {\n    const shouldBeCancelledBy = (otherHandler: IGestureHandler) => {\n      return this.shouldHandlerBeCancelledBy(handler, otherHandler);\n    };\n\n    return !this.gestureHandlers.some(shouldBeCancelledBy);\n  }\n\n  private cleanupAwaitingHandlers(handler: IGestureHandler): void {\n    const shouldWait = (otherHandler: IGestureHandler) => {\n      return (\n        !otherHandler.isAwaiting() &&\n        this.shouldHandlerWaitForOther(otherHandler, handler)\n      );\n    };\n\n    for (const otherHandler of this.awaitingHandlers) {\n      if (shouldWait(otherHandler)) {\n        this.cleanHandler(otherHandler);\n        this.awaitingHandlersTags.delete(otherHandler.getTag());\n      }\n    }\n\n    this.awaitingHandlers = this.awaitingHandlers.filter((otherHandler) =>\n      this.awaitingHandlersTags.has(otherHandler.getTag())\n    );\n  }\n\n  public onHandlerStateChange(\n    handler: IGestureHandler,\n    newState: State,\n    oldState: State,\n    sendIfDisabled?: boolean\n  ): void {\n    if (!handler.isEnabled() && !sendIfDisabled) {\n      return;\n    }\n\n    this.handlingChangeSemaphore += 1;\n\n    if (this.isFinished(newState)) {\n      for (const otherHandler of this.awaitingHandlers) {\n        if (\n          !this.shouldHandlerWaitForOther(otherHandler, handler) ||\n          !this.awaitingHandlersTags.has(otherHandler.getTag())\n        ) {\n          continue;\n        }\n\n        if (newState !== State.END) {\n          this.tryActivate(otherHandler);\n          continue;\n        }\n\n        otherHandler.cancel();\n\n        if (otherHandler.getState() === State.END) {\n          // Handle edge case, where discrete gestures end immediately after activation thus\n          // their state is set to END and when the gesture they are waiting for activates they\n          // should be cancelled, however `cancel` was never sent as gestures were already in the END state.\n          // Send synthetic BEGAN -> CANCELLED to properly handle JS logic\n          otherHandler.sendEvent(State.CANCELLED, State.BEGAN);\n        }\n\n        otherHandler.setAwaiting(false);\n      }\n    }\n\n    if (newState === State.ACTIVE) {\n      this.tryActivate(handler);\n    } else if (oldState === State.ACTIVE || oldState === State.END) {\n      if (handler.isActive()) {\n        handler.sendEvent(newState, oldState);\n      } else if (\n        oldState === State.ACTIVE &&\n        (newState === State.CANCELLED || newState === State.FAILED)\n      ) {\n        handler.sendEvent(newState, State.BEGAN);\n      }\n    } else if (\n      oldState !== State.UNDETERMINED ||\n      newState !== State.CANCELLED\n    ) {\n      handler.sendEvent(newState, oldState);\n    }\n\n    this.handlingChangeSemaphore -= 1;\n\n    this.scheduleFinishedHandlersCleanup();\n\n    if (!this.awaitingHandlers.includes(handler)) {\n      this.cleanupAwaitingHandlers(handler);\n    }\n  }\n\n  private makeActive(handler: IGestureHandler): void {\n    const currentState = handler.getState();\n\n    handler.setActive(true);\n    handler.setShouldResetProgress(true);\n    handler.setActivationIndex(this.activationIndex++);\n\n    for (let i = this.gestureHandlers.length - 1; i >= 0; --i) {\n      if (this.shouldHandlerBeCancelledBy(this.gestureHandlers[i], handler)) {\n        this.gestureHandlers[i].cancel();\n      }\n    }\n\n    for (const otherHandler of this.awaitingHandlers) {\n      if (this.shouldHandlerBeCancelledBy(otherHandler, handler)) {\n        otherHandler.setAwaiting(false);\n      }\n    }\n\n    handler.sendEvent(State.ACTIVE, State.BEGAN);\n\n    if (currentState !== State.ACTIVE) {\n      handler.sendEvent(State.END, State.ACTIVE);\n      if (currentState !== State.END) {\n        handler.sendEvent(State.UNDETERMINED, State.END);\n      }\n    }\n\n    if (!handler.isAwaiting()) {\n      return;\n    }\n\n    handler.setAwaiting(false);\n\n    this.awaitingHandlers = this.awaitingHandlers.filter(\n      (otherHandler) => otherHandler !== handler\n    );\n  }\n\n  private addAwaitingHandler(handler: IGestureHandler): void {\n    if (this.awaitingHandlers.includes(handler)) {\n      return;\n    }\n\n    this.awaitingHandlers.push(handler);\n    this.awaitingHandlersTags.add(handler.getTag());\n\n    handler.setAwaiting(true);\n    handler.setActivationIndex(this.activationIndex++);\n  }\n\n  public recordHandlerIfNotPresent(handler: IGestureHandler): void {\n    if (this.gestureHandlers.includes(handler)) {\n      return;\n    }\n\n    this.gestureHandlers.push(handler);\n\n    handler.setActive(false);\n    handler.setAwaiting(false);\n    handler.setActivationIndex(Number.MAX_SAFE_INTEGER);\n  }\n\n  private shouldHandlerWaitForOther(\n    handler: IGestureHandler,\n    otherHandler: IGestureHandler\n  ): boolean {\n    return (\n      handler !== otherHandler &&\n      (handler.shouldWaitForHandlerFailure(otherHandler) ||\n        otherHandler.shouldRequireToWaitForFailure(handler))\n    );\n  }\n\n  private canRunSimultaneously(\n    gh1: IGestureHandler,\n    gh2: IGestureHandler\n  ): boolean {\n    return (\n      gh1 === gh2 ||\n      gh1.shouldRecognizeSimultaneously(gh2) ||\n      gh2.shouldRecognizeSimultaneously(gh1)\n    );\n  }\n\n  private shouldHandlerBeCancelledBy(\n    handler: IGestureHandler,\n    otherHandler: IGestureHandler\n  ): boolean {\n    if (this.canRunSimultaneously(handler, otherHandler)) {\n      return false;\n    }\n\n    if (handler.isAwaiting() || handler.getState() === State.ACTIVE) {\n      // For now it always returns false\n      return handler.shouldBeCancelledByOther(otherHandler);\n    }\n\n    const handlerPointers: number[] = handler.getTrackedPointersID();\n    const otherPointers: number[] = otherHandler.getTrackedPointersID();\n\n    if (\n      !PointerTracker.shareCommonPointers(handlerPointers, otherPointers) &&\n      handler.getDelegate().getView() !== otherHandler.getDelegate().getView()\n    ) {\n      return this.checkOverlap(handler, otherHandler);\n    }\n\n    return true;\n  }\n\n  private checkOverlap(\n    handler: IGestureHandler,\n    otherHandler: IGestureHandler\n  ): boolean {\n    // If handlers don't have common pointers, default return value is false.\n    // However, if at least on pointer overlaps with both handlers, we return true\n    // This solves issue in overlapping parents example\n\n    // TODO: Find better way to handle that issue, for example by activation order and handler cancelling\n\n    const isPointerWithinBothBounds = (pointer: number) => {\n      const point = handler.getTracker().getLastAbsoluteCoords(pointer);\n\n      return (\n        handler.getDelegate().isPointerInBounds(point) &&\n        otherHandler.getDelegate().isPointerInBounds(point)\n      );\n    };\n\n    return handler.getTrackedPointersID().some(isPointerWithinBothBounds);\n  }\n\n  private isFinished(state: State): boolean {\n    return (\n      state === State.END || state === State.FAILED || state === State.CANCELLED\n    );\n  }\n\n  // This function is called when handler receives touchdown event\n  // If handler is using mouse or pen as a pointer and any handler receives touch event,\n  // mouse/pen event dissappears - it doesn't send onPointerCancel nor onPointerUp (and others)\n  // This became a problem because handler was left at active state without any signal to end or fail\n  // To handle this, when new touch event is received, we loop through active handlers and check which type of\n  // pointer they're using. If there are any handler with mouse/pen as a pointer, we cancel them\n  public cancelMouseAndPenGestures(currentHandler: IGestureHandler): void {\n    this.gestureHandlers.forEach((handler: IGestureHandler) => {\n      if (\n        handler.getPointerType() !== PointerType.MOUSE &&\n        handler.getPointerType() !== PointerType.STYLUS\n      ) {\n        return;\n      }\n\n      if (handler !== currentHandler) {\n        handler.cancel();\n      } else {\n        // Handler that received touch event should have its pointer tracker reset\n        // This allows handler to smoothly change from mouse/pen to touch\n        // The drawback is, that when we try to use mouse/pen one more time, it doesn't send onPointerDown at the first time\n        // so it is required to click two times to get handler to work\n        //\n        // However, handler will receive manually created onPointerEnter that is triggered in EventManager in onPointerMove method.\n        // There may be possibility to use that fact to make handler respond properly to first mouse click\n        handler.getTracker().resetTracker();\n      }\n    });\n  }\n\n  public static getInstance(): GestureHandlerOrchestrator {\n    if (!GestureHandlerOrchestrator.instance) {\n      GestureHandlerOrchestrator.instance = new GestureHandlerOrchestrator();\n    }\n\n    return GestureHandlerOrchestrator.instance;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}