{"ast":null,"code":"\"use strict\";var _toConsumableArray=require(\"@babel/runtime/helpers/toConsumableArray\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.StackActions=void 0;exports.StackRouter=StackRouter;var _nonSecure=require(\"nanoid/non-secure\");var _BaseRouter=require(\"./BaseRouter.js\");var StackActions=exports.StackActions={replace:function replace(name,params){return{type:'REPLACE',payload:{name:name,params:params}};},push:function push(name,params){return{type:'PUSH',payload:{name:name,params:params}};},pop:function pop(){var count=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;return{type:'POP',payload:{count:count}};},popToTop:function popToTop(){return{type:'POP_TO_TOP'};},popTo:function popTo(name,params,merge){return{type:'POP_TO',payload:{name:name,params:params,merge:merge}};}};function StackRouter(options){var router=Object.assign({},_BaseRouter.BaseRouter,{type:'stack',getInitialState:function getInitialState(_ref){var routeNames=_ref.routeNames,routeParamList=_ref.routeParamList;var initialRouteName=options.initialRouteName!==undefined&&routeNames.includes(options.initialRouteName)?options.initialRouteName:routeNames[0];return{stale:false,type:'stack',key:`stack-${(0,_nonSecure.nanoid)()}`,index:0,routeNames:routeNames,preloadedRoutes:[],routes:[{key:`${initialRouteName}-${(0,_nonSecure.nanoid)()}`,name:initialRouteName,params:routeParamList[initialRouteName]}]};},getRehydratedState:function getRehydratedState(partialState,_ref2){var _state$preloadedRoute,_state$preloadedRoute2;var routeNames=_ref2.routeNames,routeParamList=_ref2.routeParamList;var state=partialState;if(state.stale===false){return state;}var routes=state.routes.filter(function(route){return routeNames.includes(route.name);}).map(function(route){return Object.assign({},route,{key:route.key||`${route.name}-${(0,_nonSecure.nanoid)()}`,params:routeParamList[route.name]!==undefined?Object.assign({},routeParamList[route.name],route.params):route.params});});var preloadedRoutes=(_state$preloadedRoute=(_state$preloadedRoute2=state.preloadedRoutes)==null?void 0:_state$preloadedRoute2.filter(function(route){return routeNames.includes(route.name);}).map(function(route){return Object.assign({},route,{key:route.key||`${route.name}-${(0,_nonSecure.nanoid)()}`,params:routeParamList[route.name]!==undefined?Object.assign({},routeParamList[route.name],route.params):route.params});}))!=null?_state$preloadedRoute:[];if(routes.length===0){var initialRouteName=options.initialRouteName!==undefined?options.initialRouteName:routeNames[0];routes.push({key:`${initialRouteName}-${(0,_nonSecure.nanoid)()}`,name:initialRouteName,params:routeParamList[initialRouteName]});}return{stale:false,type:'stack',key:`stack-${(0,_nonSecure.nanoid)()}`,index:routes.length-1,routeNames:routeNames,routes:routes,preloadedRoutes:preloadedRoutes};},getStateForRouteNamesChange:function getStateForRouteNamesChange(state,_ref3){var routeNames=_ref3.routeNames,routeParamList=_ref3.routeParamList,routeKeyChanges=_ref3.routeKeyChanges;var routes=state.routes.filter(function(route){return routeNames.includes(route.name)&&!routeKeyChanges.includes(route.name);});if(routes.length===0){var initialRouteName=options.initialRouteName!==undefined&&routeNames.includes(options.initialRouteName)?options.initialRouteName:routeNames[0];routes.push({key:`${initialRouteName}-${(0,_nonSecure.nanoid)()}`,name:initialRouteName,params:routeParamList[initialRouteName]});}return Object.assign({},state,{routeNames:routeNames,routes:routes,index:Math.min(state.index,routes.length-1)});},getStateForRouteFocus:function getStateForRouteFocus(state,key){var index=state.routes.findIndex(function(r){return r.key===key;});if(index===-1||index===state.index){return state;}return Object.assign({},state,{index:index,routes:state.routes.slice(0,index+1)});},getStateForAction:function getStateForAction(state,action,options){var routeParamList=options.routeParamList;switch(action.type){case'REPLACE':{var index=action.target===state.key&&action.source?state.routes.findIndex(function(r){return r.key===action.source;}):state.index;if(index===-1){return null;}var _action$payload=action.payload,name=_action$payload.name,params=_action$payload.params;if(!state.routeNames.includes(name)){return null;}return Object.assign({},state,{routes:state.routes.map(function(route,i){return i===index?{key:`${name}-${(0,_nonSecure.nanoid)()}`,name:name,params:routeParamList[name]!==undefined?Object.assign({},routeParamList[name],params):params}:route;})});}case'PUSH':case'NAVIGATE':{if(!state.routeNames.includes(action.payload.name)){return null;}var getId=options.routeGetIdList[action.payload.name];var id=getId==null?void 0:getId({params:action.payload.params});var route;if(id!==undefined){route=state.routes.find(function(route){return route.name===action.payload.name&&id===(getId==null?void 0:getId({params:route.params}));});}else{var currentRoute=state.routes[state.index];if(action.type==='NAVIGATE'&&action.payload.name===currentRoute.name){route=currentRoute;}}if(!route){route=state.preloadedRoutes.find(function(route){return route.name===action.payload.name&&id===(getId==null?void 0:getId({params:route.params}));});}var _params;if(action.type==='NAVIGATE'&&action.payload.merge&&route){_params=action.payload.params!==undefined||routeParamList[action.payload.name]!==undefined?Object.assign({},routeParamList[action.payload.name],route.params,action.payload.params):route.params;}else{_params=routeParamList[action.payload.name]!==undefined?Object.assign({},routeParamList[action.payload.name],action.payload.params):action.payload.params;}var routes;if(route){var routeKey=route.key;routes=state.routes.filter(function(r){return r.key!==routeKey;});routes.push(Object.assign({},route,{path:action.type==='NAVIGATE'&&action.payload.path!==undefined?action.payload.path:route.path,params:_params}));}else{routes=[].concat(_toConsumableArray(state.routes),[{key:`${action.payload.name}-${(0,_nonSecure.nanoid)()}`,name:action.payload.name,path:action.type==='NAVIGATE'?action.payload.path:undefined,params:_params}]);}return Object.assign({},state,{index:routes.length-1,preloadedRoutes:state.preloadedRoutes.filter(function(route){return routes[routes.length-1].key!==route.key;}),routes:routes});}case'NAVIGATE_DEPRECATED':{if(state.preloadedRoutes.find(function(route){return route.name===action.payload.name&&_id===(_getId==null?void 0:_getId({params:route.params}));})){return null;}if(!state.routeNames.includes(action.payload.name)){return null;}var _index=-1;var _getId=options.routeGetIdList[action.payload.name];var _id=_getId==null?void 0:_getId({params:action.payload.params});if(_id){_index=state.routes.findIndex(function(route){return route.name===action.payload.name&&_id===(_getId==null?void 0:_getId({params:route.params}));});}else if(state.routes[state.index].name===action.payload.name){_index=state.index;}else{for(var i=state.routes.length-1;i>=0;i--){if(state.routes[i].name===action.payload.name){_index=i;break;}}}if(_index===-1){var _routes=[].concat(_toConsumableArray(state.routes),[{key:`${action.payload.name}-${(0,_nonSecure.nanoid)()}`,name:action.payload.name,params:routeParamList[action.payload.name]!==undefined?Object.assign({},routeParamList[action.payload.name],action.payload.params):action.payload.params}]);return Object.assign({},state,{routes:_routes,index:_routes.length-1});}var _route=state.routes[_index];var _params2;if(action.payload.merge){_params2=action.payload.params!==undefined||routeParamList[_route.name]!==undefined?Object.assign({},routeParamList[_route.name],_route.params,action.payload.params):_route.params;}else{_params2=routeParamList[_route.name]!==undefined?Object.assign({},routeParamList[_route.name],action.payload.params):action.payload.params;}return Object.assign({},state,{index:_index,routes:[].concat(_toConsumableArray(state.routes.slice(0,_index)),[_params2!==_route.params?Object.assign({},_route,{params:_params2}):state.routes[_index]])});}case'POP':{var _index2=action.target===state.key&&action.source?state.routes.findIndex(function(r){return r.key===action.source;}):state.index;if(_index2>0){var count=Math.max(_index2-action.payload.count+1,1);var _routes2=state.routes.slice(0,count).concat(state.routes.slice(_index2+1));return Object.assign({},state,{index:_routes2.length-1,routes:_routes2});}return null;}case'POP_TO_TOP':return router.getStateForAction(state,{type:'POP',payload:{count:state.routes.length-1}},options);case'POP_TO':{if(!state.routeNames.includes(action.payload.name)){return null;}var _index3=-1;var _getId2=options.routeGetIdList[action.payload.name];var _id2=_getId2==null?void 0:_getId2({params:action.payload.params});if(_id2){_index3=state.routes.findIndex(function(route){return route.name===action.payload.name&&_id2===(_getId2==null?void 0:_getId2({params:route.params}));});}else if(state.routes[state.index].name===action.payload.name){_index3=state.index;}else{for(var _i=state.routes.length-1;_i>=0;_i--){if(state.routes[_i].name===action.payload.name){_index3=_i;break;}}}if(_index3===-1){var _routes3=[].concat(_toConsumableArray(state.routes.slice(0,-1)),[{key:`${action.payload.name}-${(0,_nonSecure.nanoid)()}`,name:action.payload.name,params:routeParamList[action.payload.name]!==undefined?Object.assign({},routeParamList[action.payload.name],action.payload.params):action.payload.params}]);return Object.assign({},state,{routes:_routes3,index:_routes3.length-1});}var _route2=state.routes[_index3];var _params3;if(action.payload.merge){_params3=action.payload.params!==undefined||routeParamList[_route2.name]!==undefined?Object.assign({},routeParamList[_route2.name],_route2.params,action.payload.params):_route2.params;}else{_params3=routeParamList[_route2.name]!==undefined?Object.assign({},routeParamList[_route2.name],action.payload.params):action.payload.params;}return Object.assign({},state,{index:_index3,routes:[].concat(_toConsumableArray(state.routes.slice(0,_index3)),[_params3!==_route2.params?Object.assign({},_route2,{params:_params3}):state.routes[_index3]])});}case'GO_BACK':if(state.index>0){return router.getStateForAction(state,{type:'POP',payload:{count:1},target:action.target,source:action.source},options);}return null;case'PRELOAD':{var _getId3=options.routeGetIdList[action.payload.name];var _id3=_getId3==null?void 0:_getId3({params:action.payload.params});var _route3;if(_id3!==undefined){_route3=state.routes.find(function(route){return route.name===action.payload.name&&_id3===(_getId3==null?void 0:_getId3({params:route.params}));});}if(_route3){return Object.assign({},state,{routes:state.routes.map(function(r){var _route4;if(r.key!==((_route4=_route3)==null?void 0:_route4.key)){return r;}return Object.assign({},r,{params:routeParamList[action.payload.name]!==undefined?Object.assign({},routeParamList[action.payload.name],action.payload.params):action.payload.params});})});}else{return Object.assign({},state,{preloadedRoutes:state.preloadedRoutes.filter(function(r){return r.name!==action.payload.name||_id3!==(_getId3==null?void 0:_getId3({params:r.params}));}).concat({key:`${action.payload.name}-${(0,_nonSecure.nanoid)()}`,name:action.payload.name,params:routeParamList[action.payload.name]!==undefined?Object.assign({},routeParamList[action.payload.name],action.payload.params):action.payload.params})});}}default:return _BaseRouter.BaseRouter.getStateForAction(state,action);}},actionCreators:StackActions});return router;}","map":{"version":3,"names":["_nonSecure","require","_BaseRouter","StackActions","exports","replace","name","params","type","payload","push","pop","count","arguments","length","undefined","popToTop","popTo","merge","StackRouter","options","router","Object","assign","BaseRouter","getInitialState","_ref","routeNames","routeParamList","initialRouteName","includes","stale","key","nanoid","index","preloadedRoutes","routes","getRehydratedState","partialState","_ref2","_state$preloadedRoute","_state$preloadedRoute2","state","filter","route","map","getStateForRouteNamesChange","_ref3","routeKeyChanges","Math","min","getStateForRouteFocus","findIndex","r","slice","getStateForAction","action","target","source","_action$payload","i","getId","routeGetIdList","id","find","currentRoute","routeKey","path","concat","_toConsumableArray","max","_route4","actionCreators"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/@react-navigation/routers/src/StackRouter.tsx"],"sourcesContent":["import { nanoid } from 'nanoid/non-secure';\n\nimport { BaseRouter } from './BaseRouter';\nimport type {\n  CommonNavigationAction,\n  DefaultRouterOptions,\n  NavigationRoute,\n  NavigationState,\n  ParamListBase,\n  Route,\n  Router,\n} from './types';\n\nexport type StackActionType =\n  | {\n      type: 'REPLACE';\n      payload: { name: string; params?: object };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'PUSH';\n      payload: { name: string; params?: object };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'POP';\n      payload: { count: number };\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'POP_TO_TOP';\n      source?: string;\n      target?: string;\n    }\n  | {\n      type: 'POP_TO';\n      payload: {\n        name: string;\n        params?: object;\n        merge?: boolean;\n      };\n      source?: string;\n      target?: string;\n    };\n\nexport type StackRouterOptions = DefaultRouterOptions;\n\nexport type StackNavigationState<ParamList extends ParamListBase> =\n  NavigationState<ParamList> & {\n    /**\n     * Type of the router, in this case, it's stack.\n     */\n    type: 'stack';\n    /**\n     * List of routes, which are supposed to be preloaded before navigating to.\n     */\n    preloadedRoutes: NavigationRoute<ParamList, keyof ParamList>[];\n  };\n\nexport type StackActionHelpers<ParamList extends ParamListBase> = {\n  /**\n   * Replace the current route with a new one.\n   *\n   * @param name Name of the new route.\n   * @param [params] Params object for the new route.\n   */\n  replace<RouteName extends keyof ParamList>(\n    ...args: {\n      [Screen in keyof ParamList]: undefined extends ParamList[Screen]\n        ? [screen: Screen] | [screen: Screen, params: ParamList[Screen]]\n        : [screen: Screen, params: ParamList[Screen]];\n    }[RouteName]\n  ): void;\n\n  /**\n   * Push a new screen onto the stack.\n   *\n   * @param name Name of the route to push onto the stack.\n   * @param [params] Params object for the route.\n   */\n  push<RouteName extends keyof ParamList>(\n    ...args: {\n      [Screen in keyof ParamList]: undefined extends ParamList[Screen]\n        ? [screen: Screen] | [screen: Screen, params: ParamList[Screen]]\n        : [screen: Screen, params: ParamList[Screen]];\n    }[RouteName]\n  ): void;\n\n  /**\n   * Pop a screen from the stack.\n   */\n  pop(count?: number): void;\n\n  /**\n   * Pop to the first route in the stack, dismissing all other screens.\n   */\n  popToTop(): void;\n\n  /**\n   * Pop any screens to go back to the specified screen.\n   * If the specified screen doesn't exist, it'll be added to the stack.\n   *\n   * @param name Name of the route to navigate to.\n   * @param [params] Params object for the route.\n   * @param [merge] Whether to merge the params onto the route.\n   */\n  popTo<RouteName extends keyof ParamList>(\n    ...args: {\n      [Screen in keyof ParamList]: undefined extends ParamList[Screen]\n        ?\n            | [screen: Screen]\n            | [screen: Screen, params: ParamList[Screen]]\n            | [screen: Screen, params: ParamList[Screen], merge: boolean]\n        :\n            | [screen: Screen, params: ParamList[Screen]]\n            | [screen: Screen, params: ParamList[Screen], merge: boolean];\n    }[RouteName]\n  ): void;\n};\n\nexport const StackActions = {\n  replace(name: string, params?: object): StackActionType {\n    return { type: 'REPLACE', payload: { name, params } };\n  },\n  push(name: string, params?: object): StackActionType {\n    return { type: 'PUSH', payload: { name, params } };\n  },\n  pop(count: number = 1): StackActionType {\n    return { type: 'POP', payload: { count } };\n  },\n  popToTop(): StackActionType {\n    return { type: 'POP_TO_TOP' };\n  },\n  popTo(name: string, params?: object, merge?: boolean): StackActionType {\n    return { type: 'POP_TO', payload: { name, params, merge } };\n  },\n};\n\nexport function StackRouter(options: StackRouterOptions) {\n  const router: Router<\n    StackNavigationState<ParamListBase>,\n    CommonNavigationAction | StackActionType\n  > = {\n    ...BaseRouter,\n\n    type: 'stack',\n\n    getInitialState({ routeNames, routeParamList }) {\n      const initialRouteName =\n        options.initialRouteName !== undefined &&\n        routeNames.includes(options.initialRouteName)\n          ? options.initialRouteName\n          : routeNames[0];\n\n      return {\n        stale: false,\n        type: 'stack',\n        key: `stack-${nanoid()}`,\n        index: 0,\n        routeNames,\n        preloadedRoutes: [],\n        routes: [\n          {\n            key: `${initialRouteName}-${nanoid()}`,\n            name: initialRouteName,\n            params: routeParamList[initialRouteName],\n          },\n        ],\n      };\n    },\n\n    getRehydratedState(partialState, { routeNames, routeParamList }) {\n      const state = partialState;\n\n      if (state.stale === false) {\n        return state;\n      }\n\n      const routes = state.routes\n        .filter((route) => routeNames.includes(route.name))\n        .map((route) => ({\n          ...route,\n          key: route.key || `${route.name}-${nanoid()}`,\n          params:\n            routeParamList[route.name] !== undefined\n              ? {\n                  ...routeParamList[route.name],\n                  ...route.params,\n                }\n              : route.params,\n        }));\n\n      const preloadedRoutes =\n        state.preloadedRoutes\n          ?.filter((route) => routeNames.includes(route.name))\n          .map(\n            (route) =>\n              ({\n                ...route,\n                key: route.key || `${route.name}-${nanoid()}`,\n                params:\n                  routeParamList[route.name] !== undefined\n                    ? {\n                        ...routeParamList[route.name],\n                        ...route.params,\n                      }\n                    : route.params,\n              }) as Route<string>\n          ) ?? [];\n\n      if (routes.length === 0) {\n        const initialRouteName =\n          options.initialRouteName !== undefined\n            ? options.initialRouteName\n            : routeNames[0];\n\n        routes.push({\n          key: `${initialRouteName}-${nanoid()}`,\n          name: initialRouteName,\n          params: routeParamList[initialRouteName],\n        });\n      }\n\n      return {\n        stale: false,\n        type: 'stack',\n        key: `stack-${nanoid()}`,\n        index: routes.length - 1,\n        routeNames,\n        routes,\n        preloadedRoutes,\n      };\n    },\n\n    getStateForRouteNamesChange(\n      state,\n      { routeNames, routeParamList, routeKeyChanges }\n    ) {\n      const routes = state.routes.filter(\n        (route) =>\n          routeNames.includes(route.name) &&\n          !routeKeyChanges.includes(route.name)\n      );\n\n      if (routes.length === 0) {\n        const initialRouteName =\n          options.initialRouteName !== undefined &&\n          routeNames.includes(options.initialRouteName)\n            ? options.initialRouteName\n            : routeNames[0];\n\n        routes.push({\n          key: `${initialRouteName}-${nanoid()}`,\n          name: initialRouteName,\n          params: routeParamList[initialRouteName],\n        });\n      }\n\n      return {\n        ...state,\n        routeNames,\n        routes,\n        index: Math.min(state.index, routes.length - 1),\n      };\n    },\n\n    getStateForRouteFocus(state, key) {\n      const index = state.routes.findIndex((r) => r.key === key);\n\n      if (index === -1 || index === state.index) {\n        return state;\n      }\n\n      return {\n        ...state,\n        index,\n        routes: state.routes.slice(0, index + 1),\n      };\n    },\n\n    getStateForAction(state, action, options) {\n      const { routeParamList } = options;\n\n      switch (action.type) {\n        case 'REPLACE': {\n          const index =\n            action.target === state.key && action.source\n              ? state.routes.findIndex((r) => r.key === action.source)\n              : state.index;\n\n          if (index === -1) {\n            return null;\n          }\n\n          const { name, params } = action.payload;\n\n          if (!state.routeNames.includes(name)) {\n            return null;\n          }\n\n          return {\n            ...state,\n            routes: state.routes.map((route, i) =>\n              i === index\n                ? {\n                    key: `${name}-${nanoid()}`,\n                    name,\n                    params:\n                      routeParamList[name] !== undefined\n                        ? {\n                            ...routeParamList[name],\n                            ...params,\n                          }\n                        : params,\n                  }\n                : route\n            ),\n          };\n        }\n\n        case 'PUSH':\n        case 'NAVIGATE': {\n          if (!state.routeNames.includes(action.payload.name)) {\n            return null;\n          }\n\n          const getId = options.routeGetIdList[action.payload.name];\n          const id = getId?.({ params: action.payload.params });\n\n          let route: Route<string> | undefined;\n\n          if (id !== undefined) {\n            route = state.routes.find(\n              (route) =>\n                route.name === action.payload.name &&\n                id === getId?.({ params: route.params })\n            );\n          } else {\n            const currentRoute = state.routes[state.index];\n\n            // If the route matches the current one, then navigate to it\n            if (\n              action.type === 'NAVIGATE' &&\n              action.payload.name === currentRoute.name\n            ) {\n              route = currentRoute;\n            }\n          }\n\n          if (!route) {\n            route = state.preloadedRoutes.find(\n              (route) =>\n                route.name === action.payload.name &&\n                id === getId?.({ params: route.params })\n            );\n          }\n\n          let params;\n\n          if (action.type === 'NAVIGATE' && action.payload.merge && route) {\n            params =\n              action.payload.params !== undefined ||\n              routeParamList[action.payload.name] !== undefined\n                ? {\n                    ...routeParamList[action.payload.name],\n                    ...route.params,\n                    ...action.payload.params,\n                  }\n                : route.params;\n          } else {\n            params =\n              routeParamList[action.payload.name] !== undefined\n                ? {\n                    ...routeParamList[action.payload.name],\n                    ...action.payload.params,\n                  }\n                : action.payload.params;\n          }\n\n          let routes: Route<string>[];\n\n          if (route) {\n            const routeKey = route.key;\n\n            routes = state.routes.filter((r) => r.key !== routeKey);\n            routes.push({\n              ...route,\n              path:\n                action.type === 'NAVIGATE' && action.payload.path !== undefined\n                  ? action.payload.path\n                  : route.path,\n              params,\n            });\n          } else {\n            routes = [\n              ...state.routes,\n              {\n                key: `${action.payload.name}-${nanoid()}`,\n                name: action.payload.name,\n                path:\n                  action.type === 'NAVIGATE' ? action.payload.path : undefined,\n                params,\n              },\n            ];\n          }\n\n          return {\n            ...state,\n            index: routes.length - 1,\n            preloadedRoutes: state.preloadedRoutes.filter(\n              (route) => routes[routes.length - 1].key !== route.key\n            ),\n            routes,\n          };\n        }\n\n        case 'NAVIGATE_DEPRECATED': {\n          if (\n            state.preloadedRoutes.find(\n              (route) =>\n                route.name === action.payload.name &&\n                id === getId?.({ params: route.params })\n            )\n          ) {\n            return null;\n          }\n          if (!state.routeNames.includes(action.payload.name)) {\n            return null;\n          }\n\n          // If the route already exists, navigate to that\n          let index = -1;\n\n          const getId = options.routeGetIdList[action.payload.name];\n          const id = getId?.({ params: action.payload.params });\n\n          if (id) {\n            index = state.routes.findIndex(\n              (route) =>\n                route.name === action.payload.name &&\n                id === getId?.({ params: route.params })\n            );\n          } else if (state.routes[state.index].name === action.payload.name) {\n            index = state.index;\n          } else {\n            for (let i = state.routes.length - 1; i >= 0; i--) {\n              if (state.routes[i].name === action.payload.name) {\n                index = i;\n                break;\n              }\n            }\n          }\n\n          if (index === -1) {\n            const routes = [\n              ...state.routes,\n              {\n                key: `${action.payload.name}-${nanoid()}`,\n                name: action.payload.name,\n                params:\n                  routeParamList[action.payload.name] !== undefined\n                    ? {\n                        ...routeParamList[action.payload.name],\n                        ...action.payload.params,\n                      }\n                    : action.payload.params,\n              },\n            ];\n\n            return {\n              ...state,\n              routes,\n              index: routes.length - 1,\n            };\n          }\n\n          const route = state.routes[index];\n\n          let params;\n\n          if (action.payload.merge) {\n            params =\n              action.payload.params !== undefined ||\n              routeParamList[route.name] !== undefined\n                ? {\n                    ...routeParamList[route.name],\n                    ...route.params,\n                    ...action.payload.params,\n                  }\n                : route.params;\n          } else {\n            params =\n              routeParamList[route.name] !== undefined\n                ? {\n                    ...routeParamList[route.name],\n                    ...action.payload.params,\n                  }\n                : action.payload.params;\n          }\n\n          return {\n            ...state,\n            index,\n            routes: [\n              ...state.routes.slice(0, index),\n              params !== route.params\n                ? { ...route, params }\n                : state.routes[index],\n            ],\n          };\n        }\n\n        case 'POP': {\n          const index =\n            action.target === state.key && action.source\n              ? state.routes.findIndex((r) => r.key === action.source)\n              : state.index;\n\n          if (index > 0) {\n            const count = Math.max(index - action.payload.count + 1, 1);\n            const routes = state.routes\n              .slice(0, count)\n              .concat(state.routes.slice(index + 1));\n\n            return {\n              ...state,\n              index: routes.length - 1,\n              routes,\n            };\n          }\n\n          return null;\n        }\n\n        case 'POP_TO_TOP':\n          return router.getStateForAction(\n            state,\n            {\n              type: 'POP',\n              payload: { count: state.routes.length - 1 },\n            },\n            options\n          );\n\n        case 'POP_TO': {\n          if (!state.routeNames.includes(action.payload.name)) {\n            return null;\n          }\n\n          // If the route already exists, navigate to that\n          let index = -1;\n\n          const getId = options.routeGetIdList[action.payload.name];\n          const id = getId?.({ params: action.payload.params });\n\n          if (id) {\n            index = state.routes.findIndex(\n              (route) =>\n                route.name === action.payload.name &&\n                id === getId?.({ params: route.params })\n            );\n          } else if (state.routes[state.index].name === action.payload.name) {\n            index = state.index;\n          } else {\n            for (let i = state.routes.length - 1; i >= 0; i--) {\n              if (state.routes[i].name === action.payload.name) {\n                index = i;\n                break;\n              }\n            }\n          }\n\n          // If the route doesn't exist, remove the current route and add the new one\n          if (index === -1) {\n            const routes = [\n              ...state.routes.slice(0, -1),\n              {\n                key: `${action.payload.name}-${nanoid()}`,\n                name: action.payload.name,\n                params:\n                  routeParamList[action.payload.name] !== undefined\n                    ? {\n                        ...routeParamList[action.payload.name],\n                        ...action.payload.params,\n                      }\n                    : action.payload.params,\n              },\n            ];\n\n            return {\n              ...state,\n              routes,\n              index: routes.length - 1,\n            };\n          }\n\n          const route = state.routes[index];\n\n          let params;\n\n          if (action.payload.merge) {\n            params =\n              action.payload.params !== undefined ||\n              routeParamList[route.name] !== undefined\n                ? {\n                    ...routeParamList[route.name],\n                    ...route.params,\n                    ...action.payload.params,\n                  }\n                : route.params;\n          } else {\n            params =\n              routeParamList[route.name] !== undefined\n                ? {\n                    ...routeParamList[route.name],\n                    ...action.payload.params,\n                  }\n                : action.payload.params;\n          }\n\n          return {\n            ...state,\n            index,\n            routes: [\n              ...state.routes.slice(0, index),\n              params !== route.params\n                ? { ...route, params }\n                : state.routes[index],\n            ],\n          };\n        }\n\n        case 'GO_BACK':\n          if (state.index > 0) {\n            return router.getStateForAction(\n              state,\n              {\n                type: 'POP',\n                payload: { count: 1 },\n                target: action.target,\n                source: action.source,\n              },\n              options\n            );\n          }\n\n          return null;\n\n        case 'PRELOAD': {\n          const getId = options.routeGetIdList[action.payload.name];\n          const id = getId?.({ params: action.payload.params });\n\n          let route: Route<string> | undefined;\n\n          if (id !== undefined) {\n            route = state.routes.find(\n              (route) =>\n                route.name === action.payload.name &&\n                id === getId?.({ params: route.params })\n            );\n          }\n\n          if (route) {\n            return {\n              ...state,\n              routes: state.routes.map((r) => {\n                if (r.key !== route?.key) {\n                  return r;\n                }\n                return {\n                  ...r,\n                  params:\n                    routeParamList[action.payload.name] !== undefined\n                      ? {\n                          ...routeParamList[action.payload.name],\n                          ...action.payload.params,\n                        }\n                      : action.payload.params,\n                };\n              }),\n            };\n          } else {\n            return {\n              ...state,\n              preloadedRoutes: state.preloadedRoutes\n                .filter(\n                  (r) =>\n                    r.name !== action.payload.name ||\n                    id !== getId?.({ params: r.params })\n                )\n                .concat({\n                  key: `${action.payload.name}-${nanoid()}`,\n                  name: action.payload.name,\n                  params:\n                    routeParamList[action.payload.name] !== undefined\n                      ? {\n                          ...routeParamList[action.payload.name],\n                          ...action.payload.params,\n                        }\n                      : action.payload.params,\n                }),\n            };\n          }\n        }\n\n        default:\n          return BaseRouter.getStateForAction(state, action);\n      }\n    },\n\n    actionCreators: StackActions,\n  };\n\n  return router;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}