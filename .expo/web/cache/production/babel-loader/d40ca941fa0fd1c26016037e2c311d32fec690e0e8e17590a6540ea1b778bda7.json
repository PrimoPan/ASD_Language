{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.default=void 0;var _asyncToGenerator2=_interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));var _toConsumableArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));var _slicedToArray2=_interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));var _react=_interopRequireWildcard(require(\"react\"));var _reactNative=require(\"react-native\");var _store=_interopRequireDefault(require(\"../store/store.jsx\"));var _api=require(\"../utils/api\");var _jsxRuntime=require(\"react/jsx-runtime\");function _getRequireWildcardCache(e){if(\"function\"!=typeof WeakMap)return null;var r=new WeakMap(),t=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r;})(e);}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if(\"default\"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u];}return n.default=e,t&&t.set(e,n),n;}var DisplayStoreData=function DisplayStoreData(){var _generatedData$words2;var currentChildren=(0,_store.default)(function(state){return state.currentChildren;});var learningGoals=(0,_store.default)(function(state){return state.learningGoals;});var _useState=(0,_react.useState)(null),_useState2=(0,_slicedToArray2.default)(_useState,2),generatedData=_useState2[0],setGeneratedData=_useState2[1];var _useState3=(0,_react.useState)(null),_useState4=(0,_slicedToArray2.default)(_useState3,2),sceneImage=_useState4[0],setSceneImage=_useState4[1];var _useState5=(0,_react.useState)([]),_useState6=(0,_slicedToArray2.default)(_useState5,2),elementImages=_useState6[0],setElementImages=_useState6[1];var _useState7=(0,_react.useState)(false),_useState8=(0,_slicedToArray2.default)(_useState7,2),loading=_useState8[0],setLoading=_useState8[1];var _useState9=(0,_react.useState)(false),_useState10=(0,_slicedToArray2.default)(_useState9,2),imageLoading=_useState10[0],setImageLoading=_useState10[1];var _useState11=(0,_react.useState)([]),_useState12=(0,_slicedToArray2.default)(_useState11,2),selectedElements=_useState12[0],setSelectedElements=_useState12[1];var toggleElementSelection=function toggleElementSelection(index){setSelectedElements(function(prevSelected){if(prevSelected.includes(index)){return prevSelected.filter(function(i){return i!==index;});}else{return[].concat((0,_toConsumableArray2.default)(prevSelected),[index]);}});};var generateData=function(){var _ref=(0,_asyncToGenerator2.default)(function*(){setLoading(true);try{var prompt=`请你给我的数据直接以{}包裹，不需要其他任何文字内容.每一次生成的内容与教学步骤不允许与上次一样.每一个步骤都必须详细，且包含三个递进步骤.每一个步骤不得少于50字. 注意一切生成内容要以选中场景与“环境”的描述为优先.1. 如果教学目标里有构音，请生成5个汉语词汇，包含用构音中的几个汉语拼音声母构成的词语，如果 Current Children中有强化物，请结合这些强化物做生成； 2. 根据选中场景中的描述，根据LearningGoals中的‘命名’、‘构音’、‘语言结构’（如果有就生成，如果没有就不生成），返回满足每个对应目标的，和场景结合的教学步骤（注意被教学儿童患有自闭症），每个目标返回A,B,C依次3个步骤。当前数据Current Children: ${JSON.stringify(currentChildren).replace(/\"/g,\"'\")}, Learning Goals: ${JSON.stringify(learningGoals).replace(/\"/g,\"'\")}`;var gptResponse=yield(0,_api.gptQuery)(prompt);var results;try{results=JSON.parse(gptResponse);}catch(parseError){console.error('Error parsing GPT response:',parseError);throw new Error('Invalid JSON format in GPT response.');}console.log('Generated Data from GPT:',results);setGeneratedData(results);}catch(error){console.error('Error generating data from GPT:',error);}finally{setLoading(false);}});return function generateData(){return _ref.apply(this,arguments);};}();var generateImages=function(){var _ref2=(0,_asyncToGenerator2.default)(function*(){setImageLoading(true);try{var _generatedData$words;var scenePrompt=`生成一个简单的卡通风格场景图。绝对不允许出现文字！,场景尽量不要出现人物，如果有，不能超过2人，且全部为中国人，场景尽量较空，绝对不允许出现文字，基于教学目标：${JSON.stringify(learningGoals)}，仅展示环境。`;var elementPrompts=(generatedData==null||(_generatedData$words=generatedData.words)==null?void 0:_generatedData$words.map(function(word){return`接下来你生成的所有元素图都要保证，尽量简单，避免重复元素，避免复杂；生成一个卡通风格小元素图，基于：${word}。`;}))||[];var sceneResponse=yield(0,_api.generateImage)(scenePrompt);var elementResponses=yield Promise.all(elementPrompts.map(function(prompt){return(0,_api.generateImage)(prompt);}));setSceneImage(sceneResponse);setElementImages(elementResponses);setSelectedElements([]);}catch(error){console.error('Error generating images:',error);}finally{setImageLoading(false);}});return function generateImages(){return _ref2.apply(this,arguments);};}();(0,_react.useEffect)(function(){generateData();},[currentChildren,learningGoals]);return(0,_jsxRuntime.jsxs)(_reactNative.View,{style:styles.container,children:[(0,_jsxRuntime.jsxs)(_reactNative.ScrollView,{contentContainerStyle:styles.scrollContainer,children:[generatedData&&(0,_jsxRuntime.jsxs)(_reactNative.View,{style:styles.section,children:[(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.title,children:\"\\u751F\\u6210\\u7684\\u6784\\u97F3\\u8BCD\\u6C47\"}),(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.content,children:((_generatedData$words2=generatedData.words)==null?void 0:_generatedData$words2.join(', '))||'无构音数据'})]}),(generatedData==null?void 0:generatedData['教学步骤'])&&Object.entries(generatedData['教学步骤']).map(function(_ref3){var _ref4=(0,_slicedToArray2.default)(_ref3,2),key=_ref4[0],steps=_ref4[1];return(0,_jsxRuntime.jsxs)(_reactNative.View,{style:styles.section,children:[(0,_jsxRuntime.jsxs)(_reactNative.Text,{style:styles.title,children:[key,\" \\u6559\\u5B66\\u6B65\\u9AA4\"]}),Object.entries(steps).map(function(_ref5){var _ref6=(0,_slicedToArray2.default)(_ref5,2),stepKey=_ref6[0],stepValue=_ref6[1];return(0,_jsxRuntime.jsxs)(_reactNative.View,{style:styles.stepContainer,children:[(0,_jsxRuntime.jsxs)(_reactNative.Text,{style:styles.stepKey,children:[stepKey,\":\"]}),(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.stepValue,children:stepValue})]},stepKey);})]},key);}),imageLoading?(0,_jsxRuntime.jsx)(_reactNative.ActivityIndicator,{size:\"large\",color:\"#007BFF\"}):(0,_jsxRuntime.jsxs)(_jsxRuntime.Fragment,{children:[(0,_jsxRuntime.jsx)(_reactNative.View,{style:styles.imageContainer,children:sceneImage&&(0,_jsxRuntime.jsx)(_reactNative.Image,{source:{uri:sceneImage},style:styles.sceneImage,resizeMode:\"contain\"})}),elementImages.length>0&&(0,_jsxRuntime.jsx)(_reactNative.View,{style:styles.elementsWrapper,children:elementImages.map(function(imgUri,index){var isSelected=selectedElements.includes(index);return(0,_jsxRuntime.jsx)(_reactNative.Pressable,{onPress:function onPress(){return toggleElementSelection(index);},style:[styles.elementImageWrapper,isSelected&&styles.selectedBorder],children:(0,_jsxRuntime.jsx)(_reactNative.Image,{source:{uri:imgUri},style:styles.elementImage})},index);})})]})]}),(0,_jsxRuntime.jsx)(_reactNative.TouchableOpacity,{style:[styles.regenerateButton,loading&&styles.disabledButton],onPress:generateData,disabled:loading,children:(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.buttonText,children:loading?'重新生成中...':'重新生成'})}),(0,_jsxRuntime.jsx)(_reactNative.TouchableOpacity,{style:[styles.generateImagesButton,imageLoading&&styles.disabledButton],onPress:generateImages,disabled:imageLoading,children:(0,_jsxRuntime.jsx)(_reactNative.Text,{style:styles.buttonText,children:imageLoading?'生成图片中...':'生成图片'})})]});};var styles=_reactNative.StyleSheet.create({container:{flex:1,padding:16,backgroundColor:'#f5f5f5'},scrollContainer:{alignItems:'flex-start',paddingVertical:16},section:{marginBottom:20,padding:16,borderWidth:1,borderColor:'#ccc',borderRadius:8,backgroundColor:'#fff',width:'100%'},title:{fontSize:18,fontWeight:'bold',marginBottom:8},content:{fontSize:14,color:'#333',marginBottom:4},stepContainer:{marginBottom:8,paddingLeft:10},stepKey:{fontSize:16,fontWeight:'600',color:'#555'},stepValue:{fontSize:14,color:'#333'},imageContainer:{width:'100%',height:300,marginTop:20},sceneImage:{width:'100%',height:'100%',borderRadius:8,marginBottom:16},elementsWrapper:{flexDirection:'row',flexWrap:'wrap',marginTop:16,justifyContent:'center',alignItems:'center'},elementImageWrapper:{margin:5,borderRadius:8,borderWidth:2,borderColor:'transparent',overflow:'hidden',width:80,height:80},elementImage:{width:'100%',height:'100%',borderRadius:8},selectedBorder:{borderColor:'#007BFF'},regenerateButton:{marginTop:16,paddingVertical:12,paddingHorizontal:20,backgroundColor:'#007BFF',borderRadius:8,alignItems:'center'},generateImagesButton:{marginTop:16,paddingVertical:12,paddingHorizontal:20,backgroundColor:'#28A745',borderRadius:8,alignItems:'center'},disabledButton:{backgroundColor:'#ccc'},buttonText:{color:'#fff',fontSize:16,fontWeight:'bold'}});var _default=exports.default=DisplayStoreData;","map":{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_store","_interopRequireDefault","_api","_jsxRuntime","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","DisplayStoreData","_generatedData$words2","currentChildren","useStore","state","learningGoals","_useState","useState","_useState2","_slicedToArray2","generatedData","setGeneratedData","_useState3","_useState4","sceneImage","setSceneImage","_useState5","_useState6","elementImages","setElementImages","_useState7","_useState8","loading","setLoading","_useState9","_useState10","imageLoading","setImageLoading","_useState11","_useState12","selectedElements","setSelectedElements","toggleElementSelection","index","prevSelected","includes","filter","concat","_toConsumableArray2","generateData","_ref","_asyncToGenerator2","prompt","JSON","stringify","replace","gptResponse","gptQuery","results","parse","parseError","console","error","Error","log","apply","arguments","generateImages","_ref2","_generatedData$words","scenePrompt","elementPrompts","words","map","word","sceneResponse","generateImage","elementResponses","Promise","all","useEffect","jsxs","View","style","styles","container","children","ScrollView","contentContainerStyle","scrollContainer","section","jsx","Text","title","content","join","entries","_ref3","_ref4","key","steps","_ref5","_ref6","stepKey","stepValue","stepContainer","ActivityIndicator","size","color","Fragment","imageContainer","Image","source","uri","resizeMode","length","elementsWrapper","imgUri","isSelected","Pressable","onPress","elementImageWrapper","selectedBorder","elementImage","TouchableOpacity","regenerateButton","disabledButton","disabled","buttonText","generateImagesButton","StyleSheet","create","flex","padding","backgroundColor","alignItems","paddingVertical","marginBottom","borderWidth","borderColor","borderRadius","width","fontSize","fontWeight","paddingLeft","height","marginTop","flexDirection","flexWrap","justifyContent","margin","overflow","paddingHorizontal","_default","exports"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/SourceCode/DisplayStoreData/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n    View,\n    Text,\n    StyleSheet,\n    ScrollView,\n    TouchableOpacity,\n    ActivityIndicator,\n    Image,\n    Pressable,\n} from 'react-native';\nimport useStore from '../store/store.jsx'; // 导入 zustand store\nimport { gptQuery, generateImage } from '../utils/api'; // 导入 GPT 和生图 API\n\nconst DisplayStoreData = () => {\n    const currentChildren = useStore((state) => state.currentChildren); // 获取 store 中的 currentChildren\n    const learningGoals = useStore((state) => state.learningGoals);     // 获取 store 中的 learningGoals\n\n    const [generatedData, setGeneratedData] = useState(null);     // 保存生成的教学数据\n    const [sceneImage, setSceneImage] = useState(null);           // 保存场景图\n    const [elementImages, setElementImages] = useState([]);       // 保存小元素图\n    const [loading, setLoading] = useState(false);                // 加载状态\n    const [imageLoading, setImageLoading] = useState(false);      // 图片生成加载状态\n\n    // 新增：选中小元素的下标集合\n    const [selectedElements, setSelectedElements] = useState([]);\n\n    // 点击小元素时，切换选中状态\n    const toggleElementSelection = (index) => {\n        setSelectedElements((prevSelected) => {\n            if (prevSelected.includes(index)) {\n                // 如果已选中，则取消选中\n                return prevSelected.filter((i) => i !== index);\n            } else {\n                // 如果未选中，则添加到选中列表\n                return [...prevSelected, index];\n            }\n        });\n    };\n\n    // 生成 GPT 文本\n    const generateData = async () => {\n        setLoading(true);\n        try {\n            const prompt = `请你给我的数据直接以{}包裹，不需要其他任何文字内容.每一次生成的内容与教学步骤不允许与上次一样.每一个步骤都必须详细，且包含三个递进步骤.每一个步骤不得少于50字. 注意一切生成内容要以选中场景与“环境”的描述为优先.1. 如果教学目标里有构音，请生成5个汉语词汇，包含用构音中的几个汉语拼音声母构成的词语，如果 Current Children中有强化物，请结合这些强化物做生成； 2. 根据选中场景中的描述，根据LearningGoals中的‘命名’、‘构音’、‘语言结构’（如果有就生成，如果没有就不生成），返回满足每个对应目标的，和场景结合的教学步骤（注意被教学儿童患有自闭症），每个目标返回A,B,C依次3个步骤。当前数据Current Children: ${JSON.stringify(currentChildren).replace(/\"/g, \"'\")}, Learning Goals: ${JSON.stringify(learningGoals).replace(/\"/g, \"'\")}`;\n            const gptResponse = await gptQuery(prompt); // 调用 GPT API\n            let results;\n            try {\n                results = JSON.parse(gptResponse);\n            } catch (parseError) {\n                console.error('Error parsing GPT response:', parseError);\n                throw new Error('Invalid JSON format in GPT response.');\n            }\n            console.log('Generated Data from GPT:', results);\n            setGeneratedData(results);\n        } catch (error) {\n            console.error('Error generating data from GPT:', error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // 生成图片\n    const generateImages = async () => {\n        setImageLoading(true);\n        try {\n            // 生图 Prompt 示例，可根据实际需求进行细化或修改\n            const scenePrompt = `生成一个简单的卡通风格场景图。绝对不允许出现文字！,场景尽量不要出现人物，如果有，不能超过2人，且全部为中国人，场景尽量较空，绝对不允许出现文字，基于教学目标：${JSON.stringify(\n                learningGoals\n            )}，仅展示环境。`;\n\n            // 假设 GPT 返回的 5 个构音词汇是存放在 generatedData.words 中\n            const elementPrompts =\n                generatedData?.words?.map(\n                    (word) => `接下来你生成的所有元素图都要保证，尽量简单，避免重复元素，避免复杂；生成一个卡通风格小元素图，基于：${word}。`\n                ) || [];\n\n            const sceneResponse = await generateImage(scenePrompt); // 调用生图 API 生成场景图\n            const elementResponses = await Promise.all(\n                elementPrompts.map((prompt) => generateImage(prompt))\n            ); // 调用生图 API 生成小元素图\n            setSceneImage(sceneResponse); // 设置场景图 URL\n            setElementImages(elementResponses); // 设置小元素图 URL 数组\n            setSelectedElements([]); // 重置选中状态\n        } catch (error) {\n            console.error('Error generating images:', error);\n        } finally {\n            setImageLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        // 当 currentChildren 或 learningGoals 改变时，自动重新生成\n        generateData();\n    }, [currentChildren, learningGoals]);\n\n    return (\n        <View style={styles.container}>\n            <ScrollView contentContainerStyle={styles.scrollContainer}>\n                {/* ======== 文本生成结果展示 ======== */}\n                {generatedData && (\n                    <View style={styles.section}>\n                        <Text style={styles.title}>生成的构音词汇</Text>\n                        <Text style={styles.content}>\n                            {generatedData.words?.join(', ') || '无构音数据'}\n                        </Text>\n                    </View>\n                )}\n\n                {generatedData?.['教学步骤'] &&\n                    Object.entries(generatedData['教学步骤']).map(([key, steps]) => (\n                        <View key={key} style={styles.section}>\n                            <Text style={styles.title}>{key} 教学步骤</Text>\n                            {Object.entries(steps).map(([stepKey, stepValue]) => (\n                                <View key={stepKey} style={styles.stepContainer}>\n                                    <Text style={styles.stepKey}>{stepKey}:</Text>\n                                    <Text style={styles.stepValue}>{stepValue}</Text>\n                                </View>\n                            ))}\n                        </View>\n                    ))}\n\n                {/* ======== 图片区域展示 ======== */}\n                {imageLoading ? (\n                    <ActivityIndicator size=\"large\" color=\"#007BFF\" />\n                ) : (\n                    <>\n                        {/* 场景图 */}\n                        <View style={styles.imageContainer}>\n                            {sceneImage && (\n                                <Image\n                                    source={{ uri: sceneImage }}\n                                    style={styles.sceneImage}\n                                    resizeMode=\"contain\" // 确保完整显示\n                                />\n                            )}\n                        </View>\n                        {/* 小元素图（依次排列，点击可选/不选） */}\n                        {elementImages.length > 0 && (\n                            <View style={styles.elementsWrapper}>\n                                {elementImages.map((imgUri, index) => {\n                                    const isSelected = selectedElements.includes(index);\n                                    return (\n                                        <Pressable\n                                            key={index}\n                                            onPress={() => toggleElementSelection(index)}\n                                            style={[\n                                                styles.elementImageWrapper,\n                                                isSelected && styles.selectedBorder,\n                                            ]}\n                                        >\n                                            <Image\n                                                source={{ uri: imgUri }}\n                                                style={styles.elementImage}\n                                            />\n                                        </Pressable>\n                                    );\n                                })}\n                            </View>\n                        )}\n                    </>\n                )}\n            </ScrollView>\n\n            {/* ======== 按钮区域 ======== */}\n            <TouchableOpacity\n                style={[styles.regenerateButton, loading && styles.disabledButton]}\n                onPress={generateData}\n                disabled={loading}\n            >\n                <Text style={styles.buttonText}>\n                    {loading ? '重新生成中...' : '重新生成'}\n                </Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity\n                style={[styles.generateImagesButton, imageLoading && styles.disabledButton]}\n                onPress={generateImages}\n                disabled={imageLoading}\n            >\n                <Text style={styles.buttonText}>\n                    {imageLoading ? '生成图片中...' : '生成图片'}\n                </Text>\n            </TouchableOpacity>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        padding: 16,\n        backgroundColor: '#f5f5f5',\n    },\n    scrollContainer: {\n        alignItems: 'flex-start',\n        paddingVertical: 16,\n    },\n    section: {\n        marginBottom: 20,\n        padding: 16,\n        borderWidth: 1,\n        borderColor: '#ccc',\n        borderRadius: 8,\n        backgroundColor: '#fff',\n        width: '100%',\n    },\n    title: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        marginBottom: 8,\n    },\n    content: {\n        fontSize: 14,\n        color: '#333',\n        marginBottom: 4,\n    },\n    stepContainer: {\n        marginBottom: 8,\n        paddingLeft: 10,\n    },\n    stepKey: {\n        fontSize: 16,\n        fontWeight: '600',\n        color: '#555',\n    },\n    stepValue: {\n        fontSize: 14,\n        color: '#333',\n    },\n    imageContainer: {\n        width: '100%',\n        height: 300,\n        marginTop: 20,\n    },\n    sceneImage: {\n        width: '100%',\n        height: '100%',\n        borderRadius: 8,\n        marginBottom: 16,\n    },\n    elementsWrapper: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        marginTop: 16,\n        justifyContent: 'center', // 确保元素居中\n        alignItems: 'center', // 确保元素垂直居中\n    },\n    elementImageWrapper: {\n        margin: 5,\n        borderRadius: 8,\n        borderWidth: 2,\n        borderColor: 'transparent',\n        overflow: 'hidden',\n        width: 80, // 限制小元素图的宽度\n        height: 80, // 限制小元素图的高度\n    },\n    elementImage: {\n        width: '100%',\n        height: '100%',\n        borderRadius: 8,\n    },\n    selectedBorder: {\n        borderColor: '#007BFF',\n    },\n    regenerateButton: {\n        marginTop: 16,\n        paddingVertical: 12,\n        paddingHorizontal: 20,\n        backgroundColor: '#007BFF',\n        borderRadius: 8,\n        alignItems: 'center',\n    },\n    generateImagesButton: {\n        marginTop: 16,\n        paddingVertical: 12,\n        paddingHorizontal: 20,\n        backgroundColor: '#28A745',\n        borderRadius: 8,\n        alignItems: 'center',\n    },\n    disabledButton: {\n        backgroundColor: '#ccc',\n    },\n    buttonText: {\n        color: '#fff',\n        fontSize: 16,\n        fontWeight: 'bold',\n    },\n});\n\nexport default DisplayStoreData;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}