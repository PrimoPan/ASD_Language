{"ast":null,"code":"'use strict';Object.defineProperty(exports,\"__esModule\",{value:true});exports.makeViewDescriptorsSet=makeViewDescriptorsSet;var _core=require(\"./core.js\");function makeViewDescriptorsSet(){var shareableViewDescriptors=(0,_core.makeMutable)([]);var data={shareableViewDescriptors:shareableViewDescriptors,add:function add(item){shareableViewDescriptors.modify(function(descriptors){'worklet';var index=descriptors.findIndex(function(descriptor){return descriptor.tag===item.tag;});if(index!==-1){descriptors[index]=item;}else{descriptors.push(item);}return descriptors;},false);},remove:function remove(viewTag){shareableViewDescriptors.modify(function(descriptors){'worklet';var index=descriptors.findIndex(function(descriptor){return descriptor.tag===viewTag;});if(index!==-1){descriptors.splice(index,1);}return descriptors;},false);}};return data;}","map":{"version":3,"names":["Object","defineProperty","exports","value","makeViewDescriptorsSet","_core","require","shareableViewDescriptors","makeMutable","data","add","item","modify","descriptors","index","findIndex","descriptor","tag","push","remove","viewTag","splice"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/react-native-reanimated/src/ViewDescriptorsSet.ts"],"sourcesContent":["'use strict';\nimport { makeMutable } from './core';\nimport type { SharedValue } from './commonTypes';\nimport type { Descriptor } from './hook/commonTypes';\n\nexport interface ViewDescriptorsSet {\n  shareableViewDescriptors: SharedValue<Descriptor[]>;\n  add: (item: Descriptor) => void;\n  remove: (viewTag: number) => void;\n}\n\nexport function makeViewDescriptorsSet(): ViewDescriptorsSet {\n  const shareableViewDescriptors = makeMutable<Descriptor[]>([]);\n  const data: ViewDescriptorsSet = {\n    shareableViewDescriptors,\n    add: (item: Descriptor) => {\n      shareableViewDescriptors.modify((descriptors) => {\n        'worklet';\n        const index = descriptors.findIndex(\n          (descriptor) => descriptor.tag === item.tag\n        );\n        if (index !== -1) {\n          descriptors[index] = item;\n        } else {\n          descriptors.push(item);\n        }\n        return descriptors;\n      }, false);\n    },\n\n    remove: (viewTag: number) => {\n      shareableViewDescriptors.modify((descriptors) => {\n        'worklet';\n        const index = descriptors.findIndex(\n          (descriptor) => descriptor.tag === viewTag\n        );\n        if (index !== -1) {\n          descriptors.splice(index, 1);\n        }\n        return descriptors;\n      }, false);\n    },\n  };\n  return data;\n}\n"],"mappings":"AAAA,YAAY,CAAAA,MAAA,CAAAC,cAAA,CAAAC,OAAA,eAAAC,KAAA,QAAAD,OAAA,CAAAE,sBAAA,CAAAA,sBAAA,CACZ,IAAAC,KAAA,CAAAC,OAAA,cAUO,QAAS,CAAAF,sBAAsBA,CAAA,CAAuB,CAC3D,GAAM,CAAAG,wBAAwB,CAAG,GAAAC,iBAAW,EAAe,EAAE,CAAC,CAC9D,GAAM,CAAAC,IAAwB,CAAG,CAC/BF,wBAAwB,CAAxBA,wBAAwB,CACxBG,GAAG,CAAG,QAAN,CAAAA,GAAGA,CAAGC,IAAgB,CAAK,CACzBJ,wBAAwB,CAACK,MAAM,CAAE,SAAAC,WAAW,CAAK,CAC/C,SAAS,CACT,GAAM,CAAAC,KAAK,CAAGD,WAAW,CAACE,SAAS,CAChC,SAAAC,UAAU,QAAK,CAAAA,UAAU,CAACC,GAAG,GAAKN,IAAI,CAACM,GAC1C,GAAC,CACD,GAAIH,KAAK,GAAK,CAAC,CAAC,CAAE,CAChBD,WAAW,CAACC,KAAK,CAAC,CAAGH,IAAI,CAC3B,CAAC,IAAM,CACLE,WAAW,CAACK,IAAI,CAACP,IAAI,CAAC,CACxB,CACA,MAAO,CAAAE,WAAW,CACpB,CAAC,CAAE,KAAK,CAAC,CACX,CAAC,CAEDM,MAAM,CAAG,QAAT,CAAAA,MAAMA,CAAGC,OAAe,CAAK,CAC3Bb,wBAAwB,CAACK,MAAM,CAAE,SAAAC,WAAW,CAAK,CAC/C,SAAS,CACT,GAAM,CAAAC,KAAK,CAAGD,WAAW,CAACE,SAAS,CAChC,SAAAC,UAAU,QAAK,CAAAA,UAAU,CAACC,GAAG,GAAKG,OACrC,GAAC,CACD,GAAIN,KAAK,GAAK,CAAC,CAAC,CAAE,CAChBD,WAAW,CAACQ,MAAM,CAACP,KAAK,CAAE,CAAC,CAAC,CAC9B,CACA,MAAO,CAAAD,WAAW,CACpB,CAAC,CAAE,KAAK,CAAC,CACX,CACF,CAAC,CACD,MAAO,CAAAJ,IAAI,CACb","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}