{"ast":null,"code":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports.useOnAction=useOnAction;var React=_interopRequireWildcard(require(\"react\"));var _DeprecatedNavigationInChildContext=require(\"./DeprecatedNavigationInChildContext.js\");var _NavigationBuilderContext=require(\"./NavigationBuilderContext.js\");var _useOnPreventRemove=require(\"./useOnPreventRemove.js\");function _getRequireWildcardCache(e){if(\"function\"!=typeof WeakMap)return null;var r=new WeakMap(),t=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r;})(e);}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if(\"default\"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u];}return n.default=e,t&&t.set(e,n),n;}function useOnAction(_ref){var router=_ref.router,getState=_ref.getState,setState=_ref.setState,key=_ref.key,actionListeners=_ref.actionListeners,beforeRemoveListeners=_ref.beforeRemoveListeners,routerConfigOptions=_ref.routerConfigOptions,emitter=_ref.emitter;var _React$useContext=React.useContext(_NavigationBuilderContext.NavigationBuilderContext),onActionParent=_React$useContext.onAction,onRouteFocusParent=_React$useContext.onRouteFocus,addListenerParent=_React$useContext.addListener,onDispatchAction=_React$useContext.onDispatchAction;var navigationInChildEnabled=React.useContext(_DeprecatedNavigationInChildContext.DeprecatedNavigationInChildContext);var routerConfigOptionsRef=React.useRef(routerConfigOptions);React.useEffect(function(){routerConfigOptionsRef.current=routerConfigOptions;});var onAction=React.useCallback(function(action){var visitedNavigators=arguments.length>1&&arguments[1]!==undefined?arguments[1]:new Set();var state=getState();if(visitedNavigators.has(state.key)){return false;}visitedNavigators.add(state.key);if(typeof action.target!=='string'||action.target===state.key){var result=router.getStateForAction(state,action,routerConfigOptionsRef.current);result=result===null&&action.target===state.key?state:result;if(result!==null){onDispatchAction(action,state===result);if(state!==result){var isPrevented=(0,_useOnPreventRemove.shouldPreventRemove)(emitter,beforeRemoveListeners,state.routes,result.routes,action);if(isPrevented){return true;}setState(result);}if(onRouteFocusParent!==undefined){var shouldFocus=router.shouldActionChangeFocus(action);if(shouldFocus&&key!==undefined){onRouteFocusParent(key);}}return true;}}if(onActionParent!==undefined){if(onActionParent(action,visitedNavigators)){return true;}}if(typeof action.target==='string'||action.type==='NAVIGATE_DEPRECATED'||navigationInChildEnabled){for(var i=actionListeners.length-1;i>=0;i--){var listener=actionListeners[i];if(listener(action,visitedNavigators)){return true;}}}return false;},[actionListeners,beforeRemoveListeners,emitter,getState,navigationInChildEnabled,key,onActionParent,onDispatchAction,onRouteFocusParent,router,setState]);(0,_useOnPreventRemove.useOnPreventRemove)({getState:getState,emitter:emitter,beforeRemoveListeners:beforeRemoveListeners});React.useEffect(function(){return addListenerParent==null?void 0:addListenerParent('action',onAction);},[addListenerParent,onAction]);return onAction;}","map":{"version":3,"names":["React","_interopRequireWildcard","require","_DeprecatedNavigationInChildContext","_NavigationBuilderContext","_useOnPreventRemove","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","useOnAction","_ref","router","getState","setState","key","actionListeners","beforeRemoveListeners","routerConfigOptions","emitter","_React$useContext","useContext","NavigationBuilderContext","onActionParent","onAction","onRouteFocusParent","onRouteFocus","addListenerParent","addListener","onDispatchAction","navigationInChildEnabled","DeprecatedNavigationInChildContext","routerConfigOptionsRef","useRef","useEffect","current","useCallback","action","visitedNavigators","arguments","length","undefined","Set","state","add","target","result","getStateForAction","isPrevented","shouldPreventRemove","routes","shouldFocus","shouldActionChangeFocus","type","listener","useOnPreventRemove"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/@react-navigation/core/src/useOnAction.tsx"],"sourcesContent":["import type {\n  NavigationAction,\n  NavigationState,\n  PartialState,\n  Router,\n  RouterConfigOptions,\n} from '@react-navigation/routers';\nimport * as React from 'react';\n\nimport { DeprecatedNavigationInChildContext } from './DeprecatedNavigationInChildContext';\nimport {\n  type ChildActionListener,\n  type ChildBeforeRemoveListener,\n  NavigationBuilderContext,\n} from './NavigationBuilderContext';\nimport type { EventMapCore } from './types';\nimport type { NavigationEventEmitter } from './useEventEmitter';\nimport { shouldPreventRemove, useOnPreventRemove } from './useOnPreventRemove';\n\ntype Options = {\n  router: Router<NavigationState, NavigationAction>;\n  key?: string;\n  getState: () => NavigationState;\n  setState: (state: NavigationState | PartialState<NavigationState>) => void;\n  actionListeners: ChildActionListener[];\n  beforeRemoveListeners: Record<string, ChildBeforeRemoveListener | undefined>;\n  routerConfigOptions: RouterConfigOptions;\n  emitter: NavigationEventEmitter<EventMapCore<any>>;\n};\n\n/**\n * Hook to handle actions for a navigator, including state updates and bubbling.\n *\n * Bubbling an action is achieved in 2 ways:\n * 1. To bubble action to parent, we expose the action handler in context and then access the parent context\n * 2. To bubble action to child, child adds event listeners subscribing to actions from parent\n *\n * When the action handler handles as action, it returns `true`, otherwise `false`.\n */\nexport function useOnAction({\n  router,\n  getState,\n  setState,\n  key,\n  actionListeners,\n  beforeRemoveListeners,\n  routerConfigOptions,\n  emitter,\n}: Options) {\n  const {\n    onAction: onActionParent,\n    onRouteFocus: onRouteFocusParent,\n    addListener: addListenerParent,\n    onDispatchAction,\n  } = React.useContext(NavigationBuilderContext);\n  const navigationInChildEnabled = React.useContext(\n    DeprecatedNavigationInChildContext\n  );\n\n  const routerConfigOptionsRef =\n    React.useRef<RouterConfigOptions>(routerConfigOptions);\n\n  React.useEffect(() => {\n    routerConfigOptionsRef.current = routerConfigOptions;\n  });\n\n  const onAction = React.useCallback(\n    (\n      action: NavigationAction,\n      visitedNavigators: Set<string> = new Set<string>()\n    ) => {\n      const state = getState();\n\n      // Since actions can bubble both up and down, they could come to the same navigator again\n      // We keep track of navigators which have already tried to handle the action and return if it's already visited\n      if (visitedNavigators.has(state.key)) {\n        return false;\n      }\n\n      visitedNavigators.add(state.key);\n\n      if (typeof action.target !== 'string' || action.target === state.key) {\n        let result = router.getStateForAction(\n          state,\n          action,\n          routerConfigOptionsRef.current\n        );\n\n        // If a target is specified and set to current navigator, the action shouldn't bubble\n        // So instead of `null`, we use the state object for such cases to signal that action was handled\n        result =\n          result === null && action.target === state.key ? state : result;\n\n        if (result !== null) {\n          onDispatchAction(action, state === result);\n\n          if (state !== result) {\n            const isPrevented = shouldPreventRemove(\n              emitter,\n              beforeRemoveListeners,\n              state.routes,\n              result.routes,\n              action\n            );\n\n            if (isPrevented) {\n              return true;\n            }\n\n            setState(result);\n          }\n\n          if (onRouteFocusParent !== undefined) {\n            // Some actions such as `NAVIGATE` also want to bring the navigated route to focus in the whole tree\n            // This means we need to focus all of the parent navigators of this navigator as well\n            const shouldFocus = router.shouldActionChangeFocus(action);\n\n            if (shouldFocus && key !== undefined) {\n              onRouteFocusParent(key);\n            }\n          }\n\n          return true;\n        }\n      }\n\n      if (onActionParent !== undefined) {\n        // Bubble action to the parent if the current navigator didn't handle it\n        if (onActionParent(action, visitedNavigators)) {\n          return true;\n        }\n      }\n\n      if (\n        typeof action.target === 'string' ||\n        // For backward compatibility\n        action.type === 'NAVIGATE_DEPRECATED' ||\n        navigationInChildEnabled\n      ) {\n        // If the action wasn't handled by current navigator or a parent navigator, let children handle it\n        // Handling this when target isn't specified is deprecated and will be removed in the future\n        for (let i = actionListeners.length - 1; i >= 0; i--) {\n          const listener = actionListeners[i];\n\n          if (listener(action, visitedNavigators)) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n    [\n      actionListeners,\n      beforeRemoveListeners,\n      emitter,\n      getState,\n      navigationInChildEnabled,\n      key,\n      onActionParent,\n      onDispatchAction,\n      onRouteFocusParent,\n      router,\n      setState,\n    ]\n  );\n\n  useOnPreventRemove({\n    getState,\n    emitter,\n    beforeRemoveListeners,\n  });\n\n  React.useEffect(\n    () => addListenerParent?.('action', onAction),\n    [addListenerParent, onAction]\n  );\n\n  return onAction;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}