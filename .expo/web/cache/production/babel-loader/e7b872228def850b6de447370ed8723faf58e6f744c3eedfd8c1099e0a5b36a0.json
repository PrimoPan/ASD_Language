{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.attachHandlers=attachHandlers;var _handlersRegistry=require(\"../../handlersRegistry\");var _RNGestureHandlerModule=_interopRequireDefault(require(\"../../../RNGestureHandlerModule\"));var _utils=require(\"../../utils\");var _ActionType=require(\"../../../ActionType\");var _reactNative=require(\"react-native\");var _ghQueueMicrotask=require(\"../../../ghQueueMicrotask\");var _utils2=require(\"./utils\");function attachHandlers(_ref){var preparedGesture=_ref.preparedGesture,gestureConfig=_ref.gestureConfig,gesturesToAttach=_ref.gesturesToAttach,viewTag=_ref.viewTag,webEventHandlersRef=_ref.webEventHandlersRef;gestureConfig.initialize();(0,_ghQueueMicrotask.ghQueueMicrotask)(function(){if(!preparedGesture.isMounted){return;}gestureConfig.prepare();});for(var handler of gesturesToAttach){(0,_utils2.checkGestureCallbacksForWorklets)(handler);_RNGestureHandlerModule.default.createGestureHandler(handler.handlerName,handler.handlerTag,(0,_utils.filterConfig)(handler.config,_utils2.ALLOWED_PROPS));(0,_handlersRegistry.registerHandler)(handler.handlerTag,handler,handler.config.testId);}(0,_ghQueueMicrotask.ghQueueMicrotask)(function(){if(!preparedGesture.isMounted){return;}for(var _handler of gesturesToAttach){_RNGestureHandlerModule.default.updateGestureHandler(_handler.handlerTag,(0,_utils.filterConfig)(_handler.config,_utils2.ALLOWED_PROPS,(0,_utils2.extractGestureRelations)(_handler)));}(0,_utils.scheduleFlushOperations)();});for(var gesture of gesturesToAttach){var actionType=gesture.shouldUseReanimated?_ActionType.ActionType.REANIMATED_WORKLET:_ActionType.ActionType.JS_FUNCTION_NEW_API;if(_reactNative.Platform.OS==='web'){_RNGestureHandlerModule.default.attachGestureHandler(gesture.handlerTag,viewTag,_ActionType.ActionType.JS_FUNCTION_OLD_API,webEventHandlersRef);}else{_RNGestureHandlerModule.default.attachGestureHandler(gesture.handlerTag,viewTag,actionType);}}preparedGesture.attachedGestures=gesturesToAttach;if(preparedGesture.animatedHandlers){var isAnimatedGesture=function isAnimatedGesture(g){return g.shouldUseReanimated;};preparedGesture.animatedHandlers.value=gesturesToAttach.filter(isAnimatedGesture).map(function(g){return g.handlers;});}}","map":{"version":3,"names":["_handlersRegistry","require","_RNGestureHandlerModule","_interopRequireDefault","_utils","_ActionType","_reactNative","_ghQueueMicrotask","_utils2","attachHandlers","_ref","preparedGesture","gestureConfig","gesturesToAttach","viewTag","webEventHandlersRef","initialize","ghQueueMicrotask","isMounted","prepare","handler","checkGestureCallbacksForWorklets","RNGestureHandlerModule","createGestureHandler","handlerName","handlerTag","filterConfig","config","ALLOWED_PROPS","registerHandler","testId","updateGestureHandler","extractGestureRelations","scheduleFlushOperations","gesture","actionType","shouldUseReanimated","ActionType","REANIMATED_WORKLET","JS_FUNCTION_NEW_API","Platform","OS","attachGestureHandler","JS_FUNCTION_OLD_API","attachedGestures","animatedHandlers","isAnimatedGesture","g","value","filter","map","handlers"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/GestureDetector/attachHandlers.ts"],"sourcesContent":["import React from 'react';\nimport { GestureType, HandlerCallbacks } from '../gesture';\nimport { registerHandler } from '../../handlersRegistry';\nimport RNGestureHandlerModule from '../../../RNGestureHandlerModule';\nimport { filterConfig, scheduleFlushOperations } from '../../utils';\nimport { ComposedGesture } from '../gestureComposition';\nimport { ActionType } from '../../../ActionType';\nimport { Platform } from 'react-native';\nimport type RNGestureHandlerModuleWeb from '../../../RNGestureHandlerModule.web';\nimport { ghQueueMicrotask } from '../../../ghQueueMicrotask';\nimport { AttachedGestureState, WebEventHandler } from './types';\nimport {\n  extractGestureRelations,\n  checkGestureCallbacksForWorklets,\n  ALLOWED_PROPS,\n} from './utils';\n\ninterface AttachHandlersConfig {\n  preparedGesture: AttachedGestureState;\n  gestureConfig: ComposedGesture | GestureType;\n  gesturesToAttach: GestureType[];\n  viewTag: number;\n  webEventHandlersRef: React.RefObject<WebEventHandler>;\n}\n\nexport function attachHandlers({\n  preparedGesture,\n  gestureConfig,\n  gesturesToAttach,\n  viewTag,\n  webEventHandlersRef,\n}: AttachHandlersConfig) {\n  gestureConfig.initialize();\n\n  // Use queueMicrotask to extract handlerTags, because all refs should be initialized\n  // when it's ran\n  ghQueueMicrotask(() => {\n    if (!preparedGesture.isMounted) {\n      return;\n    }\n    gestureConfig.prepare();\n  });\n\n  for (const handler of gesturesToAttach) {\n    checkGestureCallbacksForWorklets(handler);\n    RNGestureHandlerModule.createGestureHandler(\n      handler.handlerName,\n      handler.handlerTag,\n      filterConfig(handler.config, ALLOWED_PROPS)\n    );\n\n    registerHandler(handler.handlerTag, handler, handler.config.testId);\n  }\n\n  // Use queueMicrotask to extract handlerTags, because all refs should be initialized\n  // when it's ran\n  ghQueueMicrotask(() => {\n    if (!preparedGesture.isMounted) {\n      return;\n    }\n    for (const handler of gesturesToAttach) {\n      RNGestureHandlerModule.updateGestureHandler(\n        handler.handlerTag,\n        filterConfig(\n          handler.config,\n          ALLOWED_PROPS,\n          extractGestureRelations(handler)\n        )\n      );\n    }\n\n    scheduleFlushOperations();\n  });\n\n  for (const gesture of gesturesToAttach) {\n    const actionType = gesture.shouldUseReanimated\n      ? ActionType.REANIMATED_WORKLET\n      : ActionType.JS_FUNCTION_NEW_API;\n\n    if (Platform.OS === 'web') {\n      (\n        RNGestureHandlerModule.attachGestureHandler as typeof RNGestureHandlerModuleWeb.attachGestureHandler\n      )(\n        gesture.handlerTag,\n        viewTag,\n        ActionType.JS_FUNCTION_OLD_API, // Ignored on web\n        webEventHandlersRef\n      );\n    } else {\n      RNGestureHandlerModule.attachGestureHandler(\n        gesture.handlerTag,\n        viewTag,\n        actionType\n      );\n    }\n  }\n\n  preparedGesture.attachedGestures = gesturesToAttach;\n\n  if (preparedGesture.animatedHandlers) {\n    const isAnimatedGesture = (g: GestureType) => g.shouldUseReanimated;\n\n    preparedGesture.animatedHandlers.value = gesturesToAttach\n      .filter(isAnimatedGesture)\n      .map((g) => g.handlers) as unknown as HandlerCallbacks<\n      Record<string, unknown>\n    >[];\n  }\n}\n"],"mappings":"kLAEA,IAAAA,iBAAA,CAAAC,OAAA,2BACA,IAAAC,uBAAA,CAAAC,sBAAA,CAAAF,OAAA,qCACA,IAAAG,MAAA,CAAAH,OAAA,gBAEA,IAAAI,WAAA,CAAAJ,OAAA,wBACA,IAAAK,YAAA,CAAAL,OAAA,iBAEA,IAAAM,iBAAA,CAAAN,OAAA,8BAEA,IAAAO,OAAA,CAAAP,OAAA,YAcO,QAAS,CAAAQ,cAATA,CAAAC,IAAA,CAMkB,IALvB,CAAAC,eAD6B,CAAAD,IAAA,CAC7BC,eAD6B,CAE7BC,aAF6B,CAAAF,IAAA,CAE7BE,aAF6B,CAG7BC,gBAH6B,CAAAH,IAAA,CAG7BG,gBAH6B,CAI7BC,OAJ6B,CAAAJ,IAAA,CAI7BI,OAJ6B,CAK7BC,mBAAA,CAAAL,IAAA,CAAAK,mBAAA,CAEAH,aAAa,CAACI,UAAd,GAIA,GAAAC,kCAAgB,EAAC,UAAM,CACrB,GAAI,CAACN,eAAe,CAACO,SAArB,CAAgC,CAC9B,OACD,CACDN,aAAa,CAACO,OAAd,GACD,CALe,CAAhB,CAOA,IAAK,GAAM,CAAAC,OAAX,GAAsB,CAAAP,gBAAtB,CAAwC,CACtC,GAAAQ,wCAAgC,EAACD,OAAD,CAAhC,CACAE,+BAAsB,CAACC,oBAAvB,CACEH,OAAO,CAACI,WADV,CAEEJ,OAAO,CAACK,UAFV,CAGE,GAAAC,mBAAY,EAACN,OAAO,CAACO,MAAT,CAAiBC,qBAAjB,CAHd,EAMA,GAAAC,iCAAe,EAACT,OAAO,CAACK,UAAT,CAAqBL,OAArB,CAA8BA,OAAO,CAACO,MAAR,CAAeG,MAA7C,CAAf,CACD,CAID,GAAAb,kCAAgB,EAAC,UAAM,CACrB,GAAI,CAACN,eAAe,CAACO,SAArB,CAAgC,CAC9B,OACD,CACD,IAAK,GAAM,CAAAE,QAAX,GAAsB,CAAAP,gBAAtB,CAAwC,CACtCS,+BAAsB,CAACS,oBAAvB,CACEX,QAAO,CAACK,UADV,CAEE,GAAAC,mBAAY,EACVN,QAAO,CAACO,MADE,CAEVC,qBAFU,CAGV,GAAAI,+BAAuB,EAACZ,QAAD,CAHb,CAFd,EAQD,CAED,GAAAa,8BAAuB,IACxB,CAhBe,CAAhB,CAkBA,IAAK,GAAM,CAAAC,OAAX,GAAsB,CAAArB,gBAAtB,CAAwC,CACtC,GAAM,CAAAsB,UAAU,CAAGD,OAAO,CAACE,mBAAR,CACfC,sBAAU,CAACC,kBADI,CAEfD,sBAAU,CAACE,mBAFf,CAIA,GAAIC,qBAAQ,CAACC,EAAT,GAAgB,KAApB,CAA2B,CAEvBnB,+BAAsB,CAACoB,oBADzB,CAGER,OAAO,CAACT,UAHV,CAIEX,OAJF,CAKEuB,sBAAU,CAACM,mBALb,CAME5B,mBANF,EAQD,CATD,IASO,CACLO,+BAAsB,CAACoB,oBAAvB,CACER,OAAO,CAACT,UADV,CAEEX,OAFF,CAGEqB,UAHF,EAKD,CACF,CAEDxB,eAAe,CAACiC,gBAAhB,CAAmC/B,gBAAnC,CAEA,GAAIF,eAAe,CAACkC,gBAApB,CAAsC,CACpC,GAAM,CAAAC,iBAAiB,CAAI,QAArB,CAAAA,iBAAiBA,CAAIC,CAAD,QAAoB,CAAAA,CAAC,CAACX,mBAAhD,GAEAzB,eAAe,CAACkC,gBAAhB,CAAiCG,KAAjC,CAAyCnC,gBAAgB,CACtDoC,MADsC,CAC/BH,iBAD+B,EAEtCI,GAFsC,CAEjC,SAAAH,CAAD,QAAO,CAAAA,CAAC,CAACI,QAFyB,GAAzC,CAKD,CACF","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}