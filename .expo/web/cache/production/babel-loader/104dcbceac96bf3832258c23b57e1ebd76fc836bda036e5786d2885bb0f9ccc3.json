{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.ForceTouchGesture=void 0;var _classCallCheck2=_interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));var _createClass2=_interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));var _possibleConstructorReturn2=_interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));var _getPrototypeOf2=_interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));var _get2=_interopRequireDefault(require(\"@babel/runtime/helpers/get\"));var _inherits2=_interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));var _gesture=require(\"./gesture\");function _callSuper(t,o,e){return o=(0,_getPrototypeOf2.default)(o),(0,_possibleConstructorReturn2.default)(t,_isNativeReflectConstruct()?Reflect.construct(o,e||[],(0,_getPrototypeOf2.default)(t).constructor):o.apply(t,e));}function _isNativeReflectConstruct(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));}catch(t){}return(_isNativeReflectConstruct=function _isNativeReflectConstruct(){return!!t;})();}function _superPropGet(t,o,e,r){var p=(0,_get2.default)((0,_getPrototypeOf2.default)(1&r?t.prototype:t),o,e);return 2&r&&\"function\"==typeof p?function(t){return p.apply(e,t);}:p;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function changeEventCalculator(current,previous){'worklet';var changePayload;if(previous===undefined){changePayload={forceChange:current.force};}else{changePayload={forceChange:current.force-previous.force};}return Object.assign({},current,changePayload);}var ForceTouchGesture=exports.ForceTouchGesture=function(_ContinousBaseGesture){function ForceTouchGesture(){var _this;(0,_classCallCheck2.default)(this,ForceTouchGesture);_this=_callSuper(this,ForceTouchGesture);_defineProperty(_this,\"config\",{});_this.handlerName='ForceTouchGestureHandler';return _this;}(0,_inherits2.default)(ForceTouchGesture,_ContinousBaseGesture);return(0,_createClass2.default)(ForceTouchGesture,[{key:\"minForce\",value:function minForce(force){this.config.minForce=force;return this;}},{key:\"maxForce\",value:function maxForce(force){this.config.maxForce=force;return this;}},{key:\"feedbackOnActivation\",value:function feedbackOnActivation(value){this.config.feedbackOnActivation=value;return this;}},{key:\"onChange\",value:function onChange(callback){this.handlers.changeEventCalculator=changeEventCalculator;return _superPropGet(ForceTouchGesture,\"onChange\",this,3)([callback]);}}]);}(_gesture.ContinousBaseGesture);","map":{"version":3,"names":["_gesture","require","_callSuper","t","o","e","_getPrototypeOf2","default","_possibleConstructorReturn2","_isNativeReflectConstruct","Reflect","construct","constructor","apply","Boolean","prototype","valueOf","call","_superPropGet","r","p","_get2","changeEventCalculator","current","previous","changePayload","undefined","forceChange","force","Object","assign","ForceTouchGesture","exports","_ContinousBaseGesture","_this","_classCallCheck2","_defineProperty","handlerName","_inherits2","_createClass2","key","value","minForce","config","maxForce","feedbackOnActivation","onChange","callback","handlers","ContinousBaseGesture"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/react-native-gesture-handler/lib/module/handlers/gestures/forceTouchGesture.ts"],"sourcesContent":["import { BaseGestureConfig, ContinousBaseGesture } from './gesture';\nimport { ForceTouchGestureConfig } from '../ForceTouchGestureHandler';\nimport type { ForceTouchGestureHandlerEventPayload } from '../GestureHandlerEventPayload';\nimport { GestureUpdateEvent } from '../gestureHandlerCommon';\n\nexport type ForceTouchGestureChangeEventPayload = {\n  forceChange: number;\n};\n\nfunction changeEventCalculator(\n  current: GestureUpdateEvent<ForceTouchGestureHandlerEventPayload>,\n  previous?: GestureUpdateEvent<ForceTouchGestureHandlerEventPayload>\n) {\n  'worklet';\n  let changePayload: ForceTouchGestureChangeEventPayload;\n  if (previous === undefined) {\n    changePayload = {\n      forceChange: current.force,\n    };\n  } else {\n    changePayload = {\n      forceChange: current.force - previous.force,\n    };\n  }\n\n  return { ...current, ...changePayload };\n}\n\nexport class ForceTouchGesture extends ContinousBaseGesture<\n  ForceTouchGestureHandlerEventPayload,\n  ForceTouchGestureChangeEventPayload\n> {\n  public config: BaseGestureConfig & ForceTouchGestureConfig = {};\n\n  constructor() {\n    super();\n\n    this.handlerName = 'ForceTouchGestureHandler';\n  }\n\n  /**\n   * A minimal pressure that is required before gesture can activate.\n   * Should be a value from range [0.0, 1.0]. Default is 0.2.\n   * @param force\n   */\n  minForce(force: number) {\n    this.config.minForce = force;\n    return this;\n  }\n\n  /**\n   * A maximal pressure that could be applied for gesture.\n   * If the pressure is greater, gesture fails. Should be a value from range [0.0, 1.0].\n   * @param force\n   */\n  maxForce(force: number) {\n    this.config.maxForce = force;\n    return this;\n  }\n\n  /**\n   * Value defining if haptic feedback has to be performed on activation.\n   * @param value\n   */\n  feedbackOnActivation(value: boolean) {\n    this.config.feedbackOnActivation = value;\n    return this;\n  }\n\n  onChange(\n    callback: (\n      event: GestureUpdateEvent<\n        GestureUpdateEvent<\n          ForceTouchGestureHandlerEventPayload &\n            ForceTouchGestureChangeEventPayload\n        >\n      >\n    ) => void\n  ) {\n    // @ts-ignore TS being overprotective, ForceTouchGestureHandlerEventPayload is Record\n    this.handlers.changeEventCalculator = changeEventCalculator;\n    return super.onChange(callback);\n  }\n}\n\nexport type ForceTouchGestureType = InstanceType<typeof ForceTouchGesture>;\n"],"mappings":"+sBAAA,IAAAA,QAAA,CAAAC,OAAA,uBAAAC,WAAAC,CAAA,CAAAC,CAAA,CAAAC,CAAA,SAAAD,CAAA,IAAAE,gBAAA,CAAAC,OAAA,EAAAH,CAAA,KAAAI,2BAAA,CAAAD,OAAA,EAAAJ,CAAA,CAAAM,yBAAA,GAAAC,OAAA,CAAAC,SAAA,CAAAP,CAAA,CAAAC,CAAA,QAAAC,gBAAA,CAAAC,OAAA,EAAAJ,CAAA,EAAAS,WAAA,EAAAR,CAAA,CAAAS,KAAA,CAAAV,CAAA,CAAAE,CAAA,aAAAI,0BAAA,UAAAN,CAAA,EAAAW,OAAA,CAAAC,SAAA,CAAAC,OAAA,CAAAC,IAAA,CAAAP,OAAA,CAAAC,SAAA,CAAAG,OAAA,0BAAAX,CAAA,UAAAM,yBAAA,UAAAA,0BAAA,UAAAN,CAAA,gBAAAe,cAAAf,CAAA,CAAAC,CAAA,CAAAC,CAAA,CAAAc,CAAA,MAAAC,CAAA,IAAAC,KAAA,CAAAd,OAAA,KAAAD,gBAAA,CAAAC,OAAA,IAAAY,CAAA,CAAAhB,CAAA,CAAAY,SAAA,CAAAZ,CAAA,EAAAC,CAAA,CAAAC,CAAA,WAAAc,CAAA,qBAAAC,CAAA,UAAAjB,CAAA,SAAAiB,CAAA,CAAAP,KAAA,CAAAR,CAAA,CAAAF,CAAA,IAAAiB,CAAA,E,sLASA,QAAS,CAAAE,qBAATA,CACEC,OADF,CAEEC,QAFF,CAGE,CACA,UACA,GAAI,CAAAC,aAAJ,CACA,GAAID,QAAQ,GAAKE,SAAjB,CAA4B,CAC1BD,aAAa,CAAG,CACdE,WAAW,CAAEJ,OAAO,CAACK,KADP,CAAhB,CAGD,CAJD,IAIO,CACLH,aAAa,CAAG,CACdE,WAAW,CAAEJ,OAAO,CAACK,KAAR,CAAgBJ,QAAQ,CAACI,KADxB,CAAhB,CAGD,CAED,OAAAC,MAAA,CAAAC,MAAA,IAAYP,OAAL,CAAiBE,aAAA,EACzB,IAEY,CAAAM,iBAAN,CAAAC,OAAA,CAAAD,iBAAA,UAAAE,qBAAA,EAML,SAAAF,kBAAA,CAAc,KAAAG,KAAA,IAAAC,gBAAA,CAAA5B,OAAA,OAAAwB,iBAAA,EACZG,KAAA,CAAAhC,UAAA,MAAA6B,iBAAA,EADYK,eAAA,CAAAF,KAAA,UAF+C,EAE/C,EAGZA,KAAA,CAAKG,WAAL,CAAmB,0BAAnB,QAAAH,KAAA,CACD,IAAAI,UAAA,CAAA/B,OAAA,EAAAwB,iBAAA,CAAAE,qBAAA,WAAAM,aAAA,CAAAhC,OAAA,EAAAwB,iBAAA,GAAAS,GAAA,YAAAC,KAAA,CAOD,SAAAC,QAAQA,CAACd,KAAD,CAAgB,CACtB,KAAKe,MAAL,CAAYD,QAAZ,CAAuBd,KAAvB,CACA,MAAO,KAAP,CACD,IAAAY,GAAA,YAAAC,KAAA,CAOD,SAAAG,QAAQA,CAAChB,KAAD,CAAgB,CACtB,KAAKe,MAAL,CAAYC,QAAZ,CAAuBhB,KAAvB,CACA,MAAO,KAAP,CACD,IAAAY,GAAA,wBAAAC,KAAA,CAMD,SAAAI,oBAAoBA,CAACJ,KAAD,CAAiB,CACnC,KAAKE,MAAL,CAAYE,oBAAZ,CAAmCJ,KAAnC,CACA,MAAO,KAAP,CACD,IAAAD,GAAA,YAAAC,KAAA,CAED,SAAAK,QAAQA,CACNC,QADM,CASN,CAEA,KAAKC,QAAL,CAAc1B,qBAAd,CAAsCA,qBAAtC,CACA,OAAAJ,aAAA,CAAAa,iBAAA,qBAAsBgB,QAAf,GACR,OAtDoCE,6BAAhC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}