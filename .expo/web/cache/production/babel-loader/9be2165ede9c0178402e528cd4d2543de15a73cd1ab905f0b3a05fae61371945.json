{"ast":null,"code":"'use strict';Object.defineProperty(exports,\"__esModule\",{value:true});exports.AnimatedImage=void 0;var _reactNative=require(\"react-native\");var _index=require(\"../createAnimatedComponent/index.js\");var AnimatedImage=exports.AnimatedImage=(0,_index.createAnimatedComponent)(_reactNative.Image);","map":{"version":3,"names":["Object","defineProperty","exports","value","AnimatedImage","_reactNative","require","_index","createAnimatedComponent","Image"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/react-native-reanimated/src/component/Image.ts"],"sourcesContent":["'use strict';\nimport { Image } from 'react-native';\nimport { createAnimatedComponent } from '../createAnimatedComponent';\n\n// Since createAnimatedComponent return type is ComponentClass that has the props of the argument,\n// but not things like NativeMethods, etc. we need to add them manually by extending the type.\ninterface AnimatedImageComplement extends Image {\n  getNode(): Image;\n}\n\nexport const AnimatedImage = createAnimatedComponent(Image);\n\nexport type AnimatedImage = typeof AnimatedImage & AnimatedImageComplement;\n"],"mappings":"AAAA,YAAY,CAAAA,MAAA,CAAAC,cAAA,CAAAC,OAAA,eAAAC,KAAA,QAAAD,OAAA,CAAAE,aAAA,QACZ,IAAAC,YAAA,CAAAC,OAAA,iBACA,IAAAC,MAAA,CAAAD,OAAA,wCAQO,GAAM,CAAAF,aAAa,CAAAF,OAAA,CAAAE,aAAA,CAAG,GAAAI,8BAAuB,EAACC,kBAAK,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}