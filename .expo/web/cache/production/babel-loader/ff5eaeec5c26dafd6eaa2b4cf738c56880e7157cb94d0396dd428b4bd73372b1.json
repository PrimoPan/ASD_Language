{"ast":null,"code":"\"use strict\";var _slicedToArray=require(\"@babel/runtime/helpers/slicedToArray\");var _defineProperty=require(\"@babel/runtime/helpers/defineProperty\");var _objectWithoutProperties=require(\"@babel/runtime/helpers/objectWithoutProperties\");var _toConsumableArray=require(\"@babel/runtime/helpers/toConsumableArray\");var _excluded=[\"children\",\"layout\",\"screenOptions\",\"screenLayout\",\"screenListeners\"];Object.defineProperty(exports,\"__esModule\",{value:true});exports.useNavigationBuilder=useNavigationBuilder;var _routers=require(\"@react-navigation/routers\");var React=_interopRequireWildcard(require(\"react\"));var _reactIs=require(\"react-is\");var _useLatestCallback=_interopRequireDefault(require(\"use-latest-callback\"));var _deepFreeze=require(\"./deepFreeze.js\");var _Group=require(\"./Group.js\");var _isArrayEqual=require(\"./isArrayEqual.js\");var _isRecordEqual=require(\"./isRecordEqual.js\");var _NavigationHelpersContext=require(\"./NavigationHelpersContext.js\");var _NavigationRouteContext=require(\"./NavigationRouteContext.js\");var _NavigationStateContext=require(\"./NavigationStateContext.js\");var _PreventRemoveProvider=require(\"./PreventRemoveProvider.js\");var _Screen=require(\"./Screen.js\");var _types=require(\"./types.js\");var _useChildListeners=require(\"./useChildListeners.js\");var _useComponent=require(\"./useComponent.js\");var _useCurrentRender=require(\"./useCurrentRender.js\");var _useDescriptors=require(\"./useDescriptors.js\");var _useEventEmitter=require(\"./useEventEmitter.js\");var _useFocusedListenersChildrenAdapter=require(\"./useFocusedListenersChildrenAdapter.js\");var _useFocusEvents=require(\"./useFocusEvents.js\");var _useIsomorphicLayoutEffect=require(\"./useIsomorphicLayoutEffect\");var _useKeyedChildListeners=require(\"./useKeyedChildListeners.js\");var _useLazyValue=require(\"./useLazyValue.js\");var _useNavigationHelpers=require(\"./useNavigationHelpers.js\");var _useOnAction=require(\"./useOnAction.js\");var _useOnGetState=require(\"./useOnGetState.js\");var _useOnRouteFocus=require(\"./useOnRouteFocus.js\");var _useRegisterNavigator=require(\"./useRegisterNavigator.js\");var _useScheduleUpdate=require(\"./useScheduleUpdate.js\");var _jsxRuntime=require(\"react/jsx-runtime\");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e};}function _getRequireWildcardCache(e){if(\"function\"!=typeof WeakMap)return null;var r=new WeakMap(),t=new WeakMap();return(_getRequireWildcardCache=function _getRequireWildcardCache(e){return e?t:r;})(e);}function _interopRequireWildcard(e,r){if(!r&&e&&e.__esModule)return e;if(null===e||\"object\"!=typeof e&&\"function\"!=typeof e)return{default:e};var t=_getRequireWildcardCache(r);if(t&&t.has(e))return t.get(e);var n={__proto__:null},a=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var u in e)if(\"default\"!==u&&{}.hasOwnProperty.call(e,u)){var i=a?Object.getOwnPropertyDescriptor(e,u):null;i&&(i.get||i.set)?Object.defineProperty(n,u,i):n[u]=e[u];}return n.default=e,t&&t.set(e,n),n;}_types.PrivateValueStore;var isValidKey=function isValidKey(key){return key===undefined||typeof key==='string'&&key!=='';};var _getRouteConfigsFromChildren=function getRouteConfigsFromChildren(children,groupKey,groupOptions,groupLayout){var configs=React.Children.toArray(children).reduce(function(acc,child){var _child$type,_child$props;if(React.isValidElement(child)){if(child.type===_Screen.Screen){if(!isValidKey(child.props.navigationKey)){throw new Error(`Got an invalid 'navigationKey' prop (${JSON.stringify(child.props.navigationKey)}) for the screen '${child.props.name}'. It must be a non-empty string or 'undefined'.`);}acc.push({keys:[groupKey,child.props.navigationKey],options:groupOptions,layout:groupLayout,props:child.props});return acc;}if(child.type===React.Fragment||child.type===_Group.Group){if(!isValidKey(child.props.navigationKey)){throw new Error(`Got an invalid 'navigationKey' prop (${JSON.stringify(child.props.navigationKey)}) for the group. It must be a non-empty string or 'undefined'.`);}acc.push.apply(acc,_toConsumableArray(_getRouteConfigsFromChildren(child.props.children,child.props.navigationKey,child.type!==_Group.Group?groupOptions:groupOptions!=null?[].concat(_toConsumableArray(groupOptions),[child.props.screenOptions]):[child.props.screenOptions],typeof child.props.screenLayout==='function'?child.props.screenLayout:groupLayout)));return acc;}}throw new Error(`A navigator can only contain 'Screen', 'Group' or 'React.Fragment' as its direct children (found ${React.isValidElement(child)?`'${typeof child.type==='string'?child.type:(_child$type=child.type)==null?void 0:_child$type.name}'${child.props!=null&&typeof child.props==='object'&&'name'in child.props&&(_child$props=child.props)!=null&&_child$props.name?` for the screen '${child.props.name}'`:''}`:typeof child==='object'?JSON.stringify(child):`'${String(child)}'`}). To render this component in the navigator, pass it in the 'component' prop to 'Screen'.`);},[]);if(process.env.NODE_ENV!=='production'){configs.forEach(function(config){var _config$props=config.props,name=_config$props.name,children=_config$props.children,component=_config$props.component,getComponent=_config$props.getComponent;if(typeof name!=='string'||!name){throw new Error(`Got an invalid name (${JSON.stringify(name)}) for the screen. It must be a non-empty string.`);}if(children!=null||component!==undefined||getComponent!==undefined){if(children!=null&&component!==undefined){throw new Error(`Got both 'component' and 'children' props for the screen '${name}'. You must pass only one of them.`);}if(children!=null&&getComponent!==undefined){throw new Error(`Got both 'getComponent' and 'children' props for the screen '${name}'. You must pass only one of them.`);}if(component!==undefined&&getComponent!==undefined){throw new Error(`Got both 'component' and 'getComponent' props for the screen '${name}'. You must pass only one of them.`);}if(children!=null&&typeof children!=='function'){throw new Error(`Got an invalid value for 'children' prop for the screen '${name}'. It must be a function returning a React Element.`);}if(component!==undefined&&!(0,_reactIs.isValidElementType)(component)){throw new Error(`Got an invalid value for 'component' prop for the screen '${name}'. It must be a valid React Component.`);}if(getComponent!==undefined&&typeof getComponent!=='function'){throw new Error(`Got an invalid value for 'getComponent' prop for the screen '${name}'. It must be a function returning a React Component.`);}if(typeof component==='function'){if(component.name==='component'){console.warn(`Looks like you're passing an inline function for 'component' prop for the screen '${name}' (e.g. component={() => <SomeComponent />}). Passing an inline function will cause the component state to be lost on re-render and cause perf issues since it's re-created every render. You can pass the function as children to 'Screen' instead to achieve the desired behaviour.`);}else if(/^[a-z]/.test(component.name)){console.warn(`Got a component with the name '${component.name}' for the screen '${name}'. React Components must start with an uppercase letter. If you're passing a regular function and not a component, pass it as children to 'Screen' instead. Otherwise capitalize your component's name.`);}}}else{throw new Error(`Couldn't find a 'component', 'getComponent' or 'children' prop for the screen '${name}'. This can happen if you passed 'undefined'. You likely forgot to export your component from the file it's defined in, or mixed up default import and named import when importing.`);}});}return configs;};function useNavigationBuilder(createRouter,options){var navigatorKey=(0,_useRegisterNavigator.useRegisterNavigator)();var route=React.useContext(_NavigationRouteContext.NavigationRouteContext);var children=options.children,layout=options.layout,screenOptions=options.screenOptions,screenLayout=options.screenLayout,screenListeners=options.screenListeners,rest=_objectWithoutProperties(options,_excluded);var routeConfigs=_getRouteConfigsFromChildren(children);var router=(0,_useLazyValue.useLazyValue)(function(){if(rest.initialRouteName!=null&&routeConfigs.every(function(config){return config.props.name!==rest.initialRouteName;})){throw new Error(`Couldn't find a screen named '${rest.initialRouteName}' to use as 'initialRouteName'.`);}return createRouter(rest);});var screens=routeConfigs.reduce(function(acc,config){if(config.props.name in acc){throw new Error(`A navigator cannot contain multiple 'Screen' components with the same name (found duplicate screen named '${config.props.name}')`);}acc[config.props.name]=config;return acc;},{});var routeNames=routeConfigs.map(function(config){return config.props.name;});var routeKeyList=routeNames.reduce(function(acc,curr){acc[curr]=screens[curr].keys.map(function(key){return key!=null?key:'';}).join(':');return acc;},{});var routeParamList=routeNames.reduce(function(acc,curr){var initialParams=screens[curr].props.initialParams;acc[curr]=initialParams;return acc;},{});var routeGetIdList=routeNames.reduce(function(acc,curr){return Object.assign(acc,_defineProperty({},curr,screens[curr].props.getId));},{});if(!routeNames.length){throw new Error(\"Couldn't find any screens for the navigator. Have you defined any screens as its children?\");}var isStateValid=React.useCallback(function(state){return state.type===undefined||state.type===router.type;},[router.type]);var isStateInitialized=React.useCallback(function(state){return state!==undefined&&state.stale===false&&isStateValid(state);},[isStateValid]);var _React$useContext=React.useContext(_NavigationStateContext.NavigationStateContext),currentState=_React$useContext.state,getCurrentState=_React$useContext.getState,setCurrentState=_React$useContext.setState,setKey=_React$useContext.setKey,getKey=_React$useContext.getKey,getIsInitial=_React$useContext.getIsInitial;var stateCleanedUp=React.useRef(false);var setState=(0,_useLatestCallback.default)(function(state){if(stateCleanedUp.current){return;}setCurrentState(state);});var _React$useMemo=React.useMemo(function(){var _route$params4,_route$params5,_route$params6;var initialRouteParamList=routeNames.reduce(function(acc,curr){var _route$params,_route$params2,_route$params3;var initialParams=screens[curr].props.initialParams;var initialParamsFromParams=(route==null||(_route$params=route.params)==null?void 0:_route$params.state)==null&&(route==null||(_route$params2=route.params)==null?void 0:_route$params2.initial)!==false&&(route==null||(_route$params3=route.params)==null?void 0:_route$params3.screen)===curr?route.params.params:undefined;acc[curr]=initialParams!==undefined||initialParamsFromParams!==undefined?Object.assign({},initialParams,initialParamsFromParams):undefined;return acc;},{});if((currentState===undefined||!isStateValid(currentState))&&(route==null||(_route$params4=route.params)==null?void 0:_route$params4.state)==null&&!(typeof(route==null||(_route$params5=route.params)==null?void 0:_route$params5.screen)==='string'&&(route==null||(_route$params6=route.params)==null?void 0:_route$params6.initial)!==false)){return[router.getInitialState({routeNames:routeNames,routeParamList:initialRouteParamList,routeGetIdList:routeGetIdList}),true];}else{var _route$params7,_route$params8,_route$params9,_stateFromParams;var stateFromParams;if((route==null||(_route$params7=route.params)==null?void 0:_route$params7.state)!=null){stateFromParams=route.params.state;}else if(typeof(route==null||(_route$params8=route.params)==null?void 0:_route$params8.screen)==='string'&&(route==null||(_route$params9=route.params)==null?void 0:_route$params9.initial)!==false){stateFromParams={index:0,routes:[{name:route.params.screen,params:route.params.params,path:route.params.path}]};}return[router.getRehydratedState((_stateFromParams=stateFromParams)!=null?_stateFromParams:currentState,{routeNames:routeNames,routeParamList:initialRouteParamList,routeGetIdList:routeGetIdList}),false];}},[currentState,router,isStateValid]),_React$useMemo2=_slicedToArray(_React$useMemo,2),initializedState=_React$useMemo2[0],isFirstStateInitialization=_React$useMemo2[1];var previousRouteKeyListRef=React.useRef(routeKeyList);React.useEffect(function(){previousRouteKeyListRef.current=routeKeyList;});var previousRouteKeyList=previousRouteKeyListRef.current;var state=isStateInitialized(currentState)?currentState:initializedState;var nextState=state;if(!(0,_isArrayEqual.isArrayEqual)(state.routeNames,routeNames)||!(0,_isRecordEqual.isRecordEqual)(routeKeyList,previousRouteKeyList)){var navigatorStateForNextRouteNamesChange=options.UNSTABLE_getStateForRouteNamesChange==null?void 0:options.UNSTABLE_getStateForRouteNamesChange(state);nextState=navigatorStateForNextRouteNamesChange?router.getRehydratedState(navigatorStateForNextRouteNamesChange,{routeNames:routeNames,routeParamList:routeParamList,routeGetIdList:routeGetIdList}):router.getStateForRouteNamesChange(state,{routeNames:routeNames,routeParamList:routeParamList,routeGetIdList:routeGetIdList,routeKeyChanges:Object.keys(routeKeyList).filter(function(name){return name in previousRouteKeyList&&routeKeyList[name]!==previousRouteKeyList[name];})});}var previousNestedParamsRef=React.useRef(route==null?void 0:route.params);React.useEffect(function(){previousNestedParamsRef.current=route==null?void 0:route.params;},[route==null?void 0:route.params]);if(route!=null&&route.params){var previousParams=previousNestedParamsRef.current;var action;if(typeof route.params.state==='object'&&route.params.state!=null&&route.params!==previousParams){action=_routers.CommonActions.reset(route.params.state);}else if(typeof route.params.screen==='string'&&(route.params.initial===false&&isFirstStateInitialization||route.params!==previousParams)){action=_routers.CommonActions.navigate({name:route.params.screen,params:route.params.params,path:route.params.path});}var updatedState=action?router.getStateForAction(nextState,action,{routeNames:routeNames,routeParamList:routeParamList,routeGetIdList:routeGetIdList}):null;nextState=updatedState!==null?router.getRehydratedState(updatedState,{routeNames:routeNames,routeParamList:routeParamList,routeGetIdList:routeGetIdList}):nextState;}var shouldUpdate=state!==nextState;(0,_useScheduleUpdate.useScheduleUpdate)(function(){if(shouldUpdate){setState(nextState);}});state=nextState;React.useEffect(function(){stateCleanedUp.current=false;setKey(navigatorKey);if(!getIsInitial()){setState(nextState);}return function(){if(getCurrentState()!==undefined&&getKey()===navigatorKey){setCurrentState(undefined);stateCleanedUp.current=true;}};},[]);var stateRef=React.useRef(state);stateRef.current=state;(0,_useIsomorphicLayoutEffect.useIsomorphicLayoutEffect)(function(){stateRef.current=null;});var getState=(0,_useLatestCallback.default)(function(){var currentState=getCurrentState();return(0,_deepFreeze.deepFreeze)(isStateInitialized(currentState)?currentState:initializedState);});var emitter=(0,_useEventEmitter.useEventEmitter)(function(e){var _ref;var routeNames=[];var route;if(e.target){var _route;route=state.routes.find(function(route){return route.key===e.target;});if((_route=route)!=null&&_route.name){routeNames.push(route.name);}}else{route=state.routes[state.index];routeNames.push.apply(routeNames,_toConsumableArray(Object.keys(screens).filter(function(name){var _route2;return((_route2=route)==null?void 0:_route2.name)===name;})));}if(route==null){return;}var navigation=descriptors[route.key].navigation;var listeners=(_ref=[]).concat.apply(_ref,_toConsumableArray([screenListeners].concat(_toConsumableArray(routeNames.map(function(name){var listeners=screens[name].props.listeners;return listeners;}))).map(function(listeners){var map=typeof listeners==='function'?listeners({route:route,navigation:navigation}):listeners;return map?Object.keys(map).filter(function(type){return type===e.type;}).map(function(type){return map==null?void 0:map[type];}):undefined;}))).filter(function(cb,i,self){return cb&&self.lastIndexOf(cb)===i;});listeners.forEach(function(listener){return listener==null?void 0:listener(e);});});(0,_useFocusEvents.useFocusEvents)({state:state,emitter:emitter});React.useEffect(function(){emitter.emit({type:'state',data:{state:state}});},[emitter,state]);var _ref2=(0,_useChildListeners.useChildListeners)(),childListeners=_ref2.listeners,addListener=_ref2.addListener;var _ref3=(0,_useKeyedChildListeners.useKeyedChildListeners)(),keyedListeners=_ref3.keyedListeners,addKeyedListener=_ref3.addKeyedListener;var onAction=(0,_useOnAction.useOnAction)({router:router,getState:getState,setState:setState,key:route==null?void 0:route.key,actionListeners:childListeners.action,beforeRemoveListeners:keyedListeners.beforeRemove,routerConfigOptions:{routeNames:routeNames,routeParamList:routeParamList,routeGetIdList:routeGetIdList},emitter:emitter});var onRouteFocus=(0,_useOnRouteFocus.useOnRouteFocus)({router:router,key:route==null?void 0:route.key,getState:getState,setState:setState});var navigation=(0,_useNavigationHelpers.useNavigationHelpers)({id:options.id,onAction:onAction,getState:getState,emitter:emitter,router:router,stateRef:stateRef});(0,_useFocusedListenersChildrenAdapter.useFocusedListenersChildrenAdapter)({navigation:navigation,focusedListeners:childListeners.focus});(0,_useOnGetState.useOnGetState)({getState:getState,getStateListeners:keyedListeners.getState});var _ref4=(0,_useDescriptors.useDescriptors)({state:state,screens:screens,navigation:navigation,screenOptions:screenOptions,screenLayout:screenLayout,onAction:onAction,getState:getState,setState:setState,onRouteFocus:onRouteFocus,addListener:addListener,addKeyedListener:addKeyedListener,router:router,emitter:emitter}),describe=_ref4.describe,descriptors=_ref4.descriptors;(0,_useCurrentRender.useCurrentRender)({state:state,navigation:navigation,descriptors:descriptors});var NavigationContent=(0,_useComponent.useComponent)(function(children){var element=layout!=null?layout({state:state,descriptors:descriptors,navigation:navigation,children:children}):children;return(0,_jsxRuntime.jsx)(_NavigationHelpersContext.NavigationHelpersContext.Provider,{value:navigation,children:(0,_jsxRuntime.jsx)(_PreventRemoveProvider.PreventRemoveProvider,{children:element})});});return{state:state,navigation:navigation,describe:describe,descriptors:descriptors,NavigationContent:NavigationContent};}","map":{"version":3,"names":["_routers","require","React","_interopRequireWildcard","_reactIs","_useLatestCallback","_interopRequireDefault","_deepFreeze","_Group","_isArrayEqual","_isRecordEqual","_NavigationHelpersContext","_NavigationRouteContext","_NavigationStateContext","_PreventRemoveProvider","_Screen","_types","_useChildListeners","_useComponent","_useCurrentRender","_useDescriptors","_useEventEmitter","_useFocusedListenersChildrenAdapter","_useFocusEvents","_useIsomorphicLayoutEffect","_useKeyedChildListeners","_useLazyValue","_useNavigationHelpers","_useOnAction","_useOnGetState","_useOnRouteFocus","_useRegisterNavigator","_useScheduleUpdate","_jsxRuntime","e","__esModule","default","_getRequireWildcardCache","WeakMap","r","t","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","PrivateValueStore","isValidKey","key","undefined","getRouteConfigsFromChildren","children","groupKey","groupOptions","groupLayout","configs","Children","toArray","reduce","acc","child","_child$type","_child$props","isValidElement","type","Screen","props","navigationKey","Error","JSON","stringify","name","push","keys","options","layout","Fragment","Group","apply","_toConsumableArray","concat","screenOptions","screenLayout","String","process","env","NODE_ENV","forEach","config","_config$props","component","getComponent","isValidElementType","console","warn","test","useNavigationBuilder","createRouter","navigatorKey","useRegisterNavigator","route","useContext","NavigationRouteContext","screenListeners","rest","_objectWithoutProperties","_excluded","routeConfigs","router","useLazyValue","initialRouteName","every","screens","routeNames","map","routeKeyList","curr","join","routeParamList","initialParams","routeGetIdList","assign","_defineProperty","getId","length","isStateValid","useCallback","state","isStateInitialized","stale","_React$useContext","NavigationStateContext","currentState","getCurrentState","getState","setCurrentState","setState","setKey","getKey","getIsInitial","stateCleanedUp","useRef","current","_React$useMemo","useMemo","_route$params4","_route$params5","_route$params6","initialRouteParamList","_route$params","_route$params2","_route$params3","initialParamsFromParams","params","initial","screen","getInitialState","_route$params7","_route$params8","_route$params9","_stateFromParams","stateFromParams","index","routes","path","getRehydratedState","_React$useMemo2","_slicedToArray","initializedState","isFirstStateInitialization","previousRouteKeyListRef","useEffect","previousRouteKeyList","nextState","isArrayEqual","isRecordEqual","navigatorStateForNextRouteNamesChange","UNSTABLE_getStateForRouteNamesChange","getStateForRouteNamesChange","routeKeyChanges","filter","previousNestedParamsRef","previousParams","action","CommonActions","reset","navigate","updatedState","getStateForAction","shouldUpdate","useScheduleUpdate","stateRef","useIsomorphicLayoutEffect","deepFreeze","emitter","useEventEmitter","_ref","target","_route","find","_route2","navigation","descriptors","listeners","cb","self","lastIndexOf","listener","useFocusEvents","emit","data","_ref2","useChildListeners","childListeners","addListener","_ref3","useKeyedChildListeners","keyedListeners","addKeyedListener","onAction","useOnAction","actionListeners","beforeRemoveListeners","beforeRemove","routerConfigOptions","onRouteFocus","useOnRouteFocus","useNavigationHelpers","id","useFocusedListenersChildrenAdapter","focusedListeners","focus","useOnGetState","getStateListeners","_ref4","useDescriptors","describe","useCurrentRender","NavigationContent","useComponent","element","jsx","NavigationHelpersContext","Provider","value","PreventRemoveProvider"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/node_modules/@react-navigation/core/src/useNavigationBuilder.tsx"],"sourcesContent":["import {\n  CommonActions,\n  type DefaultRouterOptions,\n  type NavigationAction,\n  type NavigationState,\n  type ParamListBase,\n  type PartialState,\n  type Route,\n  type Router,\n  type RouterConfigOptions,\n  type RouterFactory,\n} from '@react-navigation/routers';\nimport * as React from 'react';\nimport { isValidElementType } from 'react-is';\nimport useLatestCallback from 'use-latest-callback';\n\nimport { deepFreeze } from './deepFreeze';\nimport { Group } from './Group';\nimport { isArrayEqual } from './isArrayEqual';\nimport { isRecordEqual } from './isRecordEqual';\nimport { NavigationHelpersContext } from './NavigationHelpersContext';\nimport { NavigationRouteContext } from './NavigationRouteContext';\nimport { NavigationStateContext } from './NavigationStateContext';\nimport { PreventRemoveProvider } from './PreventRemoveProvider';\nimport { Screen } from './Screen';\nimport {\n  type DefaultNavigatorOptions,\n  type EventMapBase,\n  type EventMapCore,\n  type NavigatorScreenParams,\n  PrivateValueStore,\n  type RouteConfig,\n} from './types';\nimport { useChildListeners } from './useChildListeners';\nimport { useComponent } from './useComponent';\nimport { useCurrentRender } from './useCurrentRender';\nimport { type ScreenConfigWithParent, useDescriptors } from './useDescriptors';\nimport { useEventEmitter } from './useEventEmitter';\nimport { useFocusedListenersChildrenAdapter } from './useFocusedListenersChildrenAdapter';\nimport { useFocusEvents } from './useFocusEvents';\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect';\nimport { useKeyedChildListeners } from './useKeyedChildListeners';\nimport { useLazyValue } from './useLazyValue';\nimport { useNavigationHelpers } from './useNavigationHelpers';\nimport { useOnAction } from './useOnAction';\nimport { useOnGetState } from './useOnGetState';\nimport { useOnRouteFocus } from './useOnRouteFocus';\nimport { useRegisterNavigator } from './useRegisterNavigator';\nimport { useScheduleUpdate } from './useScheduleUpdate';\n\n// This is to make TypeScript compiler happy\nPrivateValueStore;\n\ntype NavigatorRoute = {\n  key: string;\n  params?: NavigatorScreenParams<ParamListBase>;\n};\n\nconst isValidKey = (key: unknown) =>\n  key === undefined || (typeof key === 'string' && key !== '');\n\n/**\n * Extract route config object from React children elements.\n *\n * @param children React Elements to extract the config from.\n */\nconst getRouteConfigsFromChildren = <\n  State extends NavigationState,\n  ScreenOptions extends {},\n  EventMap extends EventMapBase,\n>(\n  children: React.ReactNode,\n  groupKey?: string,\n  groupOptions?: ScreenConfigWithParent<\n    State,\n    ScreenOptions,\n    EventMap\n  >['options'],\n  groupLayout?: ScreenConfigWithParent<State, ScreenOptions, EventMap>['layout']\n) => {\n  const configs = React.Children.toArray(children).reduce<\n    ScreenConfigWithParent<State, ScreenOptions, EventMap>[]\n  >((acc, child) => {\n    if (React.isValidElement(child)) {\n      if (child.type === Screen) {\n        // We can only extract the config from `Screen` elements\n        // If something else was rendered, it's probably a bug\n\n        if (!isValidKey(child.props.navigationKey)) {\n          throw new Error(\n            `Got an invalid 'navigationKey' prop (${JSON.stringify(\n              child.props.navigationKey\n            )}) for the screen '${\n              child.props.name\n            }'. It must be a non-empty string or 'undefined'.`\n          );\n        }\n\n        acc.push({\n          keys: [groupKey, child.props.navigationKey],\n          options: groupOptions,\n          layout: groupLayout,\n          props: child.props as RouteConfig<\n            ParamListBase,\n            string,\n            State,\n            ScreenOptions,\n            EventMap,\n            unknown\n          >,\n        });\n\n        return acc;\n      }\n\n      if (child.type === React.Fragment || child.type === Group) {\n        if (!isValidKey(child.props.navigationKey)) {\n          throw new Error(\n            `Got an invalid 'navigationKey' prop (${JSON.stringify(\n              child.props.navigationKey\n            )}) for the group. It must be a non-empty string or 'undefined'.`\n          );\n        }\n\n        // When we encounter a fragment or group, we need to dive into its children to extract the configs\n        // This is handy to conditionally define a group of screens\n        acc.push(\n          ...getRouteConfigsFromChildren<State, ScreenOptions, EventMap>(\n            child.props.children,\n            child.props.navigationKey,\n            child.type !== Group\n              ? groupOptions\n              : groupOptions != null\n                ? [...groupOptions, child.props.screenOptions]\n                : [child.props.screenOptions],\n            typeof child.props.screenLayout === 'function'\n              ? child.props.screenLayout\n              : groupLayout\n          )\n        );\n        return acc;\n      }\n    }\n\n    throw new Error(\n      `A navigator can only contain 'Screen', 'Group' or 'React.Fragment' as its direct children (found ${\n        React.isValidElement(child)\n          ? `'${\n              typeof child.type === 'string' ? child.type : child.type?.name\n            }'${\n              child.props != null &&\n              typeof child.props === 'object' &&\n              'name' in child.props &&\n              child.props?.name\n                ? ` for the screen '${child.props.name}'`\n                : ''\n            }`\n          : typeof child === 'object'\n            ? JSON.stringify(child)\n            : `'${String(child)}'`\n      }). To render this component in the navigator, pass it in the 'component' prop to 'Screen'.`\n    );\n  }, []);\n\n  if (process.env.NODE_ENV !== 'production') {\n    configs.forEach((config) => {\n      const { name, children, component, getComponent } = config.props;\n\n      if (typeof name !== 'string' || !name) {\n        throw new Error(\n          `Got an invalid name (${JSON.stringify(\n            name\n          )}) for the screen. It must be a non-empty string.`\n        );\n      }\n\n      if (\n        children != null ||\n        component !== undefined ||\n        getComponent !== undefined\n      ) {\n        if (children != null && component !== undefined) {\n          throw new Error(\n            `Got both 'component' and 'children' props for the screen '${name}'. You must pass only one of them.`\n          );\n        }\n\n        if (children != null && getComponent !== undefined) {\n          throw new Error(\n            `Got both 'getComponent' and 'children' props for the screen '${name}'. You must pass only one of them.`\n          );\n        }\n\n        if (component !== undefined && getComponent !== undefined) {\n          throw new Error(\n            `Got both 'component' and 'getComponent' props for the screen '${name}'. You must pass only one of them.`\n          );\n        }\n\n        if (children != null && typeof children !== 'function') {\n          throw new Error(\n            `Got an invalid value for 'children' prop for the screen '${name}'. It must be a function returning a React Element.`\n          );\n        }\n\n        if (component !== undefined && !isValidElementType(component)) {\n          throw new Error(\n            `Got an invalid value for 'component' prop for the screen '${name}'. It must be a valid React Component.`\n          );\n        }\n\n        if (getComponent !== undefined && typeof getComponent !== 'function') {\n          throw new Error(\n            `Got an invalid value for 'getComponent' prop for the screen '${name}'. It must be a function returning a React Component.`\n          );\n        }\n\n        if (typeof component === 'function') {\n          if (component.name === 'component') {\n            // Inline anonymous functions passed in the `component` prop will have the name of the prop\n            // It's relatively safe to assume that it's not a component since it should also have PascalCase name\n            // We won't catch all scenarios here, but this should catch a good chunk of incorrect use.\n            console.warn(\n              `Looks like you're passing an inline function for 'component' prop for the screen '${name}' (e.g. component={() => <SomeComponent />}). Passing an inline function will cause the component state to be lost on re-render and cause perf issues since it's re-created every render. You can pass the function as children to 'Screen' instead to achieve the desired behaviour.`\n            );\n          } else if (/^[a-z]/.test(component.name)) {\n            console.warn(\n              `Got a component with the name '${component.name}' for the screen '${name}'. React Components must start with an uppercase letter. If you're passing a regular function and not a component, pass it as children to 'Screen' instead. Otherwise capitalize your component's name.`\n            );\n          }\n        }\n      } else {\n        throw new Error(\n          `Couldn't find a 'component', 'getComponent' or 'children' prop for the screen '${name}'. This can happen if you passed 'undefined'. You likely forgot to export your component from the file it's defined in, or mixed up default import and named import when importing.`\n        );\n      }\n    });\n  }\n\n  return configs;\n};\n\n/**\n * Hook for building navigators.\n *\n * @param createRouter Factory method which returns router object.\n * @param options Options object containing `children` and additional options for the router.\n * @returns An object containing `state`, `navigation`, `descriptors` objects.\n */\nexport function useNavigationBuilder<\n  State extends NavigationState,\n  RouterOptions extends DefaultRouterOptions,\n  ActionHelpers extends Record<string, (...args: any) => void>,\n  ScreenOptions extends {},\n  EventMap extends Record<string, any>,\n>(\n  createRouter: RouterFactory<State, any, RouterOptions>,\n  options: DefaultNavigatorOptions<\n    ParamListBase,\n    string | undefined,\n    State,\n    ScreenOptions,\n    EventMap,\n    any\n  > &\n    RouterOptions\n) {\n  const navigatorKey = useRegisterNavigator();\n\n  const route = React.useContext(NavigationRouteContext) as\n    | NavigatorRoute\n    | undefined;\n\n  const {\n    children,\n    layout,\n    screenOptions,\n    screenLayout,\n    screenListeners,\n    ...rest\n  } = options;\n\n  const routeConfigs = getRouteConfigsFromChildren<\n    State,\n    ScreenOptions,\n    EventMap\n  >(children);\n\n  const router = useLazyValue<Router<State, any>>(() => {\n    if (\n      rest.initialRouteName != null &&\n      routeConfigs.every(\n        (config) => config.props.name !== rest.initialRouteName\n      )\n    ) {\n      throw new Error(\n        `Couldn't find a screen named '${rest.initialRouteName}' to use as 'initialRouteName'.`\n      );\n    }\n\n    return createRouter(rest as unknown as RouterOptions);\n  });\n\n  const screens = routeConfigs.reduce<\n    Record<string, ScreenConfigWithParent<State, ScreenOptions, EventMap>>\n  >((acc, config) => {\n    if (config.props.name in acc) {\n      throw new Error(\n        `A navigator cannot contain multiple 'Screen' components with the same name (found duplicate screen named '${config.props.name}')`\n      );\n    }\n\n    acc[config.props.name] = config;\n    return acc;\n  }, {});\n\n  const routeNames = routeConfigs.map((config) => config.props.name);\n  const routeKeyList = routeNames.reduce<Record<string, React.Key | undefined>>(\n    (acc, curr) => {\n      acc[curr] = screens[curr].keys.map((key) => key ?? '').join(':');\n      return acc;\n    },\n    {}\n  );\n  const routeParamList = routeNames.reduce<Record<string, object | undefined>>(\n    (acc, curr) => {\n      const { initialParams } = screens[curr].props;\n      acc[curr] = initialParams;\n      return acc;\n    },\n    {}\n  );\n  const routeGetIdList = routeNames.reduce<\n    RouterConfigOptions['routeGetIdList']\n  >(\n    (acc, curr) =>\n      Object.assign(acc, {\n        [curr]: screens[curr].props.getId,\n      }),\n    {}\n  );\n\n  if (!routeNames.length) {\n    throw new Error(\n      \"Couldn't find any screens for the navigator. Have you defined any screens as its children?\"\n    );\n  }\n\n  const isStateValid = React.useCallback(\n    (state: NavigationState | PartialState<NavigationState>) =>\n      state.type === undefined || state.type === router.type,\n    [router.type]\n  );\n\n  const isStateInitialized = React.useCallback(\n    (state: NavigationState | PartialState<NavigationState> | undefined) =>\n      state !== undefined && state.stale === false && isStateValid(state),\n    [isStateValid]\n  );\n\n  const {\n    state: currentState,\n    getState: getCurrentState,\n    setState: setCurrentState,\n    setKey,\n    getKey,\n    getIsInitial,\n  } = React.useContext(NavigationStateContext);\n\n  const stateCleanedUp = React.useRef(false);\n\n  const setState = useLatestCallback(\n    (state: NavigationState | PartialState<NavigationState> | undefined) => {\n      if (stateCleanedUp.current) {\n        // State might have been already cleaned up due to unmount\n        // We do not want to expose API allowing to override this\n        // This would lead to old data preservation on main navigator unmount\n        return;\n      }\n\n      setCurrentState(state);\n    }\n  );\n\n  const [initializedState, isFirstStateInitialization] = React.useMemo(() => {\n    const initialRouteParamList = routeNames.reduce<\n      Record<string, object | undefined>\n    >((acc, curr) => {\n      const { initialParams } = screens[curr].props;\n      const initialParamsFromParams =\n        route?.params?.state == null &&\n        route?.params?.initial !== false &&\n        route?.params?.screen === curr\n          ? route.params.params\n          : undefined;\n\n      acc[curr] =\n        initialParams !== undefined || initialParamsFromParams !== undefined\n          ? {\n              ...initialParams,\n              ...initialParamsFromParams,\n            }\n          : undefined;\n\n      return acc;\n    }, {});\n\n    // If the current state isn't initialized on first render, we initialize it\n    // We also need to re-initialize it if the state passed from parent was changed (maybe due to reset)\n    // Otherwise assume that the state was provided as initial state\n    // So we need to rehydrate it to make it usable\n    if (\n      (currentState === undefined || !isStateValid(currentState)) &&\n      route?.params?.state == null &&\n      !(\n        typeof route?.params?.screen === 'string' &&\n        route?.params?.initial !== false\n      )\n    ) {\n      return [\n        router.getInitialState({\n          routeNames,\n          routeParamList: initialRouteParamList,\n          routeGetIdList,\n        }),\n        true,\n      ];\n    } else {\n      let stateFromParams;\n\n      if (route?.params?.state != null) {\n        stateFromParams = route.params.state;\n      } else if (\n        typeof route?.params?.screen === 'string' &&\n        route?.params?.initial !== false\n      ) {\n        stateFromParams = {\n          index: 0,\n          routes: [\n            {\n              name: route.params.screen,\n              params: route.params.params,\n              path: route.params.path,\n            },\n          ],\n        };\n      }\n\n      return [\n        router.getRehydratedState(\n          (stateFromParams ?? currentState) as PartialState<State>,\n          {\n            routeNames,\n            routeParamList: initialRouteParamList,\n            routeGetIdList,\n          }\n        ),\n        false,\n      ];\n    }\n    // We explicitly don't include routeNames, route.params etc. in the dep list\n    // below. We want to avoid forcing a new state to be calculated in those cases\n    // Instead, we handle changes to these in the nextState code below. Note\n    // that some changes to routeConfigs are explicitly ignored, such as changes\n    // to initialParams\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentState, router, isStateValid]);\n\n  const previousRouteKeyListRef = React.useRef(routeKeyList);\n\n  React.useEffect(() => {\n    previousRouteKeyListRef.current = routeKeyList;\n  });\n\n  const previousRouteKeyList = previousRouteKeyListRef.current;\n\n  let state =\n    // If the state isn't initialized, or stale, use the state we initialized instead\n    // The state won't update until there's a change needed in the state we have initialized locally\n    // So it'll be `undefined` or stale until the first navigation event happens\n    isStateInitialized(currentState)\n      ? (currentState as State)\n      : (initializedState as State);\n\n  let nextState: State = state;\n\n  if (\n    !isArrayEqual(state.routeNames, routeNames) ||\n    !isRecordEqual(routeKeyList, previousRouteKeyList)\n  ) {\n    const navigatorStateForNextRouteNamesChange =\n      options.UNSTABLE_getStateForRouteNamesChange?.(state);\n    // When the list of route names change, the router should handle it to remove invalid routes\n    nextState = navigatorStateForNextRouteNamesChange\n      ? // @ts-expect-error this is ok\n        router.getRehydratedState(navigatorStateForNextRouteNamesChange, {\n          routeNames,\n          routeParamList,\n          routeGetIdList,\n        })\n      : router.getStateForRouteNamesChange(state, {\n          routeNames,\n          routeParamList,\n          routeGetIdList,\n          routeKeyChanges: Object.keys(routeKeyList).filter(\n            (name) =>\n              name in previousRouteKeyList &&\n              routeKeyList[name] !== previousRouteKeyList[name]\n          ),\n        });\n  }\n\n  const previousNestedParamsRef = React.useRef(route?.params);\n\n  React.useEffect(() => {\n    previousNestedParamsRef.current = route?.params;\n  }, [route?.params]);\n\n  if (route?.params) {\n    const previousParams = previousNestedParamsRef.current;\n\n    let action: CommonActions.Action | undefined;\n\n    if (\n      typeof route.params.state === 'object' &&\n      route.params.state != null &&\n      route.params !== previousParams\n    ) {\n      // If the route was updated with new state, we should reset to it\n      action = CommonActions.reset(route.params.state);\n    } else if (\n      typeof route.params.screen === 'string' &&\n      ((route.params.initial === false && isFirstStateInitialization) ||\n        route.params !== previousParams)\n    ) {\n      // If the route was updated with new screen name and/or params, we should navigate there\n      action = CommonActions.navigate({\n        name: route.params.screen,\n        params: route.params.params,\n        path: route.params.path,\n      });\n    }\n\n    // The update should be limited to current navigator only, so we call the router manually\n    const updatedState = action\n      ? router.getStateForAction(nextState, action, {\n          routeNames,\n          routeParamList,\n          routeGetIdList,\n        })\n      : null;\n\n    nextState =\n      updatedState !== null\n        ? router.getRehydratedState(updatedState, {\n            routeNames,\n            routeParamList,\n            routeGetIdList,\n          })\n        : nextState;\n  }\n\n  const shouldUpdate = state !== nextState;\n\n  useScheduleUpdate(() => {\n    if (shouldUpdate) {\n      // If the state needs to be updated, we'll schedule an update\n      setState(nextState);\n    }\n  });\n\n  // The up-to-date state will come in next render, but we don't need to wait for it\n  // We can't use the outdated state since the screens have changed, which will cause error due to mismatched config\n  // So we override the state object we return to use the latest state as soon as possible\n  state = nextState;\n\n  React.useEffect(() => {\n    // In strict mode, React will double-invoke effects.\n    // So we need to reset the flag if component was not unmounted\n    stateCleanedUp.current = false;\n\n    setKey(navigatorKey);\n\n    if (!getIsInitial()) {\n      // If it's not initial render, we need to update the state\n      // This will make sure that our container gets notifier of state changes due to new mounts\n      // This is necessary for proper screen tracking, URL updates etc.\n      setState(nextState);\n    }\n\n    return () => {\n      // We need to clean up state for this navigator on unmount\n      if (getCurrentState() !== undefined && getKey() === navigatorKey) {\n        setCurrentState(undefined);\n        stateCleanedUp.current = true;\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // In some cases (e.g. route names change), internal state might have changed\n  // But it hasn't been committed yet, so hasn't propagated to the sync external store\n  // During this time, we need to return the internal state in `getState`\n  // Otherwise it can result in inconsistent state during render in children\n  // To avoid this, we use a ref for render phase, and immediately clear it on commit\n  const stateRef = React.useRef<State | null>(state);\n\n  stateRef.current = state;\n\n  useIsomorphicLayoutEffect(() => {\n    stateRef.current = null;\n  });\n\n  const getState = useLatestCallback((): State => {\n    const currentState = getCurrentState();\n\n    return deepFreeze(\n      (isStateInitialized(currentState)\n        ? currentState\n        : initializedState) as State\n    );\n  });\n\n  const emitter = useEventEmitter<EventMapCore<State>>((e) => {\n    const routeNames = [];\n\n    let route: Route<string> | undefined;\n\n    if (e.target) {\n      route = state.routes.find((route) => route.key === e.target);\n\n      if (route?.name) {\n        routeNames.push(route.name);\n      }\n    } else {\n      route = state.routes[state.index];\n      routeNames.push(\n        ...Object.keys(screens).filter((name) => route?.name === name)\n      );\n    }\n\n    if (route == null) {\n      return;\n    }\n\n    const navigation = descriptors[route.key].navigation;\n\n    const listeners = ([] as (((e: any) => void) | undefined)[])\n      .concat(\n        // Get an array of listeners for all screens + common listeners on navigator\n        ...[\n          screenListeners,\n          ...routeNames.map((name) => {\n            const { listeners } = screens[name].props;\n            return listeners;\n          }),\n        ].map((listeners) => {\n          const map =\n            typeof listeners === 'function'\n              ? listeners({ route: route as any, navigation })\n              : listeners;\n\n          return map\n            ? Object.keys(map)\n                .filter((type) => type === e.type)\n                .map((type) => map?.[type])\n            : undefined;\n        })\n      )\n      // We don't want same listener to be called multiple times for same event\n      // So we remove any duplicate functions from the array\n      .filter((cb, i, self) => cb && self.lastIndexOf(cb) === i);\n\n    listeners.forEach((listener) => listener?.(e));\n  });\n\n  useFocusEvents({ state, emitter });\n\n  React.useEffect(() => {\n    emitter.emit({ type: 'state', data: { state } });\n  }, [emitter, state]);\n\n  const { listeners: childListeners, addListener } = useChildListeners();\n\n  const { keyedListeners, addKeyedListener } = useKeyedChildListeners();\n\n  const onAction = useOnAction({\n    router,\n    getState,\n    setState,\n    key: route?.key,\n    actionListeners: childListeners.action,\n    beforeRemoveListeners: keyedListeners.beforeRemove,\n    routerConfigOptions: {\n      routeNames,\n      routeParamList,\n      routeGetIdList,\n    },\n    emitter,\n  });\n\n  const onRouteFocus = useOnRouteFocus({\n    router,\n    key: route?.key,\n    getState,\n    setState,\n  });\n\n  const navigation = useNavigationHelpers<\n    State,\n    ActionHelpers,\n    NavigationAction,\n    EventMap\n  >({\n    id: options.id,\n    onAction,\n    getState,\n    emitter,\n    router,\n    stateRef,\n  });\n\n  useFocusedListenersChildrenAdapter({\n    navigation,\n    focusedListeners: childListeners.focus,\n  });\n\n  useOnGetState({\n    getState,\n    getStateListeners: keyedListeners.getState,\n  });\n\n  const { describe, descriptors } = useDescriptors<\n    State,\n    ActionHelpers,\n    ScreenOptions,\n    EventMap\n  >({\n    state,\n    screens,\n    navigation,\n    screenOptions,\n    screenLayout,\n    onAction,\n    getState,\n    setState,\n    onRouteFocus,\n    addListener,\n    addKeyedListener,\n    router,\n    // @ts-expect-error: this should have both core and custom events, but too much work right now\n    emitter,\n  });\n\n  useCurrentRender({\n    state,\n    navigation,\n    descriptors,\n  });\n\n  const NavigationContent = useComponent((children: React.ReactNode) => {\n    const element =\n      layout != null\n        ? layout({\n            state,\n            descriptors,\n            navigation,\n            children,\n          })\n        : children;\n\n    return (\n      <NavigationHelpersContext.Provider value={navigation}>\n        <PreventRemoveProvider>{element}</PreventRemoveProvider>\n      </NavigationHelpersContext.Provider>\n    );\n  });\n\n  return {\n    state,\n    navigation,\n    describe,\n    descriptors,\n    NavigationContent,\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}