{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.gptQuery=exports.generateImage=void 0;var _asyncToGenerator2=_interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));var _axios=_interopRequireDefault(require(\"axios\"));var BASE_URL='http://47.242.78.104:6088';var gptQuery=exports.gptQuery=function(){var _ref=(0,_asyncToGenerator2.default)(function*(question){if(!question.trim()){throw new Error('问题不能为空');}try{var response=yield _axios.default.post(`${BASE_URL}/i/gpt`,{uid:'a81s',qus:question},{headers:{'Content-Type':'application/json'}});console.log(question);var data=response.data.data;if(!data){throw new Error('接口未返回回答');}return data;}catch(error){var _error$response;throw new Error(((_error$response=error.response)==null||(_error$response=_error$response.data)==null?void 0:_error$response.message)||'请求 GPT 失败');}});return function gptQuery(_x){return _ref.apply(this,arguments);};}();var generateImage=exports.generateImage=function(){var _ref2=(0,_asyncToGenerator2.default)(function*(description){if(!description.trim()){throw new Error('图片描述不能为空');}try{var response=yield _axios.default.post(`${BASE_URL}/i/pic`,{uid:'a81s',picreq:description},{headers:{'Content-Type':'application/json'}});console.log('生图prompt:',description);var data=response.data.data;console.log(response.data);if(!data){throw new Error('接口未返回图片 URL');}return data;}catch(error){var _error$response2;throw new Error(((_error$response2=error.response)==null||(_error$response2=_error$response2.data)==null?void 0:_error$response2.message)||'生成图片失败');}});return function generateImage(_x2){return _ref2.apply(this,arguments);};}();","map":{"version":3,"names":["_axios","_interopRequireDefault","require","BASE_URL","gptQuery","exports","_ref","_asyncToGenerator2","default","question","trim","Error","response","axios","post","uid","qus","headers","console","log","data","error","_error$response","message","_x","apply","arguments","generateImage","_ref2","description","picreq","_error$response2","_x2"],"sources":["/Users/primopan/WebstormProjects/AsdLanguauge/AsdLanguage/SourceCode/utils/api.js"],"sourcesContent":["import axios from 'axios';\n\n// 配置 API 基础 URL\nconst BASE_URL = 'http://47.242.78.104:6088';\n\n/**\n * GPT 问答接口\n * @param {string} question - 用户的问题\n * @returns {Promise<string>} - 返回 GPT 的回答\n */\nexport const gptQuery = async (question) => {\n    if (!question.trim()) {\n        throw new Error('问题不能为空');\n    }\n\n    try {\n        const response = await axios.post(\n            `${BASE_URL}/i/gpt`,\n            {\n                uid: 'a81s', // 替换为后端提供的用户标识\n                qus: question,\n            },\n            {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            }\n        );\n        console.log(question);\n        const { data } = response.data;\n        if (!data) {\n            throw new Error('接口未返回回答');\n        }\n        return data; // 返回 GPT 的回答\n    } catch (error) {\n        throw new Error(error.response?.data?.message || '请求 GPT 失败');\n    }\n};\n\n/**\n * 图像生成接口\n * @param {string} description - 图片描述\n * @returns {Promise<string>} - 返回生成的图片 URL\n */\nexport const generateImage = async (description) => {\n    if (!description.trim()) {\n        throw new Error('图片描述不能为空');\n    }\n\n    try {\n        const response = await axios.post(\n            `${BASE_URL}/i/pic`,\n            {\n                uid: 'a81s', // 替换为后端提供的用户标识\n                picreq: description,\n            },\n            {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            }\n        );\n        console.log('生图prompt:',description);\n        const { data } = response.data;\n        console.log(response.data);\n        if (!data) {\n            throw new Error('接口未返回图片 URL');\n        }\n        return data; // 返回图片 URL\n    } catch (error) {\n        throw new Error(error.response?.data?.message || '生成图片失败');\n    }\n};\n"],"mappings":"4RAAA,IAAAA,MAAA,CAAAC,sBAAA,CAAAC,OAAA,WAGA,GAAM,CAAAC,QAAQ,CAAG,2BAA2B,CAOrC,GAAM,CAAAC,QAAQ,CAAAC,OAAA,CAAAD,QAAA,gBAAAE,IAAA,IAAAC,kBAAA,CAAAC,OAAA,EAAG,UAAOC,QAAQ,CAAK,CACxC,GAAI,CAACA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAE,CAClB,KAAM,IAAI,CAAAC,KAAK,CAAC,QAAQ,CAAC,CAC7B,CAEA,GAAI,CACA,GAAM,CAAAC,QAAQ,MAAS,CAAAC,cAAK,CAACC,IAAI,CAC7B,GAAGX,QAAQ,QAAQ,CACnB,CACIY,GAAG,CAAE,MAAM,CACXC,GAAG,CAAEP,QACT,CAAC,CACD,CACIQ,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CACJ,CACJ,CAAC,CACDC,OAAO,CAACC,GAAG,CAACV,QAAQ,CAAC,CACrB,GAAQ,CAAAW,IAAI,CAAKR,QAAQ,CAACQ,IAAI,CAAtBA,IAAI,CACZ,GAAI,CAACA,IAAI,CAAE,CACP,KAAM,IAAI,CAAAT,KAAK,CAAC,SAAS,CAAC,CAC9B,CACA,MAAO,CAAAS,IAAI,CACf,CAAE,MAAOC,KAAK,CAAE,KAAAC,eAAA,CACZ,KAAM,IAAI,CAAAX,KAAK,CAAC,EAAAW,eAAA,CAAAD,KAAK,CAACT,QAAQ,UAAAU,eAAA,CAAdA,eAAA,CAAgBF,IAAI,eAApBE,eAAA,CAAsBC,OAAO,GAAI,WAAW,CAAC,CACjE,CACJ,CAAC,iBA3BY,CAAAnB,QAAQA,CAAAoB,EAAA,SAAAlB,IAAA,CAAAmB,KAAA,MAAAC,SAAA,OA2BpB,CAOM,GAAM,CAAAC,aAAa,CAAAtB,OAAA,CAAAsB,aAAA,gBAAAC,KAAA,IAAArB,kBAAA,CAAAC,OAAA,EAAG,UAAOqB,WAAW,CAAK,CAChD,GAAI,CAACA,WAAW,CAACnB,IAAI,CAAC,CAAC,CAAE,CACrB,KAAM,IAAI,CAAAC,KAAK,CAAC,UAAU,CAAC,CAC/B,CAEA,GAAI,CACA,GAAM,CAAAC,QAAQ,MAAS,CAAAC,cAAK,CAACC,IAAI,CAC7B,GAAGX,QAAQ,QAAQ,CACnB,CACIY,GAAG,CAAE,MAAM,CACXe,MAAM,CAAED,WACZ,CAAC,CACD,CACIZ,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CACJ,CACJ,CAAC,CACDC,OAAO,CAACC,GAAG,CAAC,WAAW,CAACU,WAAW,CAAC,CACpC,GAAQ,CAAAT,IAAI,CAAKR,QAAQ,CAACQ,IAAI,CAAtBA,IAAI,CACZF,OAAO,CAACC,GAAG,CAACP,QAAQ,CAACQ,IAAI,CAAC,CAC1B,GAAI,CAACA,IAAI,CAAE,CACP,KAAM,IAAI,CAAAT,KAAK,CAAC,aAAa,CAAC,CAClC,CACA,MAAO,CAAAS,IAAI,CACf,CAAE,MAAOC,KAAK,CAAE,KAAAU,gBAAA,CACZ,KAAM,IAAI,CAAApB,KAAK,CAAC,EAAAoB,gBAAA,CAAAV,KAAK,CAACT,QAAQ,UAAAmB,gBAAA,CAAdA,gBAAA,CAAgBX,IAAI,eAApBW,gBAAA,CAAsBR,OAAO,GAAI,QAAQ,CAAC,CAC9D,CACJ,CAAC,iBA5BY,CAAAI,aAAaA,CAAAK,GAAA,SAAAJ,KAAA,CAAAH,KAAA,MAAAC,SAAA,OA4BzB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}