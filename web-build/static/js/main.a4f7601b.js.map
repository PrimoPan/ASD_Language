{"version":3,"file":"static/js/main.a4f7601b.js","mappings":"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","sources":["App.tsx","SourceCode/Components/GptTest/index.jsx","SourceCode/Components/ImageGenerator/index.jsx","SourceCode/Components/PinyinSelector.jsx","SourceCode/Createchildren/index.jsx","SourceCode/DisplayStoreData/index.jsx","SourceCode/EnvironmentChoose/index.jsx","SourceCode/GptLearning/index.jsx","SourceCode/LearningMode/LearningMode.js","SourceCode/Login/Login.jsx","SourceCode/Opening/Opening.jsx","SourceCode/store/store.jsx","SourceCode/utils/api.js","index.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import 'react-native-gesture-handler'; // 确保在其他任何导入之前导入这个\n\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { View, Text } from 'react-native';\nimport Opening from './SourceCode/Opening/Opening';\nimport Login from './SourceCode/Login/Login';\nimport CreateChildren from './SourceCode/Createchildren/index.jsx';  // 引入 CreateChildren 组件\nimport DisplayStoreData from \"./SourceCode/DisplayStoreData\";\nimport GptTest from \"./SourceCode/Components/GptTest\";\nimport ImageGenerator from \"./SourceCode/Components/ImageGenerator\"\nimport LearningMode from \"./SourceCode/LearningMode/LearningMode\";\nimport EnvironmentChoose from \"./SourceCode/EnvironmentChoose\";\nimport GptLearning from \"./SourceCode/GptLearning\";\nimport useStore from './SourceCode/store/store'; // 引入 zustand store\n\nconst Stack = createNativeStackNavigator();\n\nconst App = () => {\n    const { user } = useStore(); // 从zustand获取user状态\n\n    return (\n        <NavigationContainer>\n            <Stack.Navigator initialRouteName={user?.username ? \"Login\" : \"Opening\"} screenOptions={{ headerShown: false }}>\n                <Stack.Screen name=\"Opening\" component={Opening} />\n                <Stack.Screen name=\"Login\" component={Login} />\n                <Stack.Screen name=\"CreateChildren\" component={CreateChildren} />\n                <Stack.Screen name=\"GptTest\" component={GptTest}/>\n                <Stack.Screen name=\"ImageGenerator\" component={ImageGenerator}/>\n                <Stack.Screen name='LearningMode' component={LearningMode}/>\n                <Stack.Screen name='EnvironmentChoose' component={EnvironmentChoose}/>\n                <Stack.Screen name='GptLearning' component={GptLearning}/>\n                <Stack.Screen name='DisplayStoreData' component={DisplayStoreData}/>\n            </Stack.Navigator>\n        </NavigationContainer>\n    );\n};\n\nexport default App;\n","import React, { useState } from 'react';\nimport { View, Button, StyleSheet, Text, ScrollView, Image, Alert } from 'react-native';\nimport { gptQuery, generateImage } from '../../utils/api'; // 引入封装的接口\n\nconst GptTest = () => {\n    const [imagesData, setImagesData] = useState([]); // 图片和描述的数据数组\n    const [loading, setLoading] = useState(false); // 加载状态\n    const handleGenerate = async () => {\n        setLoading(true);\n        try {\n            // 调用 GPT 接口生成描述\n            const prompt = \"生成三个描述，每个描述用于图片生成。\";\n            const response = await gptQuery(prompt);\n            const descriptions = JSON.parse(response)?.response || [];\n\n            // 调用图片生成接口为每个描述生成图片\n            const imagePromises = descriptions.map((desc) =>\n                generateImage(desc.描述).then((url) => ({ ...desc, imageUrl: url }))\n            );\n            const generatedImages = await Promise.all(imagePromises);\n\n            setImagesData(generatedImages);\n        } catch (error) {\n            Alert.alert('错误', error.message || '生成失败');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <View style={styles.container}>\n            <Button\n                title={loading ? '处理中...' : '生成图片和描述'}\n                onPress={handleGenerate}\n                disabled={loading}\n            />\n            <ScrollView contentContainerStyle={styles.scrollContainer}>\n                {imagesData.map((item, index) => (\n                    <View key={index} style={styles.card}>\n                        <Image source={{ uri: item.imageUrl }} style={styles.image} resizeMode=\"contain\" />\n                        <Text style={styles.description}>{item.描述}</Text>\n                    </View>\n                ))}\n            </ScrollView>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        padding: 16,\n        backgroundColor: '#f5f5f5',\n    },\n    scrollContainer: {\n        alignItems: 'center',\n        paddingVertical: 16,\n    },\n    card: {\n        marginBottom: 20,\n        padding: 16,\n        borderWidth: 1,\n        borderColor: '#ccc',\n        borderRadius: 8,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        width: '90%',\n    },\n    image: {\n        width: '100%',\n        height: 200,\n        borderRadius: 8,\n        marginBottom: 12,\n    },\n    description: {\n        fontSize: 14,\n        color: '#333',\n        textAlign: 'center',\n    },\n});\n\nexport default GptTest;\n","import React, { useState } from 'react';\nimport { View, TextInput, Button, StyleSheet, Image, Alert, ScrollView } from 'react-native';\nimport axios from 'axios';\n\nconst ImageGenerator = () => {\n    const [description, setDescription] = useState(''); // 用户输入的图片描述\n    const [imageUrl, setImageUrl] = useState(''); // 返回的图片 URL\n    const [loading, setLoading] = useState(false); // 请求状态\n\n    const handleGenerateImage = async () => {\n        if (!description.trim()) {\n            Alert.alert('错误', '请输入图片描述！');\n            return;\n        }\n\n        setLoading(true);\n        try {\n            const response = await axios.post(\n                'http://47.242.78.104:6088/i/pic', // 文生图接口地址\n                {\n                    uid: 'a81s', // 替换为后端提供的用户标识\n                    picreq: description, // 用户输入的描述\n                },\n                {\n                    headers: {\n                        'Content-Type': 'application/json', // 设置请求头\n                    },\n                }\n            );\n\n            const { data } = response.data; // 获取返回的图片 URL\n            setImageUrl(data); // 设置图片 URL\n        } catch (error) {\n            console.error('请求失败:', error);\n            Alert.alert('错误', '生成图片失败，请重试！');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <ScrollView contentContainerStyle={styles.container}>\n            <TextInput\n                style={styles.input}\n                placeholder=\"请输入图片描述\"\n                value={description}\n                onChangeText={setDescription}\n                editable={!loading} // 禁用输入框防止重复提交\n            />\n            <Button title={loading ? '生成中...' : '生成图片'} onPress={handleGenerateImage} disabled={loading} />\n            {imageUrl ? (\n                <Image\n                    source={{ uri: imageUrl }}\n                    style={styles.image}\n                    resizeMode=\"contain\"\n                />\n            ) : null}\n        </ScrollView>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flexGrow: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        padding: 16,\n        backgroundColor: '#f5f5f5',\n    },\n    input: {\n        width: '100%',\n        padding: 12,\n        marginBottom: 20,\n        borderWidth: 1,\n        borderColor: '#ccc',\n        borderRadius: 8,\n        backgroundColor: '#fff',\n    },\n    image: {\n        width: 300,\n        height: 300,\n        marginTop: 20,\n        borderWidth: 1,\n        borderColor: '#ccc',\n    },\n});\n\nexport default ImageGenerator;\n","import React, { useState } from 'react';\nimport { View, Text, TouchableOpacity, Alert, StyleSheet } from 'react-native';\n\n// 定义声母分组数据\nconst pinyinGroupsByPosition = [\n    { label: '双唇音', initials: ['b', 'p', 'm'] },\n    { label: '唇齿音', initials: ['f'] },\n    { label: '舌面音', initials: ['j', 'q', 'x'] },\n    { label: '舌尖前音', initials: ['z', 'c', 's'] },\n    { label: '舌尖中音', initials: ['d', 't', 'n', 'l'] },\n    { label: '舌尖后音', initials: ['zh', 'ch', 'sh', 'r'] },\n    { label: '舌根音', initials: ['g', 'k', 'h'] },\n];\n\nconst pinyinGroupsByStage = [\n    { label: '构音第一阶段', initials: ['b', 'm', 'd', 'h'] },\n    { label: '构音第二阶段', initials: ['p', 't', 'g', 'k', 'n'] },\n    { label: '构音第三阶段', initials: ['f', 'j', 'q', 'x'] },\n    { label: '构音第四阶段', initials: ['l', 'z', 's', 'r'] },\n    { label: '构音第五阶段', initials: ['c', 'zh', 'ch', 'sh'] },\n];\n\nconst PinyinSelector = ({\n                            selectedInitials,\n                            onSelectedInitialsChange,\n                            maxCount = 3,\n                        }) => {\n    const [arrangement, setArrangement] = useState('position'); // 当前排列方式\n\n    // 根据排列方式动态选择分组数据\n    const pinyinGroups =\n        arrangement === 'position' ? pinyinGroupsByPosition : pinyinGroupsByStage;\n\n    const handlePress = (initial) => {\n        if (selectedInitials.includes(initial)) {\n            const newSelected = selectedInitials.filter((item) => item !== initial);\n            onSelectedInitialsChange(newSelected);\n            return;\n        }\n        if (selectedInitials.length < maxCount) {\n            const newSelected = [...selectedInitials, initial];\n            onSelectedInitialsChange(newSelected);\n        } else {\n            Alert.alert('提示', `最多只能选择${maxCount}个生母`);\n        }\n    };\n\n    return (\n        <View>\n            {/* 切换排列方式的按钮 */}\n            <View style={styles.buttonGroup}>\n                <TouchableOpacity\n                    style={[\n                        styles.switchButton,\n                        arrangement === 'position' && styles.activeButton,\n                    ]}\n                    onPress={() => setArrangement('position')}\n                >\n                    <Text\n                        style={[\n                            styles.switchButtonText,\n                            arrangement === 'position' && styles.activeButtonText,\n                        ]}\n                    >\n                        声母发生部位\n                    </Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                    style={[\n                        styles.switchButton,\n                        arrangement === 'stage' && styles.activeButton,\n                    ]}\n                    onPress={() => setArrangement('stage')}\n                >\n                    <Text\n                        style={[\n                            styles.switchButtonText,\n                            arrangement === 'stage' && styles.activeButtonText,\n                        ]}\n                    >\n                        构音阶段\n                    </Text>\n                </TouchableOpacity>\n            </View>\n\n            {/* 渲染拼音按钮 */}\n            {pinyinGroups.map((group) => (\n                <View key={group.label} style={styles.groupContainer}>\n                    <Text style={styles.groupLabel}>{group.label}</Text>\n                    <View style={styles.groupRow}>\n                        {group.initials.map((initial) => {\n                            const isSelected = selectedInitials.includes(initial);\n                            return (\n                                <TouchableOpacity\n                                    key={initial}\n                                    style={[\n                                        styles.pinyinButton,\n                                        {\n                                            backgroundColor: isSelected\n                                                ? '#2980b9'\n                                                : '#bdc3c7',\n                                        },\n                                    ]}\n                                    onPress={() => handlePress(initial)}\n                                >\n                                    <Text style={styles.pinyinText}>{initial}</Text>\n                                </TouchableOpacity>\n                            );\n                        })}\n                    </View>\n                </View>\n            ))}\n        </View>\n    );\n};\n\nexport default PinyinSelector;\n\n// 样式表\nconst styles = StyleSheet.create({\n    buttonGroup: {\n        flexDirection: 'row',\n        justifyContent: 'center',\n        marginBottom: 15,\n    },\n    switchButton: {\n        paddingVertical: 8,\n        paddingHorizontal: 16,\n        marginHorizontal: 5,\n        borderRadius: 6,\n        backgroundColor: '#bdc3c7',\n    },\n    activeButton: {\n        backgroundColor: '#2980b9',\n    },\n    switchButtonText: {\n        color: '#fff',\n        fontWeight: 'bold',\n    },\n    activeButtonText: {\n        color: '#fff',\n    },\n    groupContainer: {\n        marginBottom: 10,\n    },\n    groupLabel: {\n        fontSize: 14,\n        color: '#555',\n        marginBottom: 5,\n    },\n    groupRow: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n    },\n    pinyinButton: {\n        width: 50,\n        marginRight: 8,\n        marginBottom: 6,\n        paddingVertical: 8,\n        borderRadius: 6,\n        alignItems: 'center',\n    },\n    pinyinText: {\n        color: '#fff',\n        fontWeight: 'bold',\n    },\n});\n","import React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  Alert,\n  StyleSheet,\n  Dimensions,\n  Image,\n  ScrollView,\n} from 'react-native';\n\n// 如果需要真机拍照，可引入 camera 方法：\n// import { launchCamera } from 'react-native-image-picker';\n\nimport useStore from '../store/store';\nimport { useNavigation } from '@react-navigation/native';\nimport PinyinSelector from '../Components/PinyinSelector';\n\nconst CreateChildren = () => {\n  const navigation = useNavigation();\n  const currentChildren = useStore((state) => state.currentChildren);\n  const setCurrentChildren = useStore((state) => state.setCurrentChildren);\n\n  // =============== 表单状态 ===============\n  const [name, setName] = useState(currentChildren?.name || '');\n  const [age, setAge] = useState(currentChildren?.age || '');\n  const [gender, setGender] = useState(currentChildren?.gender || '');\n  const [courseDuration, setCourseDuration] = useState(\n      currentChildren?.courseDuration || ''\n  );\n  const [reinforcements, setReinforcements] = useState(\n      currentChildren?.reinforcements || []\n  );\n  const [naming, setNaming] = useState(currentChildren?.['命名'] || '');\n  const [languageStructure, setLanguageStructure] = useState(\n      currentChildren?.['语言结构'] || ''\n  );\n  const [dialogue, setDialogue] = useState(currentChildren?.['对话'] || '');\n  const [selectedInitials, setSelectedInitials] = useState(\n      currentChildren?.selectedInitials || []\n  );\n  const [imageStyle, setImageStyle] = useState(currentChildren?.imageStyle || '');\n\n  // 图片占位\n  const [childImage, setChildImage] = useState(currentChildren?.childImage || '');\n\n  // =============== 强化物逻辑 ===============\n  // 每条新 Reinforcement 带上 categoryIndex，避免删除串行\n  const addReinforcement = (categoryIndex) => {\n    const itemsInCat = reinforcements.filter(\n        (r) => r.categoryIndex === categoryIndex\n    );\n    if (itemsInCat.length >= 3) {\n      Alert.alert('提示', '每个分类最多只能添加 3 个强化物');\n      return;\n    }\n    setReinforcements([\n      ...reinforcements,\n      { id: Date.now(), value: '', categoryIndex },\n    ]);\n  };\n  const removeReinforcement = (id) => {\n    setReinforcements(reinforcements.filter((item) => item.id !== id));\n  };\n  const updateReinforcement = (id, value) => {\n    const updated = reinforcements.map((item) =>\n        item.id === id ? { ...item, value } : item\n    );\n    setReinforcements(updated);\n  };\n\n  // =============== 上传头像逻辑 (仅示例) ===============\n  const handleOpenCamera = () => {\n    // 若需要真机拍照，可使用 react-native-image-picker:\n    // launchCamera({ mediaType: 'photo' }, (res) => { ... })\n    Alert.alert(\n        '提示',\n        '这里可以调用相机/相册逻辑，拍摄或选择图片后更新 childImage。'\n    );\n  };\n\n  // =============== 提交 ===============\n  const handleSubmit = () => {\n    const currentTime = new Date().toISOString();\n    const formData = {\n      name,\n      age,\n      gender,\n      courseDuration,\n      reinforcements,\n      '命名': naming,\n      '语言结构': languageStructure,\n      '对话': dialogue,\n      selectedInitials,\n      createdAt: currentTime,\n      childImage,\n    };\n    Alert.alert('提交成功', JSON.stringify(formData, null, 2));\n    setCurrentChildren(formData);\n    navigation.replace('LearningMode');\n  };\n  const isSubmitDisabled = !name || !age || !gender || !courseDuration;\n\n  // =============== 按分类渲染强化物 ===============\n  const renderReinforcementsByCategoryIndex = (categoryIndex, title) => {\n    const items = reinforcements.filter((r) => r.categoryIndex === categoryIndex);\n\n    return (\n        <View style={{ marginTop: 10 }}>\n          <Text style={styles.categoryTitle}>{title}</Text>\n          <View style={styles.reinforcementContainer}>\n            {items.map((item) => (\n                <View key={item.id} style={styles.reinforcementItem}>\n                  <TextInput\n                      placeholder=\"输入强化物\"\n                      value={item.value}\n                      onChangeText={(val) => updateReinforcement(item.id, val)}\n                      style={styles.reinforcementInput}\n                  />\n                  {/* -号按钮 (红) */}\n                  <TouchableOpacity\n                      style={styles.deleteButton}\n                      onPress={() => removeReinforcement(item.id)}\n                  >\n                    <Text style={styles.deleteButtonText}>-</Text>\n                  </TouchableOpacity>\n                </View>\n            ))}\n\n            {/* +号按钮 (蓝)；与 - 按钮大小一致 */}\n            {items.length < 3 && (\n                <TouchableOpacity\n                    style={styles.addButton}\n                    onPress={() => addReinforcement(categoryIndex)}\n                >\n                  <Text style={styles.addButtonText}>+</Text>\n                </TouchableOpacity>\n            )}\n          </View>\n        </View>\n    );\n  };\n\n  return (\n      <ScrollView\n          style={styles.outerContainer}\n          contentContainerStyle={{ paddingBottom: 40 }}\n      >\n        <View style={styles.container}>\n          {/* 左列 */}\n          <View style={styles.leftColumn}>\n            {/* 1. 上传头像卡片 */}\n            <View style={[styles.card]}>\n              <View style={styles.avatarWrapper}>\n                <TouchableOpacity style={styles.avatarCircle} onPress={handleOpenCamera}>\n                  {childImage ? (\n                      // 若已有图片，则显示\n                      <Image style={styles.avatarImage} source={{ uri: childImage }} />\n                  ) : (\n                      // 否则占位：居中的 大+ 和文字\n                      <>\n                        <Text style={styles.uploadPlaceholder}>+</Text>\n                        <Text style={styles.uploadText}>上传头像</Text>\n                      </>\n                  )}\n                </TouchableOpacity>\n              </View>\n            </View>\n\n            {/* 2. 个人信息 */}\n            <View style={[styles.card]}>\n              <Text style={styles.cardHeader}>个人信息</Text>\n              {/* 姓名 + 年龄 */}\n              <View style={styles.row}>\n                <TextInput\n                    placeholder=\"姓名\"\n                    value={name}\n                    onChangeText={setName}\n                    style={[styles.input, { flex: 1, marginRight: 10 }]}\n                />\n                <TextInput\n                    placeholder=\"年龄\"\n                    value={age}\n                    onChangeText={setAge}\n                    keyboardType=\"numeric\"\n                    style={[styles.input, { flex: 1 }]}\n                />\n              </View>\n              {/* 性别 + 课程周期 */}\n              <View style={[styles.row, { marginTop: 10 }]}>\n                <Text style={[styles.label, { marginRight: 5 }]}>性别:</Text>\n                <View style={styles.radioGroup}>\n                  <TouchableOpacity\n                      style={styles.radioOption}\n                      onPress={() => setGender('male')}\n                  >\n                    <View\n                        style={[\n                          styles.radioCircle,\n                          gender === 'male' && { borderColor: '#2980b9' },\n                        ]}\n                    >\n                      {gender === 'male' && (\n                          <View style={[styles.radioSelected, { backgroundColor: '#2980b9' }]} />\n                      )}\n                    </View>\n                    <Text style={styles.radioLabel}>男</Text>\n                  </TouchableOpacity>\n\n                  <TouchableOpacity\n                      style={styles.radioOption}\n                      onPress={() => setGender('female')}\n                  >\n                    <View\n                        style={[\n                          styles.radioCircle,\n                          gender === 'female' && { borderColor: '#2980b9' },\n                        ]}\n                    >\n                      {gender === 'female' && (\n                          <View style={[styles.radioSelected, { backgroundColor: '#2980b9' }]} />\n                      )}\n                    </View>\n                    <Text style={styles.radioLabel}>女</Text>\n                  </TouchableOpacity>\n                </View>\n\n                <TextInput\n                    placeholder=\"课程周期\"\n                    value={courseDuration}\n                    onChangeText={setCourseDuration}\n                    style={[styles.input, { flex: 1, marginLeft: 10 }]}\n                />\n\n              </View>\n            </View>\n            <View style={styles.card}>\n              <Text style={[styles.label, { marginRight: 5 }]}>图片风格:</Text>\n              <View style={styles.radioGroup}>\n                <TouchableOpacity\n                    style={styles.radioOption}\n                    onPress={() => setImageStyle('realistic')}\n                >\n                  <View\n                      style={[\n                        styles.radioCircle,\n                        imageStyle === 'realistic' && { borderColor: '#2980b9' },\n                      ]}\n                  >\n                    {imageStyle === 'realistic' && (\n                        <View\n                            style={[styles.radioSelected, { backgroundColor: '#2980b9' }]}\n                        />\n                    )}\n                  </View>\n                  <Text style={styles.radioLabel}>写实风格</Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity\n                    style={styles.radioOption}\n                    onPress={() => setImageStyle('cartoon')}\n                >\n                  <View\n                      style={[\n                        styles.radioCircle,\n                        imageStyle === 'cartoon' && { borderColor: '#2980b9' },\n                      ]}\n                  >\n                    {imageStyle === 'cartoon' && (\n                        <View\n                            style={[styles.radioSelected, { backgroundColor: '#2980b9' }]}\n                        />\n                    )}\n                  </View>\n                  <Text style={styles.radioLabel}>卡通风格</Text>\n                </TouchableOpacity>\n              </View>\n            </View>\n            {/* 3. 强化物偏好 */}\n            <View style={[styles.card]}>\n              <Text style={styles.cardHeader}>强化物偏好</Text>\n              {renderReinforcementsByCategoryIndex(0, '实物类')}\n              {renderReinforcementsByCategoryIndex(1, '食物类')}\n              {renderReinforcementsByCategoryIndex(2, '活动类')}\n              {renderReinforcementsByCategoryIndex(3, '感官类')}\n              {renderReinforcementsByCategoryIndex(4, '社交类')}\n            </View>\n          </View>\n\n          {/* 右列 */}\n          <View style={styles.rightColumn}>\n            {/* 里程碑记录 */}\n            <View style={styles.card}>\n              <Text style={styles.cardHeader}>里程碑记录</Text>\n              {/* 示例：你也可以在这里放命名、语言结构、对话等输入框 */}\n              <Text style={[styles.label, { marginTop: 8 }]}>命名</Text>\n              <TextInput\n                  placeholder=\"请输入数值\"\n                  value={naming}\n                  onChangeText={setNaming}\n                  style={[styles.input, { width: '60%' }]}\n                  keyboardType=\"numeric\"\n              />\n              <Text style={[styles.label, { marginTop: 8 }]}>语言结构</Text>\n              <TextInput\n                  placeholder=\"请输入数值\"\n                  value={languageStructure}\n                  onChangeText={setLanguageStructure}\n                  style={[styles.input, { width: '60%' }]}\n                  keyboardType=\"numeric\"\n              />\n              <Text style={[styles.label, { marginTop: 8 }]}>对话</Text>\n              <TextInput\n                  placeholder=\"请输入数值\"\n                  value={dialogue}\n                  onChangeText={setDialogue}\n                  style={[styles.input, { width: '60%' }]}\n                  keyboardType=\"numeric\"\n              />\n            </View>\n\n            {/* 拼音组件 */}\n            <View style={styles.card}>\n              <Text style={styles.cardHeader}>需要学习的生母（最多选3）</Text>\n              <PinyinSelector\n                  selectedInitials={selectedInitials}\n                  onSelectedInitialsChange={setSelectedInitials}\n                  maxCount={3}\n              />\n            </View>\n          </View>\n        </View>\n\n        {/* 提交按钮 (随内容滚动) */}\n        <View style={styles.submitContainer}>\n          <TouchableOpacity\n              style={[styles.submitButton, isSubmitDisabled && styles.submitButtonDisabled]}\n              onPress={!isSubmitDisabled ? handleSubmit : null}\n          >\n            <Text style={styles.submitText}>提 交</Text>\n          </TouchableOpacity>\n        </View>\n      </ScrollView>\n  );\n};\n\nexport default CreateChildren;\n\n// ========== 样式表 ==========\n\nconst screenWidth = Dimensions.get('window').width;\nconst styles = StyleSheet.create({\n  outerContainer: {\n    flex: 1,\n    backgroundColor: '#DBF6FF', // 页面底色\n    paddingHorizontal: 20,\n    paddingTop: 20,   // 上方留血线\n  },\n  container: {\n    flexDirection: 'row',\n    // 不使用 justifyContent: 'space-between'，让列宽固定\n  },\n  leftColumn: {\n    flex: 0.5,\n    marginRight: 10,\n  },\n  rightColumn: {\n    flex: 0.5,\n    marginLeft: 10,\n  },\n\n  // 各卡片背景统一用 #fff\n  card: {\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    padding: 20,\n    marginBottom: 20,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.15,\n    shadowRadius: 4,\n    elevation: 2,\n  },\n  cardHeader: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: '#1C5B83',\n    marginBottom: 10,\n  },\n  label: {\n    fontSize: 16,\n    color: '#333',\n    fontWeight: '500',\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  input: {\n    borderColor: '#ddd',\n    borderWidth: 1,\n    borderRadius: 6,\n    backgroundColor: '#fff',\n    paddingHorizontal: 10,\n    height: 40,\n    marginVertical: 6,\n  },\n\n  // 性别单选\n  radioGroup: {\n    flexDirection: 'row',\n    marginLeft: 10,\n    flex: 1,\n  },\n  radioOption: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginRight: 15,\n  },\n  radioCircle: {\n    width: 20,\n    height: 20,\n    borderRadius: 10,\n    borderWidth: 2,\n    borderColor: '#bdc3c7',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginRight: 4,\n  },\n  radioSelected: {\n    width: 10,\n    height: 10,\n    borderRadius: 5,\n  },\n  radioLabel: {\n    fontSize: 14,\n    color: '#333',\n  },\n\n  // 强化物分类标题\n  categoryTitle: {\n    fontSize: 16,\n    fontWeight: '500',\n    marginBottom: 4,\n    color: '#333',\n  },\n  reinforcementContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  // 输入框 + 删除按钮\n  reinforcementItem: {\n    width: 140, // 输入框和 - 按钮一起的宽度\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginRight: 10,\n    marginBottom: 10,\n  },\n  reinforcementInput: {\n    flex: 1,\n    borderColor: '#ddd',\n    borderWidth: 1,\n    borderRadius: 6,\n    backgroundColor: '#fff',\n    height: 36,\n    paddingHorizontal: 8,\n    marginRight: 4,\n  },\n  // “+” 按钮 (蓝色)，与 “-” 保持相同大小\n  addButton: {\n    width: 40,\n    height: 40,\n    backgroundColor: '#2980b9',\n    borderRadius: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: 10,\n    marginBottom: 10,\n  },\n  addButtonText: {\n    fontSize: 24,\n    color: '#fff',\n    fontWeight: 'bold',\n  },\n  // “-” 按钮 (红色)，大小与 + 相同\n  deleteButton: {\n    width: 40,\n    height: 40,\n    backgroundColor: '#e74c3c',\n    borderRadius: 20,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  deleteButtonText: {\n    fontSize: 24,\n    color: '#fff',\n    fontWeight: 'bold',\n  },\n\n  // 上传头像\n  avatarWrapper: {\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatarCircle: {\n    width: 120,\n    height: 120,\n    borderRadius: 60,\n    backgroundColor: '#f0f0f0',\n    borderWidth: 1,\n    borderColor: '#ccc',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  avatarImage: {\n    width: 120,\n    height: 120,\n    borderRadius: 60,\n  },\n  uploadPlaceholder: {\n    fontSize: 40,\n    color: '#bbb',\n    marginBottom: 6,\n  },\n  uploadText: {\n    fontSize: 14,\n    color: '#555',\n  },\n\n  // 提交按钮\n  submitContainer: {\n    alignItems: 'center',\n  },\n  submitButton: {\n    backgroundColor: '#2980b9',\n    borderRadius: 8,\n    paddingVertical: 12,\n    paddingHorizontal: 40,\n    alignItems: 'center',\n  },\n  submitButtonDisabled: {\n    backgroundColor: '#bdc3c7',\n  },\n  submitText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#fff',\n  },\n});\n","import React, { useEffect, useState } from 'react';\nimport {\n    View,\n    Text,\n    StyleSheet,\n    ScrollView,\n    TouchableOpacity,\n    ActivityIndicator,\n    Image,\n    Pressable,\n} from 'react-native';\nimport useStore from '../store/store.jsx'; // 导入 zustand store\nimport { gptQuery, generateImage } from '../utils/api'; // 导入 GPT 和生图 API\n\nconst DisplayStoreData = () => {\n    const currentChildren = useStore((state) => state.currentChildren); // 获取 store 中的 currentChildren\n    const learningGoals = useStore((state) => state.learningGoals);     // 获取 store 中的 learningGoals\n\n    const [generatedData, setGeneratedData] = useState(null);     // 保存生成的教学数据\n    const [sceneImage, setSceneImage] = useState(null);           // 保存场景图\n    const [elementImages, setElementImages] = useState([]);       // 保存小元素图\n    const [loading, setLoading] = useState(false);                // 加载状态\n    const [imageLoading, setImageLoading] = useState(false);      // 图片生成加载状态\n\n    // 新增：选中小元素的下标集合\n    const [selectedElements, setSelectedElements] = useState([]);\n\n    // 点击小元素时，切换选中状态\n    const toggleElementSelection = (index) => {\n        setSelectedElements((prevSelected) => {\n            if (prevSelected.includes(index)) {\n                // 如果已选中，则取消选中\n                return prevSelected.filter((i) => i !== index);\n            } else {\n                // 如果未选中，则添加到选中列表\n                return [...prevSelected, index];\n            }\n        });\n    };\n\n    // 生成 GPT 文本\n    const generateData = async () => {\n        setLoading(true);\n        try {\n            const prompt = `请你给我的数据直接以{}包裹，不需要其他任何文字内容.每一次生成的内容与教学步骤不允许与上次一样.每一个步骤都必须详细，且包含三个递进步骤.每一个步骤不得少于50字. 注意一切生成内容要以选中场景与“环境”的描述为优先.1. 如果教学目标里有构音，请生成5个汉语词汇，包含用构音中的几个汉语拼音声母构成的词语，如果 Current Children中有强化物，请结合这些强化物做生成； 2. 根据选中场景中的描述，根据LearningGoals中的‘命名’、‘构音’、‘语言结构’（如果有就生成，如果没有就不生成），返回满足每个对应目标的，和场景结合的教学步骤（注意被教学儿童患有自闭症），每个目标返回A,B,C依次3个步骤。当前数据Current Children: ${JSON.stringify(currentChildren).replace(/\"/g, \"'\")}, Learning Goals: ${JSON.stringify(learningGoals).replace(/\"/g, \"'\")}`;\n            const gptResponse = await gptQuery(prompt); // 调用 GPT API\n            let results;\n            try {\n                results = JSON.parse(gptResponse);\n            } catch (parseError) {\n                console.error('Error parsing GPT response:', parseError);\n                throw new Error('Invalid JSON format in GPT response.');\n            }\n            console.log('Generated Data from GPT:', results);\n            setGeneratedData(results);\n        } catch (error) {\n            console.error('Error generating data from GPT:', error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // 生成图片\n    const generateImages = async () => {\n        setImageLoading(true);\n        try {\n            // 生图 Prompt 示例，可根据实际需求进行细化或修改\n            const scenePrompt = `生成一个简单的卡通风格场景图。绝对不允许出现文字！,场景尽量不要出现人物，如果有，不能超过2人，且全部为中国人，场景尽量较空，绝对不允许出现文字，基于教学目标：${JSON.stringify(\n                learningGoals\n            )}，仅展示环境。`;\n\n            // 假设 GPT 返回的 5 个构音词汇是存放在 generatedData.words 中\n            const elementPrompts =\n                generatedData?.words?.map(\n                    (word) => `接下来你生成的所有元素图都要保证，尽量简单，避免重复元素，避免复杂；生成一个卡通风格小元素图，基于：${word}。`\n                ) || [];\n\n            const sceneResponse = await generateImage(scenePrompt); // 调用生图 API 生成场景图\n            const elementResponses = await Promise.all(\n                elementPrompts.map((prompt) => generateImage(prompt))\n            ); // 调用生图 API 生成小元素图\n            setSceneImage(sceneResponse); // 设置场景图 URL\n            setElementImages(elementResponses); // 设置小元素图 URL 数组\n            setSelectedElements([]); // 重置选中状态\n        } catch (error) {\n            console.error('Error generating images:', error);\n        } finally {\n            setImageLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        // 当 currentChildren 或 learningGoals 改变时，自动重新生成\n        generateData();\n    }, [currentChildren, learningGoals]);\n\n    return (\n        <View style={styles.container}>\n            <ScrollView contentContainerStyle={styles.scrollContainer}>\n                {/* ======== 文本生成结果展示 ======== */}\n                {generatedData && (\n                    <View style={styles.section}>\n                        <Text style={styles.title}>生成的构音词汇</Text>\n                        <Text style={styles.content}>\n                            {generatedData.words?.join(', ') || '无构音数据'}\n                        </Text>\n                    </View>\n                )}\n\n                {generatedData?.['教学步骤'] &&\n                    Object.entries(generatedData['教学步骤']).map(([key, steps]) => (\n                        <View key={key} style={styles.section}>\n                            <Text style={styles.title}>{key} 教学步骤</Text>\n                            {Object.entries(steps).map(([stepKey, stepValue]) => (\n                                <View key={stepKey} style={styles.stepContainer}>\n                                    <Text style={styles.stepKey}>{stepKey}:</Text>\n                                    <Text style={styles.stepValue}>{stepValue}</Text>\n                                </View>\n                            ))}\n                        </View>\n                    ))}\n\n                {/* ======== 图片区域展示 ======== */}\n                {imageLoading ? (\n                    <ActivityIndicator size=\"large\" color=\"#007BFF\" />\n                ) : (\n                    <>\n                        {/* 场景图 */}\n                        <View style={styles.imageContainer}>\n                            {sceneImage && (\n                                <Image\n                                    source={{ uri: sceneImage }}\n                                    style={styles.sceneImage}\n                                    resizeMode=\"contain\" // 确保完整显示\n                                />\n                            )}\n                        </View>\n                        {/* 小元素图（依次排列，点击可选/不选） */}\n                        {elementImages.length > 0 && (\n                            <View style={styles.elementsWrapper}>\n                                {elementImages.map((imgUri, index) => {\n                                    const isSelected = selectedElements.includes(index);\n                                    return (\n                                        <Pressable\n                                            key={index}\n                                            onPress={() => toggleElementSelection(index)}\n                                            style={[\n                                                styles.elementImageWrapper,\n                                                isSelected && styles.selectedBorder,\n                                            ]}\n                                        >\n                                            <Image\n                                                source={{ uri: imgUri }}\n                                                style={styles.elementImage}\n                                            />\n                                        </Pressable>\n                                    );\n                                })}\n                            </View>\n                        )}\n                    </>\n                )}\n            </ScrollView>\n\n            {/* ======== 按钮区域 ======== */}\n            <TouchableOpacity\n                style={[styles.regenerateButton, loading && styles.disabledButton]}\n                onPress={generateData}\n                disabled={loading}\n            >\n                <Text style={styles.buttonText}>\n                    {loading ? '重新生成中...' : '重新生成'}\n                </Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity\n                style={[styles.generateImagesButton, imageLoading && styles.disabledButton]}\n                onPress={generateImages}\n                disabled={imageLoading}\n            >\n                <Text style={styles.buttonText}>\n                    {imageLoading ? '生成图片中...' : '生成图片'}\n                </Text>\n            </TouchableOpacity>\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        padding: 16,\n        backgroundColor: '#f5f5f5',\n    },\n    scrollContainer: {\n        alignItems: 'flex-start',\n        paddingVertical: 16,\n    },\n    section: {\n        marginBottom: 20,\n        padding: 16,\n        borderWidth: 1,\n        borderColor: '#ccc',\n        borderRadius: 8,\n        backgroundColor: '#fff',\n        width: '100%',\n    },\n    title: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        marginBottom: 8,\n    },\n    content: {\n        fontSize: 14,\n        color: '#333',\n        marginBottom: 4,\n    },\n    stepContainer: {\n        marginBottom: 8,\n        paddingLeft: 10,\n    },\n    stepKey: {\n        fontSize: 16,\n        fontWeight: '600',\n        color: '#555',\n    },\n    stepValue: {\n        fontSize: 14,\n        color: '#333',\n    },\n    imageContainer: {\n        width: '100%',\n        height: 300,\n        marginTop: 20,\n    },\n    sceneImage: {\n        width: '100%',\n        height: '100%',\n        borderRadius: 8,\n        marginBottom: 16,\n    },\n    elementsWrapper: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        marginTop: 16,\n        justifyContent: 'center', // 确保元素居中\n        alignItems: 'center', // 确保元素垂直居中\n    },\n    elementImageWrapper: {\n        margin: 5,\n        borderRadius: 8,\n        borderWidth: 2,\n        borderColor: 'transparent',\n        overflow: 'hidden',\n        width: 80, // 限制小元素图的宽度\n        height: 80, // 限制小元素图的高度\n    },\n    elementImage: {\n        width: '100%',\n        height: '100%',\n        borderRadius: 8,\n    },\n    selectedBorder: {\n        borderColor: '#007BFF',\n    },\n    regenerateButton: {\n        marginTop: 16,\n        paddingVertical: 12,\n        paddingHorizontal: 20,\n        backgroundColor: '#007BFF',\n        borderRadius: 8,\n        alignItems: 'center',\n    },\n    generateImagesButton: {\n        marginTop: 16,\n        paddingVertical: 12,\n        paddingHorizontal: 20,\n        backgroundColor: '#28A745',\n        borderRadius: 8,\n        alignItems: 'center',\n    },\n    disabledButton: {\n        backgroundColor: '#ccc',\n    },\n    buttonText: {\n        color: '#fff',\n        fontSize: 16,\n        fontWeight: 'bold',\n    },\n});\n\nexport default DisplayStoreData;\n","import React, { useState } from 'react';\nimport {\n    View,\n    Text,\n    StyleSheet,\n    TouchableOpacity,\n    Alert,\n} from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport useStore from '../store/store';\nimport environmentData from '../Knowledge/Goals.json';\n\nconst getRandomLowestLevelItems = (data, count) => {\n    const allItems = [];\n\n    const traverse = (obj, parentTitle = '') => {\n        Object.entries(obj).forEach(([key, value]) => {\n            if (Array.isArray(value)) {\n                allItems.push({ title: key, parent: parentTitle, items: value });\n            } else {\n                traverse(value, key);\n            }\n        });\n    };\n\n    traverse(data);\n\n    const shuffled = allItems.flatMap((item) =>\n        item.items.map((subItem) => ({ parent: item.parent, title: item.title, content: subItem }))\n    ).sort(() => Math.random() - 0.5);\n\n    return shuffled.slice(0, count);\n};\n\nconst EnvironmentChoose = () => {\n    const navigation = useNavigation();\n    const setLearningGoals = useStore((state) => state.setLearningGoals);\n    const learningGoals = useStore((state) => state.learningGoals || {});\n\n    const [randomItems, setRandomItems] = useState(() => getRandomLowestLevelItems(environmentData.课程, 3));\n    const [selectedItem, setSelectedItem] = useState(null);\n\n    const toggleSelect = (item) => {\n        setSelectedItem(selectedItem === item ? null : item);\n    };\n\n    const handleRegenerate = () => {\n        setRandomItems(getRandomLowestLevelItems(environmentData.课程, 3));\n        setSelectedItem(null);\n    };\n\n    const handleSubmit = () => {\n        const updatedGoals = {\n            ...learningGoals,\n            环境: selectedItem || \"无\",\n        };\n        setLearningGoals(updatedGoals);\n        Alert.alert('提交成功', JSON.stringify(updatedGoals, null, 2));\n        navigation.navigate('GptLearning');\n    };\n\n    return (\n        <View style={styles.container}>\n            <TouchableOpacity\n                style={styles.backButton}\n                onPress={() => navigation.goBack()}\n            >\n                <Text style={styles.backButtonText}>返回</Text>\n            </TouchableOpacity>\n\n            <Text style={styles.title}>选择环境内容</Text>\n\n            {randomItems.map((item, index) => (\n                <View key={index} style={styles.itemContainer}>\n                    <Text style={styles.parentTitle}>{item.parent} - {item.title}</Text>\n                    <TouchableOpacity\n                        style={[styles.itemButton, selectedItem === item.content && styles.itemButtonSelected]}\n                        onPress={() => toggleSelect(item.content)}\n                    >\n                        <Text style={styles.itemButtonText}>{item.content}</Text>\n                    </TouchableOpacity>\n                </View>\n            ))}\n\n            <TouchableOpacity\n                style={styles.regenerateButton}\n                onPress={handleRegenerate}\n            >\n                <Text style={styles.regenerateButtonText}>重新生成</Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity\n                style={[styles.submitButton, !selectedItem && styles.submitButtonDisabled]}\n                onPress={selectedItem ? handleSubmit : null}\n            >\n                <Text style={styles.submitButtonText}>提交</Text>\n            </TouchableOpacity>\n        </View>\n    );\n};\n\nexport default EnvironmentChoose;\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        padding: 20,\n        backgroundColor: '#F2F2F2',\n    },\n    backButton: {\n        marginBottom: 20,\n        paddingVertical: 10,\n        paddingHorizontal: 15,\n        backgroundColor: '#bdc3c7',\n        borderRadius: 6,\n        alignSelf: 'flex-start',\n    },\n    backButtonText: {\n        color: '#fff',\n        fontSize: 14,\n        fontWeight: '600',\n    },\n    title: {\n        fontSize: 20,\n        fontWeight: '600',\n        marginBottom: 20,\n        textAlign: 'center',\n    },\n    itemContainer: {\n        marginBottom: 20,\n    },\n    parentTitle: {\n        fontSize: 16,\n        fontWeight: '600',\n        marginBottom: 10,\n    },\n    itemButton: {\n        paddingVertical: 15,\n        borderRadius: 8,\n        backgroundColor: '#bdc3c7',\n        alignItems: 'center',\n    },\n    itemButtonSelected: {\n        backgroundColor: '#2980b9',\n    },\n    itemButtonText: {\n        color: '#fff',\n        fontSize: 16,\n        fontWeight: '600',\n    },\n    regenerateButton: {\n        marginTop: 20,\n        paddingVertical: 15,\n        borderRadius: 8,\n        backgroundColor: '#f39c12',\n        alignItems: 'center',\n    },\n    regenerateButtonText: {\n        color: '#fff',\n        fontSize: 16,\n        fontWeight: '600',\n    },\n    submitButton: {\n        marginTop: 20,\n        paddingVertical: 15,\n        borderRadius: 8,\n        backgroundColor: '#27ae60',\n        alignItems: 'center',\n    },\n    submitButtonDisabled: {\n        backgroundColor: '#bdc3c7',\n    },\n    submitButtonText: {\n        color: '#fff',\n        fontSize: 16,\n        fontWeight: '600',\n    },\n});\n","import React, { useEffect, useState } from 'react';\nimport {\n    View,\n    Text,\n    StyleSheet,\n    Alert,\n    ScrollView,\n    Image,\n    TouchableOpacity,\n    ActivityIndicator,\n} from 'react-native';\nimport { useNavigation } from '@react-navigation/native'; // 导入导航功能\nimport { gptQuery, generateImage } from '../utils/api'; // 导入 GPT 和图片生成 API\nimport useStore from '../store/store.jsx'; // 导入 zustand store\n\nconst GptLearning = () => {\n    const navigation = useNavigation(); // 获取导航对象\n    const [scenesData, setScenesData] = useState([]); // 场景和图片数据\n    const [loading, setLoading] = useState(false); // 加载状态\n    const [regenerateLoading, setRegenerateLoading] = useState([]); // 单独场景重新生成的加载状态\n    const [selectedScene, setSelectedScene] = useState(null); // 选中的场景\n    const learningGoals = useStore((state) => state.learningGoals); // 获取 store 中的 learningGoals\n    const setLearningGoals = useStore((state) => state.setLearningGoals); // 更新 store 中的 learningGoals\n\n    useEffect(() => {\n        const fetchLearningContent = async () => {\n            setLoading(true);\n            try {\n                const prompt = `基于以下环境要求生成三个场景：${learningGoals?.环境 || '默认环境'}`;\n                const gptResponse = await gptQuery(prompt); // 调用 GPT API\n                const scenes = JSON.parse(gptResponse)?.response || [];\n                console.log('GPT Scenes:', scenes);\n\n                // 为每个场景生成卡通风格图片\n                const imagePromises = scenes.map((scene) =>\n                    generateImage(`绝对不允许出现文字。卡通风格。重要：场景尽量人物较少，不允许超过2个人，且全部为中国人，场景尽量较空，绝对不允许出现文字。以下是场景描述${scene.描述}`).then((url) => ({ ...scene, imageUrl: url }))\n                );\n                const generatedScenes = await Promise.all(imagePromises);\n                setScenesData(generatedScenes);\n\n                Alert.alert('学习成功', 'GPT 已学习内容并生成反馈。');\n            } catch (error) {\n                console.error('学习失败:', error);\n                Alert.alert('错误', error.message || '学习内容失败，请重试。');\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchLearningContent();\n    }, [learningGoals]); // 监听 learningGoals 的变化\n\n    const handleRegenerate = async (index, description) => {\n        setRegenerateLoading((prev) => {\n            const newLoading = [...prev];\n            newLoading[index] = true;\n            return newLoading;\n        });\n        try {\n            const newImageUrl = await generateImage(`${description}，卡通风格`);\n            setScenesData((prev) =>\n                prev.map((scene, i) => (i === index ? { ...scene, imageUrl: newImageUrl } : scene))\n            );\n        } catch (error) {\n            console.error('重新生成失败:', error);\n            Alert.alert('错误', '无法重新生成图片，请重试。');\n        } finally {\n            setRegenerateLoading((prev) => {\n                const newLoading = [...prev];\n                newLoading[index] = false;\n                return newLoading;\n            });\n        }\n    };\n\n    const handleSubmit = () => {\n        if (!selectedScene) {\n            Alert.alert('错误', '请选择一个场景进行提交');\n            return;\n        }\n        const updatedGoals = { ...learningGoals, 选中场景: selectedScene };\n        setLearningGoals(updatedGoals);\n        Alert.alert('提交成功', `选中的场景已更新到学习目标: ${JSON.stringify(updatedGoals, null, 2)}`);\n        navigation.navigate('DisplayStoreData'); // 跳转到 DisplayStoreData 页面\n    };\n\n    return (\n        <View style={styles.container}>\n            <ScrollView contentContainerStyle={styles.scrollContainer}>\n                {loading ? (\n                    <ActivityIndicator size=\"large\" color=\"#007BFF\" />\n                ) : (\n                    scenesData.map((scene, index) => (\n                        <View key={index} style={styles.card}>\n                            <Image source={{ uri: scene.imageUrl }} style={styles.image} resizeMode=\"contain\" />\n                            <Text style={styles.sceneTitle}>{scene.场景}</Text>\n                            <Text style={styles.sceneDescription}>{scene.描述}</Text>\n                            <TouchableOpacity\n                                style={[styles.regenerateButton, regenerateLoading[index] && styles.buttonDisabled]}\n                                onPress={() => handleRegenerate(index, scene.描述)}\n                                disabled={regenerateLoading[index]}\n                            >\n                                {regenerateLoading[index] ? (\n                                    <ActivityIndicator size=\"small\" color=\"#FFF\" />\n                                ) : (\n                                    <Text style={styles.buttonText}>重新生成图片</Text>\n                                )}\n                            </TouchableOpacity>\n                            <TouchableOpacity\n                                style={\n                                    selectedScene === scene\n                                        ? [styles.selectButton, styles.selected]\n                                        : styles.selectButton\n                                }\n                                onPress={() => setSelectedScene(scene)}\n                            >\n                                <Text style={styles.buttonText}>\n                                    {selectedScene === scene ? '已选中' : '选择此场景'}\n                                </Text>\n                            </TouchableOpacity>\n                        </View>\n                    ))\n                )}\n            </ScrollView>\n            <TouchableOpacity\n                style={[\n                    styles.submitButton,\n                    !selectedScene && styles.submitButtonDisabled,\n                ]}\n                onPress={handleSubmit}\n                disabled={!selectedScene}\n            >\n                <Text style={styles.buttonText}>提交选中场景</Text>\n            </TouchableOpacity>\n        </View>\n    );\n};\n\nexport default GptLearning;\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        padding: 16,\n        backgroundColor: '#f5f5f5',\n    },\n    scrollContainer: {\n        alignItems: 'center',\n        paddingVertical: 16,\n    },\n    card: {\n        marginBottom: 20,\n        padding: 16,\n        borderWidth: 1,\n        borderColor: '#ccc',\n        borderRadius: 8,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        width: '90%',\n    },\n    image: {\n        width: '100%',\n        height: 200,\n        borderRadius: 8,\n        marginBottom: 12,\n    },\n    sceneTitle: {\n        fontSize: 18,\n        fontWeight: 'bold',\n        marginBottom: 8,\n        textAlign: 'center',\n    },\n    sceneDescription: {\n        fontSize: 14,\n        color: '#555',\n        textAlign: 'center',\n        marginBottom: 12,\n    },\n    regenerateButton: {\n        paddingVertical: 10,\n        paddingHorizontal: 20,\n        backgroundColor: '#007BFF',\n        borderRadius: 6,\n        marginBottom: 8,\n    },\n    buttonDisabled: {\n        backgroundColor: '#ccc',\n    },\n    selectButton: {\n        paddingVertical: 10,\n        paddingHorizontal: 20,\n        backgroundColor: '#28A745',\n        borderRadius: 6,\n    },\n    selected: {\n        backgroundColor: '#FFC107',\n    },\n    submitButton: {\n        paddingVertical: 15,\n        paddingHorizontal: 20,\n        backgroundColor: '#DC3545',\n        borderRadius: 6,\n        alignItems: 'center',\n        marginVertical: 16,\n    },\n    submitButtonDisabled: {\n        backgroundColor: '#ccc',\n    },\n    buttonText: {\n        color: '#fff',\n        fontSize: 14,\n        fontWeight: 'bold',\n    },\n    feedbackText: {\n        fontSize: 16,\n        color: '#666',\n        textAlign: 'center',\n        marginTop: 20,\n    },\n});\n","import React, { useState, useEffect } from 'react';\nimport {\n    View,\n    Text,\n    StyleSheet,\n    TouchableOpacity,\n    Alert,\n    Dimensions,\n} from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport useStore from '../store/store';\nimport PinyinSelector from '../Components/PinyinSelector';\nimport vbMappData from '../Knowledge/VBMapp.json';\n\nfunction getRandomOne(domain, level) {\n    const numericLevel = parseInt(level, 10);\n    if (isNaN(numericLevel) || numericLevel < 1 || numericLevel > 15) {\n        return null;\n    }\n    const levelKey = String(numericLevel).padStart(2, '0') + '-M';\n    const items = vbMappData[domain]?.[levelKey];\n    if (!items || items.length === 0) {\n        return null;\n    }\n    const subset = items.slice(0, items.length - 1);\n    if (subset.length === 0) {\n        return null;\n    }\n    const randIndex = Math.floor(Math.random() * subset.length);\n    return subset[randIndex];\n}\n\nconst LearningMode = () => {\n    const navigation = useNavigation();\n\n    const initialStoreValue = useStore.getState().currentChildren || {};\n    const savedLearningGoals = useStore.getState().learningGoals || null;\n\n    const namingLevel = initialStoreValue['命名'] || '1';\n    const structureLevel = initialStoreValue['语言结构'] || '1';\n    const dialogueLevel = initialStoreValue['对话'] || '1';\n\n    const [namingSolution, setNamingSolution] = useState(() =>\n        savedLearningGoals?.命名 || getRandomOne('命名', namingLevel)\n    );\n    const [structureSolution, setStructureSolution] = useState(() =>\n        savedLearningGoals?.语言结构 || getRandomOne('语言结构', structureLevel)\n    );\n    const [dialogueSolution, setDialogueSolution] = useState(() =>\n        savedLearningGoals?.对话 || getRandomOne('对话', dialogueLevel)\n    );\n\n    const [selectedInitials, setSelectedInitials] = useState(\n        Array.isArray(savedLearningGoals?.构音)\n            ? savedLearningGoals.构音.split(', ')\n            : Array.isArray(initialStoreValue.selectedInitials)\n                ? initialStoreValue.selectedInitials\n                : []\n    );\n\n    const [moduleSelections, setModuleSelections] = useState({\n        naming: savedLearningGoals ? !!savedLearningGoals.命名 : true,\n        structure: savedLearningGoals ? !!savedLearningGoals.语言结构 : true,\n        dialogue: savedLearningGoals ? !!savedLearningGoals.对话 : true,\n        pinyin: savedLearningGoals ? !!savedLearningGoals.构音 : true,\n    });\n\n    const toggleModuleSelection = (module) => {\n        setModuleSelections((prev) => ({\n            ...prev,\n            [module]: !prev[module],\n        }));\n    };\n\n    const reRandomNaming = () => {\n        setNamingSolution(getRandomOne('命名', namingLevel));\n    };\n    const reRandomStructure = () => {\n        setStructureSolution(getRandomOne('语言结构', structureLevel));\n    };\n    const reRandomDialogue = () => {\n        setDialogueSolution(getRandomOne('对话', dialogueLevel));\n    };\n\n    const handleSubmit = () => {\n        const learningGoals = {\n            构音: moduleSelections.pinyin && selectedInitials.length > 0\n                ? selectedInitials.join(', ')\n                : \"无\",\n            命名: moduleSelections.naming ? namingSolution || \"无\" : \"无\",\n            语言结构: moduleSelections.structure ? structureSolution || \"无\" : \"无\",\n            对话: moduleSelections.dialogue ? dialogueSolution || \"无\" : \"无\",\n        };\n\n        // 更新 learningGoals\n        useStore.setState({ learningGoals });\n\n        // 同步更新 currentChildren 的 selectedInitials\n        const currentChildren = useStore.getState().currentChildren;\n        useStore.setState({\n            currentChildren: {\n                ...currentChildren,\n                selectedInitials: selectedInitials,\n            },\n        });\n\n        Alert.alert('提交的学习目标', JSON.stringify(learningGoals, null, 2));\n        navigation.navigate('EnvironmentChoose');\n    };\n\n\n    useEffect(() => {\n        const syncSelectedInitials = () => {\n            const { currentChildren, learningGoals } = useStore.getState();\n            const initialsFromChildren = currentChildren?.selectedInitials ?? [];\n            const initialsFromGoals = learningGoals?.构音?.split(', ') ?? [];\n\n            // 如果两个值不一致，优先使用 currentChildren 的值同步到 learningGoals\n            if (JSON.stringify(initialsFromChildren) !== JSON.stringify(initialsFromGoals)) {\n                useStore.setState({\n                    learningGoals: {\n                        ...learningGoals,\n                        构音: initialsFromChildren.join(', '),\n                    },\n                });\n            }\n        };\n\n        syncSelectedInitials();\n    }, []);\n\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.leftColumn}>\n                <TouchableOpacity\n                    style={styles.backButton}\n                    onPress={() => navigation.navigate('CreateChildren')}\n                >\n                    <Text style={styles.backButtonText}>回退</Text>\n                </TouchableOpacity>\n                <Text style={styles.title}>拼音选择</Text>\n                <PinyinSelector\n                    selectedInitials={selectedInitials}\n                    onSelectedInitialsChange={setSelectedInitials}\n                    maxCount={3}\n                />\n                <TouchableOpacity\n                    style={[styles.moduleButton, moduleSelections.pinyin && styles.moduleButtonSelected]}\n                    onPress={() => toggleModuleSelection('pinyin')}\n                >\n                    <Text style={styles.moduleButtonText}>本次学习声母</Text>\n                </TouchableOpacity>\n            </View>\n\n            <View style={styles.rightColumn}>\n                <Text style={styles.title}>等级选择</Text>\n\n                <TouchableOpacity\n                    style={[styles.moduleButton, moduleSelections.naming && styles.moduleButtonSelected]}\n                    onPress={() => toggleModuleSelection('naming')}\n                >\n                    <Text style={styles.moduleButtonText}>\n                        命名 (Level: {namingLevel})\n                    </Text>\n                </TouchableOpacity>\n                <RandomItemDisplay solution={namingSolution} />\n                <TouchableOpacity style={styles.randomButton} onPress={reRandomNaming}>\n                    <Text style={styles.randomButtonText}>重新随机</Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity\n                    style={[styles.moduleButton, moduleSelections.structure && styles.moduleButtonSelected]}\n                    onPress={() => toggleModuleSelection('structure')}\n                >\n                    <Text style={styles.moduleButtonText}>\n                        语言结构 (Level: {structureLevel})\n                    </Text>\n                </TouchableOpacity>\n                <RandomItemDisplay solution={structureSolution} />\n                <TouchableOpacity style={styles.randomButton} onPress={reRandomStructure}>\n                    <Text style={styles.randomButtonText}>重新随机</Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity\n                    style={[styles.moduleButton, moduleSelections.dialogue && styles.moduleButtonSelected]}\n                    onPress={() => toggleModuleSelection('dialogue')}\n                >\n                    <Text style={styles.moduleButtonText}>\n                        对话 (Level: {dialogueLevel})\n                    </Text>\n                </TouchableOpacity>\n                <RandomItemDisplay solution={dialogueSolution} />\n                <TouchableOpacity style={styles.randomButton} onPress={reRandomDialogue}>\n                    <Text style={styles.randomButtonText}>重新随机</Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity style={styles.submitButton} onPress={handleSubmit}>\n                    <Text style={styles.submitButtonText}>提交</Text>\n                </TouchableOpacity>\n            </View>\n        </View>\n    );\n};\n\nfunction RandomItemDisplay({ solution }) {\n    if (!solution) {\n        return <Text style={styles.warn}>无可用条目</Text>;\n    }\n    const keyName = Object.keys(solution)[0];\n    const content = solution[keyName];\n    return (\n        <View style={styles.randomBox}>\n            <Text style={styles.randomBoxText}>\n                {keyName}: {content}\n            </Text>\n        </View>\n    );\n}\n\nexport default LearningMode;\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        flexDirection: 'row',\n        backgroundColor: '#F2F2F2',\n    },\n    leftColumn: {\n        flex: 0.5,\n        padding: 20,\n    },\n    rightColumn: {\n        flex: 0.5,\n        padding: 20,\n    },\n    backButton: {\n        marginBottom: 20,\n        paddingVertical: 10,\n        paddingHorizontal: 15,\n        backgroundColor: '#bdc3c7',\n        borderRadius: 6,\n        alignSelf: 'flex-start',\n    },\n    backButtonText: {\n        color: '#fff',\n        fontSize: 14,\n        fontWeight: '600',\n    },\n    title: {\n        fontSize: 20,\n        fontWeight: '600',\n        marginBottom: 10,\n    },\n    moduleButton: {\n        marginTop: 15,\n        paddingVertical: 15,\n        paddingHorizontal: 20,\n        borderRadius: 8,\n        backgroundColor: '#bdc3c7',\n    },\n    moduleButtonSelected: {\n        backgroundColor: '#2980b9',\n    },\n    moduleButtonText: {\n        color: '#fff',\n        fontSize: 16,\n        fontWeight: '600',\n    },\n    randomButton: {\n        marginTop: 10,\n        paddingVertical: 10,\n        paddingHorizontal: 20,\n        borderRadius: 8,\n        backgroundColor: '#27ae60',\n        alignSelf: 'flex-start',\n    },\n    randomButtonText: {\n        color: '#fff',\n        fontSize: 14,\n        fontWeight: '600',\n    },\n    randomBox: {\n        backgroundColor: '#eee',\n        padding: 10,\n        marginVertical: 8,\n        borderRadius: 6,\n    },\n    randomBoxText: {\n        fontSize: 14,\n    },\n    warn: {\n        color: 'red',\n        marginVertical: 8,\n    },\n    submitButton: {\n        marginTop: 20,\n        paddingVertical: 15,\n        paddingHorizontal: 30,\n        borderRadius: 8,\n        backgroundColor: '#27ae60',\n    },\n    submitButtonText: {\n        color: '#fff',\n        fontSize: 16,\n        fontWeight: '600',\n    },\n});\n","import React, { useState } from 'react';\nimport { View, TextInput, Button, Text, StyleSheet } from 'react-native';\nimport useStore from '../store/store'; // 引入 zustand store\n\nconst Login = ({ navigation }) => {  // 获取navigation props\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const { user, setUsername: setUsernameInStore, setUsernameAsync } = useStore();\n\n  const handleLogin = async () => {\n    if (username && password) {\n      try {\n        await setUsernameAsync(username);  // 异步设置用户名\n        alert('登录成功');\n        navigation.replace('CreateChildren');\n      } catch (error) {\n        alert('登录失败，请重试');\n      }\n    } else {\n      alert('请输入用户名和密码');\n    }\n  };\n\n  const handleRegister = () => {\n    if (username && password) {\n      alert('注册成功');\n    } else {\n      alert('请输入用户名和密码');\n    }\n  };\n\n  return (\n      <View style={styles.container}>\n        <Text style={styles.title}>教师登录</Text>\n        <TextInput\n            style={styles.input}\n            placeholder=\"用户名\"\n            value={username}\n            onChangeText={setUsername}\n        />\n        <TextInput\n            style={styles.input}\n            placeholder=\"密码\"\n            value={password}\n            onChangeText={setPassword}\n            secureTextEntry\n        />\n        <Button title=\"登录\" onPress={handleLogin} />\n        <Text style={styles.orText}>或</Text>\n        <Button title=\"注册\" onPress={handleRegister} />\n        {user?.username ? <Text>欢迎, {user.username}!</Text> : null}\n      </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16,\n    backgroundColor: '#E0F7FA', // 修改背景颜色\n  },\n  title: {\n    fontSize: 24,\n    marginBottom: 20,\n  },\n  input: {\n    width: '33%',\n    padding: 12,\n    marginBottom: 10,\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderRadius: 4,\n  },\n  orText: {\n    marginVertical: 10,\n    fontSize: 16,\n  },\n});\n\nexport default Login;\n","import React, { useEffect } from 'react';\nimport { View, Image, StyleSheet } from 'react-native';\nimport useStore from '../store/store'; // 引入 zustand store\n\nconst Opening = ({ navigation }) => {\n    const { user } = useStore(); // 从zustand获取user状态\n\n    useEffect(() => {\n        // 如果用户已登录，直接跳转到 Login 页面，否则 5 秒后跳转到 Login\n        const timer = setTimeout(() => {\n            if (user?.username) {\n                navigation.replace('Login'); // 用户已登录，跳转到登录页面\n            } else {\n                navigation.replace('Login'); // 或者可以跳转到注册页面\n            }\n        }, 5000);\n\n        // 清除定时器\n        return () => clearTimeout(timer);\n    }, [navigation, user?.username]);\n\n    return (\n        <View style={styles.container}>\n            <Image\n                source={require('../../Assets/BG/Opening/Opening.png')}\n                style={styles.image}\n            />\n        </View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: '#E0F7FA',\n    },\n    image: {\n        width: '100%',\n        height: '100%',\n        resizeMode: 'cover',\n    },\n});\n\nexport default Opening;\n","import { create } from 'zustand';\n\nconst useStore = create((set, get) => ({\n    // ============== 原有 username 相关 ==============\n    username: '',\n    setUsername: (payload) => set({ username: payload }),\n    setUsernameAsync: async (payload) => {\n        await new Promise((resolve) => setTimeout(resolve, 1000));\n        set({ username: payload });\n    },\n\n    // ============== currentChildren 相关 ==============\n    currentChildren: {},\n    setCurrentChildren: (data) => {\n        const oldData = get().currentChildren;\n        if (JSON.stringify(oldData) === JSON.stringify(data)) return;\n        set({\n            currentChildren: {\n                ...data,\n                selectedInitials: data.selectedInitials ?? get().learningGoals?.构音?.split(', ') ?? [],\n            },\n        });\n    },\n\n    // ============== learningGoals 相关 ==============\n    /*\n        历史遗留问题，教学目标中的构音需要和currentChildren里的selectedInitials相统一\n     */\n    learningGoals: null,\n    setLearningGoals: (data) => {\n        const oldData = get().learningGoals;\n        if (JSON.stringify(oldData) === JSON.stringify(data)) return;\n        set({\n            learningGoals: {\n                ...data,\n                构音: data.构音 ?? get().currentChildren?.selectedInitials?.join(', ') ?? '无',\n            },\n        });\n    },\n}));\n\nexport default useStore;\n","import axios from 'axios';\n\n// 配置 API 基础 URL\nconst BASE_URL = 'http://47.242.78.104:6088';\n\n/**\n * GPT 问答接口\n * @param {string} question - 用户的问题\n * @returns {Promise<string>} - 返回 GPT 的回答\n */\nexport const gptQuery = async (question) => {\n    if (!question.trim()) {\n        throw new Error('问题不能为空');\n    }\n\n    try {\n        const response = await axios.post(\n            `${BASE_URL}/i/gpt`,\n            {\n                uid: 'a81s', // 替换为后端提供的用户标识\n                qus: question,\n            },\n            {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            }\n        );\n        console.log(question);\n        const { data } = response.data;\n        if (!data) {\n            throw new Error('接口未返回回答');\n        }\n        return data; // 返回 GPT 的回答\n    } catch (error) {\n        throw new Error(error.response?.data?.message || '请求 GPT 失败');\n    }\n};\n\n/**\n * 图像生成接口\n * @param {string} description - 图片描述\n * @returns {Promise<string>} - 返回生成的图片 URL\n */\nexport const generateImage = async (description) => {\n    if (!description.trim()) {\n        throw new Error('图片描述不能为空');\n    }\n\n    try {\n        const response = await axios.post(\n            `${BASE_URL}/i/pic`,\n            {\n                uid: 'a81s', // 替换为后端提供的用户标识\n                picreq: description,\n            },\n            {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            }\n        );\n        console.log('生图prompt:',description);\n        const { data } = response.data;\n        console.log(response.data);\n        if (!data) {\n            throw new Error('接口未返回图片 URL');\n        }\n        return data; // 返回图片 URL\n    } catch (error) {\n        throw new Error(error.response?.data?.message || '生成图片失败');\n    }\n};\n","import React from 'react';\nimport { AppRegistry } from 'react-native';\nimport App from './App'; // 你的主要App组件\nimport { name as appName } from './app.json';\n\nAppRegistry.registerComponent(appName, () => App);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [420], () => (__webpack_require__(45193)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["require","_interopRequireDefault","_native","_nativeStack","_Opening","_Login","_index","_DisplayStoreData","_GptTest","_ImageGenerator","_LearningMode","_EnvironmentChoose","_GptLearning","_store","_jsxRuntime","Stack","createNativeStackNavigator","exports","user","useStore","jsx","NavigationContainer","children","jsxs","Navigator","initialRouteName","username","screenOptions","headerShown","Screen","name","component","Opening","Login","CreateChildren","GptTest","ImageGenerator","LearningMode","EnvironmentChoose","GptLearning","DisplayStoreData","_react","e","r","__esModule","default","t","_getRequireWildcardCache","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","_interopRequireWildcard","_reactNative","_api","WeakMap","styles","StyleSheet","create","container","flex","padding","backgroundColor","scrollContainer","alignItems","paddingVertical","card","marginBottom","borderWidth","borderColor","borderRadius","width","image","height","description","fontSize","color","textAlign","_useState","useState","_useState2","_slicedToArray2","imagesData","setImagesData","_useState3","_useState4","loading","setLoading","handleGenerate","_ref","_asyncToGenerator2","_JSON$parse","response","gptQuery","imagePromises","JSON","parse","map","desc","generateImage","描述","then","url","assign","imageUrl","generatedImages","Promise","all","error","Alert","alert","message","apply","arguments","View","style","Button","title","onPress","disabled","ScrollView","contentContainerStyle","item","index","Image","source","uri","resizeMode","Text","_axios","flexGrow","justifyContent","input","marginTop","setDescription","setImageUrl","_useState5","_useState6","handleGenerateImage","trim","data","axios","post","uid","picreq","headers","console","TextInput","placeholder","value","onChangeText","editable","pinyinGroupsByPosition","label","initials","pinyinGroupsByStage","selectedInitials","onSelectedInitialsChange","_ref$maxCount","maxCount","arrangement","setArrangement","pinyinGroups","buttonGroup","TouchableOpacity","switchButton","activeButton","switchButtonText","activeButtonText","group","groupContainer","groupLabel","groupRow","initial","isSelected","includes","pinyinButton","newSelected","filter","length","concat","_toConsumableArray2","handlePress","pinyinText","flexDirection","paddingHorizontal","marginHorizontal","fontWeight","flexWrap","marginRight","_PinyinSelector","navigation","useNavigation","currentChildren","state","setCurrentChildren","setName","age","setAge","gender","setGender","_useState7","courseDuration","_useState8","setCourseDuration","_useState9","reinforcements","_useState10","setReinforcements","_useState11","_useState12","naming","setNaming","_useState13","_useState14","languageStructure","setLanguageStructure","_useState15","_useState16","dialogue","setDialogue","_useState17","_useState18","setSelectedInitials","_useState19","imageStyle","_useState20","setImageStyle","_useState21","childImage","_useState22","isSubmitDisabled","renderReinforcementsByCategoryIndex","categoryIndex","items","categoryTitle","reinforcementContainer","reinforcementItem","val","id","updated","updateReinforcement","reinforcementInput","deleteButton","deleteButtonText","addButton","Date","now","addReinforcement","addButtonText","outerContainer","paddingBottom","leftColumn","avatarWrapper","avatarCircle","avatarImage","Fragment","uploadPlaceholder","uploadText","cardHeader","row","keyboardType","radioGroup","radioOption","radioCircle","radioSelected","radioLabel","marginLeft","rightColumn","submitContainer","submitButton","submitButtonDisabled","currentTime","toISOString","formData","createdAt","stringify","replace","submitText","Dimensions","paddingTop","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","marginVertical","section","content","stepContainer","paddingLeft","stepKey","stepValue","imageContainer","sceneImage","elementsWrapper","elementImageWrapper","margin","overflow","elementImage","selectedBorder","regenerateButton","generateImagesButton","disabledButton","buttonText","_generatedData$words2","learningGoals","generatedData","setGeneratedData","setSceneImage","elementImages","setElementImages","imageLoading","setImageLoading","selectedElements","setSelectedElements","generateData","results","prompt","gptResponse","parseError","Error","log","generateImages","_ref2","_generatedData$words","scenePrompt","elementPrompts","words","word","sceneResponse","elementResponses","useEffect","join","entries","_ref3","_ref4","key","steps","_ref5","_ref6","ActivityIndicator","size","imgUri","Pressable","prevSelected","toggleElementSelection","_Goals","getRandomLowestLevelItems","count","allItems","traverse","obj","parentTitle","undefined","forEach","Array","isArray","push","parent","flatMap","subItem","sort","Math","random","slice","setLearningGoals","environmentData","课程","randomItems","setRandomItems","selectedItem","setSelectedItem","backButton","goBack","backButtonText","itemContainer","itemButton","itemButtonSelected","toggleSelect","itemButtonText","regenerateButtonText","updatedGoals","环境","navigate","submitButtonText","alignSelf","scenesData","setScenesData","regenerateLoading","setRegenerateLoading","selectedScene","setSelectedScene","fetchLearningContent","scenes","scene","generatedScenes","handleRegenerate","prev","newLoading","newImageUrl","_x","_x2","sceneTitle","场景","sceneDescription","buttonDisabled","selectButton","selected","选中场景","feedbackText","_VBMapp","getRandomOne","domain","level","_vbMappData$domain","numericLevel","parseInt","isNaN","levelKey","String","padStart","vbMappData","subset","floor","RandomItemDisplay","solution","warn","keyName","keys","randomBox","randomBoxText","initialStoreValue","getState","savedLearningGoals","namingLevel","structureLevel","dialogueLevel","命名","namingSolution","setNamingSolution","语言结构","structureSolution","setStructureSolution","对话","dialogueSolution","setDialogueSolution","构音","split","structure","pinyin","moduleSelections","setModuleSelections","toggleModuleSelection","module","_defineProperty2","_currentChildren$sele","_learningGoals$构音$spl","_learningGoals$构音","_useStore$getState","initialsFromChildren","initialsFromGoals","setState","syncSelectedInitials","moduleButton","moduleButtonSelected","moduleButtonText","randomButton","randomButtonText","orText","setUsername","password","setPassword","_useStore","setUsernameAsync","handleLogin","secureTextEntry","timer","setTimeout","clearTimeout","payload","_setUsernameAsync","resolve","_data$selectedInitial","_get$learningGoals","oldData","_data$构音","_get$currentChildren","BASE_URL","question","qus","_error$response","_error$response2","_App","_app","AppRegistry","registerComponent","appName","App","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","d","definition","o","enumerable","g","globalThis","this","Function","window","prop","prototype","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}